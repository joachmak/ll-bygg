{"version":3,"sources":["components/header/llbygg_redusert.png","components/header/Header.tsx","components/NavigationBar.tsx","components/ConfirmDeleteDialog.tsx","components/employees/EmployeeCard.tsx","components/employees/Employees.tsx","components/about/About.tsx","components/services/Services.tsx","components/Footer.tsx","components/contactform/ContactForm.tsx","components/news/Announcement.tsx","components/news/AnnouncementAdmin.tsx","components/news/CreateAnnouncementAdmin.tsx","components/news/NewsAdmin.tsx","components/news/News.tsx","components/projects/CarouselImage.tsx","components/projects/ProjectCarousel.tsx","components/projects/Projects.tsx","firebase.ts","components/login/Login.tsx","components/projects/ProjectAdminImage.tsx","components/projects/ProjectAdminCard.tsx","components/projects/ProjectsAdmin.tsx","components/FooterAdmin.tsx","adminUtils.ts","components/header/HeaderAdmin.tsx","components/adminpanel/AdminPanel.tsx","components/misc/Snowflakes.tsx","App.tsx","index.tsx"],"names":["logoImg","require","Header","props","pageElem","collection","useGet","img","image","Image","onload","setIsHeaderLoaded","src","data","imgUrl","isIOS","window","navigator","userAgent","indexOf","classes","makeStyles","theme","createStyles","header","height","background","backgroundAttachment","isIpad","isMobile","backgroundSize","backgroundPosition","boxShadow","display","alignItems","justifyContent","flexDirection","typography","color","marginTop","imgBg","backgroundColor","width","padding","waves","position","bottom","zIndex","lowHeight","rect","useStyles","className","alt","default","xmlns","viewBox","fill","fillOpacity","d","menuButton","margin","appbar","menuIconBox","borderRadius","backdrop","drawer","icon","menuText","flex","cursor","menuTextContainer","minHeight","navigateIconHover","opacity","paddingLeft","transition","navigateIconExit","navigateIconMobile","MenuItem","useState","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","hover","setHover","headerSection","useScrollSection","reference","Link","onClick","underline","onMouseEnter","onMouseLeave","Typography","variant","boldText","menuItem","toUpperCase","NavigationBar","openBackdrop","setOpenBackdrop","handleToggle","AppBar","Toolbar","IconButton","edge","aria-label","Backdrop","open","menuItems","map","ConfirmDeleteDialog","deleteBtn","deleteDiv","Dialog","onClose","setIsOpen","aria-labelledby","isOpen","DialogTitle","title","information","Button","deleteFunc","EmployeeCard","text","lineHeight","card","media","paddingTop","filter","marginBottom","txtField","btn","btnUpdate","btnGrey","name","setName","role","setRole","description","desc","setDesc","url","setImgUrl","priority","displayPriority","setDisplayPriority","openDialog","setOpenDialog","isProcessing","setIsProcessing","employeeCollection","Grid","item","xs","sm","md","Card","CardMedia","admin","createEmployee","TextField","value","onChange","e","target","fullWidth","label","InputProps","startAdornment","InputAdornment","AccountCircle","Build","multiline","Description","parseInt","type","PriorityHigh","disabled","startIcon","Add","add","then","alert","catch","console","error","Update","update","id","Backspace","Delete","remove","Employees","employeesCollection","useOnAll","employeeDocs","container","textAlign","gridContainer","spacing","sort","a","b","employee","ref","About","aboutDoc","setDescription","setTitle","whiteSpace","Container","lg","Title","style","pageElementsCol","Services","servicesDoc","setError","uploadServiceDescriptions","descs","byggDesc","rehabiliteringDesc","monteringDesc","subtitle","iconContainer","palette","primary","main","fontSize","saveBtn","marginLeft","btnDiv","gridContainerCenter","tempDescription","services","faHammer","faHouseDamage","faTools","setDescs","direction","service","temp","i","FooterIcon","textHover","iconText","textDecoration","iconDiv","marginRight","iconDivHover","href","linkTo","Footer","isTablet","root","textFaded","center","marginTop15","marginRight10","iconHover","maxHeight","maxWidth","backgroundImage","link","footerInfoContainer","iconHoverInsta","setIconHoverInsta","iconHoverFb","setIconHoverFb","pageElems","useOnGet","footerDoc","igLink","fbLink","countryCode","phone","slice","email","address","mapsUrl","mapsEmbed","frameBorder","loading","ContactForm","textField","notRobot","setNotRobot","setEmail","message","setMessage","hasSubmitted","setHasSubmitted","isMessageOk","isEmailOk","isOk","test","String","toLowerCase","method","noValidate","action","autoComplete","length","helperText","required","rows","includes","Announcement","dateString","textTransform","announcement","datetime","toLocaleDateString","weekday","day","year","month","hour","minute","greyBtn","greenBtn","newsCollection","borderColor","Date","createAnnouncement","NewsAdmin","existingNewsDocs","News","news","CarouselImage","isMounted","useRef","current","alignSelf","imageContainer","isLoaded","setIsLoaded","CircularProgress","ProjectCarousel","imgContainer","navButtonsAlwaysVisible","fullHeightHover","autoPlay","NextIcon","PrevIcon","navButtonsProps","activeIndicatorIconButtonProps","buttonWrapper","top","button","imgUrls","imageUrl","ProjectGrid","projectHover","setProjectHover","setOpen","projectGrid","displayProjectText","projectHoverDiv","wrap","pointerEvents","imgContainerDiv","projectData","thumbnail","images","ProjectDesc","projectDesc","toggle","isLast","Projects","projectsCol","projectDocs","Map","toggleStates","setToggleStates","toggleState","tempMap","forEach","project","set","projectCount","has","get","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","Login","password","setPassword","setLoading","errorState","setErrorState","history","useHistory","signInWithEmailAndPassword","push","finally","ProjectAdminImage","duplicate","setDuplicate","flexWrap","flexBasis","div","inputDuplicate","initUrl","setUrl","rerender","count","otherImages","onChangeFunc","onDeleteFunc","ProjectAdminCard","thumbnailUrl","setThumbnailUrl","btnGreen","setImages","setRerender","projectCollection","projectImage","val","res","setImageByID","deleteImageByID","create","ProjectsAdmin","FooterAdmin","border","pageElements","status","setCountryCode","phoneNumber","setPhoneNumber","setAddress","setMapsUrl","ig","setIg","fb","setFb","mapEmbed","setMapEmbed","validateImage","errorFunc","successFunc","onerror","HeaderAdmin","isValidImg","setIsValidImg","inputImg","setInputImg","uploadImg","divider","AdminPanel","newsDocs","signOut","Divider","Flake","flake","Math","random","Snowflakes","aria-hidden","App","createMuiTheme","h5","fontFamily","join","h4","body1","body2","newsCol","displayOverlay","setDisplayOverlay","isHeaderLoaded","setTimeout","innerHeight","setHeight","christmas","getMonth","transitionDuration","appear","enter","exit","stroke","strokeWidth","points","scrollBehavior","ThemeProvider","basename","process","DisallowAuthenticatedRoute","path","AuthenticatedRoute","UnAuthenticatedRoute","children","redirect","rest","useAuthState","user","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00c47dd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/llbygg_redusert.fc265ec0.png\";","import {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport {HeaderSection} from \"../../types\";\nimport {collection} from \"typesaurus\";\nimport {useGet} from \"@typesaurus/react\";\n\nlet logoImg = require(\"./llbygg_redusert.png\")\nconst darkness = 0.25 // Higher = darker\n\nexport default function Header(props:{isMobile:boolean, isIpad:boolean, lowHeight:boolean, setIsHeaderLoaded:React.Dispatch<React.SetStateAction<boolean>>}) {\n    const pageElem = collection(\"pageElements\")\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\n    let image = new Image()\n    image.onload = () => props.setIsHeaderLoaded(true)\n    image.src = img ? img.data.imgUrl : \"\"\n    let isIOS = window.navigator.userAgent.indexOf(\"Mac\") !== -1\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            header: {\n                height: \"85vh\",\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (img ? img.data!.imgUrl : \"\") + \"')\",\n                backgroundAttachment: ((props.isIpad || props.isMobile) && isIOS) ? \"scroll\" : \"fixed\",\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                boxShadow: \"inset 0 0 7em 1em #000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n            },\n            typography: {\n                color: \"white\",\n                marginTop: 20,\n            },\n            imgBg: {\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: 10,\n            },\n            waves: {\n                position: \"absolute\",\n                bottom: props.isIpad ? \"7em\" : \"2em\",\n                zIndex: 0,\n                display: props.isMobile || props.lowHeight ? \"none\" : \"default\",\n            },\n            rect: {\n                backgroundColor: \"white\",\n                width: \"100%\",\n                height: 100,\n                position: \"absolute\",\n                bottom: 20,\n                display: props.isMobile || props.lowHeight ? \"none\" : \"default\",\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <>\n            <div className={classes.header}>\n                <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={props.isMobile ? 100 : 200} />\n                <svg className={classes.waves} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#fff\" fillOpacity=\"1\" d=\"M0,128L80,138.7C160,149,320,171,480,165.3C640,160,800,128,960,117.3C1120,107,1280,117,1360,122.7L1440,128L1440,320L1360,320C1280,320,1120,320,960,320C800,320,640,320,480,320C320,320,160,320,80,320L0,320Z\" />\n                </svg>\n                <div className={classes.rect} />\n            </div>\n        </>\n    )\n}","import {\n    AppBar,\n    Backdrop,\n    createStyles,\n    IconButton,\n    Link,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useEffect, useState} from \"react\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useScrollSection } from \"react-scroll-section\";\n\n\nconst menuIconSize = 30; // Burger menu icon\nconst arrowIconSize = 40; // Right-arrow icon when hovering over menu element\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        menuButton: {\n            margin: \"auto\",\n        },\n        appbar: {\n            background: \"transparent\",\n            boxShadow: \"none\",\n            position: \"static\",\n            height: 0,\n        },\n        menuIconBox: {\n            //backgroundColor: \"orange\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: 5,\n            marginTop: 20,\n            color: \"white\",\n            backgroundColor: \"rgba(255,140,0,0.8)\",\n            position: \"fixed\",\n            zIndex: 1,\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n            backgroundColor: \"rgba(255,102,0,0.99)\",\n        },\n        icon: {\n            width: menuIconSize,\n            height: menuIconSize,\n        },\n        menuText: {\n            flex: 1,\n            color: \"white\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"pointer\",\n        },\n        menuTextContainer: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: \"70vh\",\n        },\n        navigateIconHover: {\n            opacity: 1,\n            width: arrowIconSize,\n            height: arrowIconSize,\n            paddingLeft: 5,\n            transition: \"all 0.2s ease-in-out\",\n        },\n        navigateIconExit: {\n            opacity: 0,\n            width: arrowIconSize,\n            height: arrowIconSize,\n            transition: \"all 0.2s ease-in-out\",\n        },\n        navigateIconMobile: {\n            opacity: 0,\n            width: 0,\n            height: 0,\n        },\n        typography: {\n            color: \"white\",\n        }\n    }),\n);\n\nfunction MenuItem(props:{reference:string, boldText:boolean, menuItem:string}) {\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 768);\n    const classes = useStyles();\n    let [hover, setHover] = useState(false);\n    const headerSection = useScrollSection(props.reference);\n    return (\n        <>\n            <Link onClick={headerSection.onClick} underline=\"none\" className={classes.menuText} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\n                <NavigateNextIcon className={isMobile ? classes.navigateIconMobile : (hover ? classes.navigateIconHover : classes.navigateIconExit)} />\n                <Typography className={classes.typography} variant={isMobile ? \"h5\" : \"h4\"}>\n                    {\n                        props.boldText ?\n                            <b>{props.menuItem.toUpperCase()}</b> : props.menuItem.toUpperCase()\n                    }\n                </Typography>\n            </Link>\n        </>\n    )\n}\n\nexport default function NavigationBar(props:{menuItems:string[][]}) {\n    const classes = useStyles();\n    const boldText = false;\n    const [openBackdrop, setOpenBackdrop] = useState(false);\n    const handleToggle = () => { // Toggle backdrop\n        setOpenBackdrop(!openBackdrop);\n    }\n    return (\n        <>\n            <AppBar position={\"fixed\"} className={classes.appbar}>\n                <Toolbar>\n                    <div className={classes.menuIconBox}>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleToggle}>\n                                <MenuIcon className={classes.icon} />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Backdrop className={classes.backdrop} open={openBackdrop} onClick={handleToggle}>\n                <div className={classes.menuTextContainer}>\n                    {\n                        props.menuItems.map(menuItem =>\n                            <MenuItem key={menuItem[0]} boldText={boldText} menuItem={menuItem[1]} reference={menuItem[0]} />\n                        )\n                    }\n                </div>\n            </Backdrop>\n        </>\n    )\n}","import {Button, createStyles, Dialog, DialogTitle, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\n\r\nexport default function ConfirmDeleteDialog(props:{setIsOpen:(arg:boolean) => any, isOpen:boolean, title:string, information:string, deleteFunc:() => any}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            deleteBtn: {\r\n                margin: 15,\r\n            },\r\n            deleteDiv: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <Dialog onClose={() => {props.setIsOpen(false)}} aria-labelledby=\"Slett nyhet\" open={props.isOpen}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <div className={classes.deleteDiv}>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>DET VIL IKKE VÆRE MULIG Å ANGRE NÅR DETTE ER GJORT!</Typography>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>{props.information}</Typography>\r\n                <Typography variant={\"body2\"} color={\"textSecondary\"}>Klikk utenfor dette vinduet for å angre sletting.</Typography>\r\n                <Button\r\n                    className={classes.deleteBtn}\r\n                    variant={\"outlined\"}\r\n                    color={\"secondary\"}\r\n                    onClick={() => {\r\n                        props.setIsOpen(false)\r\n                        props.deleteFunc()\r\n                    }}\r\n                >\r\n                    Bekreft sletting\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}","import {\r\n    Button,\r\n    Card,\r\n    CardMedia,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport {add, collection, remove, update} from \"typesaurus\";\r\nimport {Employee} from \"../../types\";\r\nimport {\r\n    AccountCircle,\r\n    Add,\r\n    Backspace,\r\n    Build,\r\n    Delete,\r\n    Description,\r\n    Link,\r\n    PriorityHigh,\r\n    Update\r\n} from \"@material-ui/icons\";\r\n\r\ninterface employeeCardInterface {\r\n    name: string;\r\n    role: string;\r\n    description: string;\r\n    url: string;\r\n    admin: boolean;\r\n    priority: number;\r\n    id: string;\r\n    createEmployee: boolean;\r\n}\r\nexport default function EmployeeCard(props:employeeCardInterface) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            title: {\r\n\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            card: {\r\n                boxShadow: \"none\",\r\n            },\r\n            media: {\r\n                height: 10,\r\n                paddingTop: '100%',\r\n                filter: \"grayscale(100%)\",\r\n                borderRadius: 1,\r\n                marginBottom: 15,\r\n                backgroundColor: \"#EEE\",\r\n            },\r\n            txtField: {\r\n                margin: \"10px 0\"\r\n            },\r\n            btn: {\r\n                marginBottom: 10,\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                color: \"white\",\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [name, setName] = useState(props.name)\r\n    const [role, setRole] = useState(props.role)\r\n    const [desc, setDesc] = useState(props.description)\r\n    const [imgUrl, setImgUrl] = useState(props.url ? props.url : \"\")\r\n    const [displayPriority, setDisplayPriority] = useState(props.priority)\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const employeeCollection = collection<Employee>(\"employees\")\r\n    const deleteEmployee = () => {\r\n        setIsProcessing(true)\r\n        remove(employeeCollection, props.id)\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt slettet!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const updateEmployee = () => {\r\n        setIsProcessing(true)\r\n        update(employeeCollection, props.id, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const createEmployee = () => {\r\n        add(employeeCollection, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                setName(\"\")\r\n                setRole(\"\")\r\n                setDesc(\"\")\r\n                setImgUrl(\"\")\r\n                setDisplayPriority(0)\r\n                alert(\"Den ansatte har blitt lagt til!\")\r\n                setIsProcessing(false)\r\n            }).catch((e) => {\r\n            console.error(e)\r\n            alert(e)\r\n            setIsProcessing(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid item xs={8} sm={5} md={4}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        title={props.name}\r\n                        image={imgUrl ? imgUrl : \"empty\"}\r\n                        className={classes.media}\r\n                    />\r\n                    {\r\n                        props.admin ?\r\n                            props.createEmployee ?\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Add />} onClick={() => createEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Legg til ansatt</Button>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Update />} onClick={() => updateEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Oppdater</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Backspace />} fullWidth variant={\"contained\"} color={\"default\"} className={classes.btn + \" \" + classes.btnGrey} onClick={() => {\r\n                                        setName(props.name)\r\n                                        setDesc(props.description)\r\n                                        setRole(props.role)\r\n                                        setImgUrl(props.url)\r\n                                        setDisplayPriority(props.priority)\r\n                                    }\r\n                                    }>Angre endringer</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Delete />} onClick={() => setOpenDialog(true)} fullWidth variant={\"contained\"} color={\"secondary\"} className={classes.btn}>Slett</Button>\r\n                                    <ConfirmDeleteDialog key={props.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette den ansatte?\"} information={\"Ansatt det gjelder: \" + props.name} deleteFunc={deleteEmployee} />\r\n                                </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} className={classes.title}>\r\n                                    {props.name}\r\n                                </Typography>\r\n                                <Typography variant={\"caption\"} color={\"textSecondary\"}>\r\n                                    <b>{props.role.toUpperCase()}</b>\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {props.description}\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport {Employee} from \"../../types\";\r\n\r\nexport default function Employees(props: {margin:number, admin:boolean}) {\r\n    const employeesCollection = collection(\"employees\")\r\n    let [employeeDocs] = useOnAll<Employee>(employeesCollection)\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBottom: props.margin,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    if (props.admin) {\r\n        return (\r\n            <>\r\n                <Typography variant={\"body1\"} className={classes.title} color={\"textSecondary\"}><b>Merk:</b> Høyere visningsprioritet vil gjøre at den ansatte vil dukke opp høyere på siden</Typography>\r\n                <Grid container spacing={3} className={classes.gridContainer}>\r\n                    {\r\n                        employeeDocs ?\r\n                            employeeDocs\r\n                                .sort((a,b) => b.data.priority - a.data.priority)\r\n                                .map(employee =>\r\n                                    <EmployeeCard\r\n                                        admin={props.admin}\r\n                                        key={employee.ref.id}\r\n                                        url={employee.data.imgUrl}\r\n                                        name={employee.data.name}\r\n                                        role={employee.data.role}\r\n                                        priority={employee.data.priority}\r\n                                        id={employee.ref.id}\r\n                                        createEmployee={false}\r\n                                        description={employee.data.description} />\r\n                                )\r\n                            :\r\n                            \"Vennligst vent mens seksjonen laster\"\r\n                    }\r\n                    <EmployeeCard\r\n                        admin={props.admin}\r\n                        url={\"\"}\r\n                        name={\"\"}\r\n                        role={\"\"}\r\n                        priority={0}\r\n                        id={\"\"}\r\n                        createEmployee={true}\r\n                        description={\"\"}\r\n                    />\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.gridContainer}>\r\n                {\r\n                    employeeDocs ?\r\n                        employeeDocs\r\n                            .sort((a,b) => b.data.priority - a.data.priority)\r\n                            .map(employee =>\r\n                            <EmployeeCard\r\n                                admin={props.admin}\r\n                                key={employee.ref.id}\r\n                                url={employee.data.imgUrl}\r\n                                name={employee.data.name}\r\n                                role={employee.data.role}\r\n                                priority={employee.data.priority}\r\n                                id={employee.ref.id}\r\n                                createEmployee={false}\r\n                                description={employee.data.description} />\r\n                            )\r\n                        :\r\n                        \"Vennligst vent mens seksjonen laster\"\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Employees from \"../employees/Employees\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {AboutSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Description, Title, Update} from \"@material-ui/icons\";\r\n\r\nexport default function About(props: {margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [aboutDoc] = useGet<AboutSection>(pageElem, \"about\")\r\n    let [description, setDescription] = useState(\"\")\r\n    let [title, setTitle] = useState(\"\")\r\n    let [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (aboutDoc) {\r\n            setDescription(aboutDoc.data.description)\r\n            setTitle(aboutDoc.data.title)\r\n        }\r\n    }, [aboutDoc])\r\n    const updateAboutSection = () => {\r\n        if (!aboutDoc) {\r\n            alert(\"Vent til informasjonen laster fra databasen\")\r\n            return\r\n        }\r\n        setIsProcessing(true)\r\n        update(pageElem, aboutDoc.ref.id, {title:title, description:description})\r\n            .then(() => {\r\n                alert(\"Beskrivelsen har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            txtField: {\r\n                margin: \"15px 0\",\r\n                whiteSpace: \"pre-line\",\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title}>\r\n                        Om oss\r\n                    </Typography>\r\n                    <Employees admin={props.admin} margin={15} />\r\n                    {\r\n                        props.admin ?\r\n                            <>\r\n                                <Typography variant={\"h5\"}>Rediger \"Om oss\"-seksjon</Typography>\r\n                                <TextField\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    value={title}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Tittel\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Title />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    value={description}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Beskrivelse\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Description />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant={\"contained\"}\r\n                                    className={classes.btnUpdate}\r\n                                    onClick={() => {\r\n                                        updateAboutSection()\r\n                                    }}\r\n                                    disabled={isProcessing}\r\n                                    startIcon={<Update />}\r\n                                >\r\n                                    Oppdater\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>\r\n                                    <b>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.title.toUpperCase()\r\n                                            :\r\n                                            \"STIFTET I 2016\"\r\n                                    }\r\n                                    </b>\r\n                                </Typography>\r\n                                <Typography style={{whiteSpace: 'pre-line'}} display=\"block\" variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.description\r\n                                            :\r\n                                            \"Beskrivelse laster...\"\r\n                                    }\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faHammer, faHouseDamage, faTools } from '@fortawesome/free-solid-svg-icons'\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {ServicesSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Update} from \"@material-ui/icons\";\r\n\r\nlet pageElementsCol = collection(\"pageElements\")\r\nexport default function Services(props:{margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [servicesDoc] = useGet<ServicesSection>(pageElem, \"services\")\r\n    let [error, setError] = useState(\"\")\r\n    const uploadServiceDescriptions = async (descs:string[]) => {\r\n        update(pageElementsCol, \"services\", { byggDesc: descs[0], rehabiliteringDesc: descs[1], monteringDesc: descs[2] })\r\n            .then(() => {\r\n                setError(\"\")\r\n                alert(\"Beskrivelsen ble oppdatert\")\r\n            })\r\n            .catch(e => {\r\n                console.error(e)\r\n                alert(e)\r\n                setError(e)\r\n            })\r\n    }\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n                position: \"relative\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            subtitle: {\r\n                marginBottom: 5,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                margin: \"auto\",\r\n            },\r\n            iconContainer: {\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n            },\r\n            icon: {\r\n                color: theme.palette.primary.main,\r\n                fontSize: 45,\r\n                display: \"flex\",\r\n                margin: \"10px auto\",\r\n            },\r\n            saveBtn: {\r\n                marginBottom: 15,\r\n                marginLeft: 15,\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnDiv: {\r\n                width: \"100%\",\r\n            },\r\n            gridContainerCenter: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const tempDescription = \"Beskrivelse laster inn, vennligst vent...\"\r\n    let services = [\r\n        [0, \"Bygg\", (servicesDoc ? servicesDoc.data.byggDesc : tempDescription), faHammer],\r\n        [1, \"Prosjektering\", (servicesDoc ? servicesDoc.data.rehabiliteringDesc : tempDescription), faHouseDamage],\r\n        [2, \"Montering\", (servicesDoc ? servicesDoc.data.monteringDesc : tempDescription), faTools]\r\n    ]\r\n    let [descs, setDescs] = useState([\"\",\"\",\"\"])\r\n    useEffect(() => {\r\n        if (servicesDoc) {\r\n            setDescs([\r\n                servicesDoc.data.byggDesc,\r\n                servicesDoc.data.rehabiliteringDesc,\r\n                servicesDoc.data.monteringDesc\r\n            ])\r\n        }\r\n    }, [servicesDoc])\r\n\r\n    return(\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container direction={\"column\"}>\r\n                        <Typography variant={\"h4\"} className={classes.title}>\r\n                            Våre tjenester\r\n                        </Typography>\r\n                        <Grid container className={classes.gridContainerCenter} spacing={4}>\r\n                            {\r\n                                services.map(service =>\r\n                                    // @ts-ignore\r\n                                    <Grid key={service[0]} item md={4} sm={10} xs={12}>\r\n                                        <div className={classes.iconContainer}>\r\n                                            <div className={classes.iconContainer}>\r\n                                                {/* @ts-ignore */}\r\n                                                <FontAwesomeIcon className={classes.icon} icon={service[3]} />\r\n                                            </div>\r\n                                            <Typography variant={\"h5\"} className={classes.subtitle} color={\"textSecondary\"}>\r\n                                                <b>{service[1]}</b>\r\n                                            </Typography>\r\n                                            {\r\n                                                props.admin ?\r\n                                                    <>\r\n                                                        <TextField\r\n                                                            label=\"Beskrivelse\"\r\n                                                            variant=\"outlined\"\r\n                                                            multiline\r\n                                                            /* @ts-ignore */\r\n                                                            value={descs[service[0]]}\r\n                                                            onChange = {\r\n                                                                e =>\r\n                                                                {\r\n                                                                    let temp = [\"\",\"\",\"\"]\r\n                                                                    for (let i = 0; i<3; i++) {\r\n                                                                        if (i === service[0]) {\r\n                                                                            temp[i] = e.target.value\r\n                                                                        } else {\r\n                                                                            temp[i] = descs[i]\r\n                                                                        }\r\n                                                                    }\r\n                                                                    setDescs(temp)\r\n                                                                }\r\n                                                            }\r\n                                                        />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Typography variant={\"body2\"} className={classes.text} color={\"textSecondary\"}>\r\n                                                        {service[2]}\r\n                                                    </Typography>\r\n                                            }\r\n                                        </div>\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                            <div className={classes.btnDiv}>\r\n                                {\r\n                                    props.admin &&\r\n                                    <>\r\n                                        <Button\r\n                                            className={classes.saveBtn}\r\n                                            variant={\"contained\"}\r\n                                            startIcon={<Update />}\r\n                                            onClick={() =>\r\n                                            {\r\n                                                uploadServiceDescriptions(descs)\r\n                                            }\r\n                                            }\r\n                                        >\r\n                                            Oppdater\r\n                                        </Button>\r\n                                        {\r\n                                            error !== \"\" &&\r\n                                            <Typography variant={\"caption\"}>\r\n                                                {error}\r\n                                            </Typography>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, Link, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport {useEffect, useState} from \"react\";\r\nimport {collection} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\n\r\nfunction FooterIcon(props:{text:string, linkTo:string, icon:JSX.Element}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            textHover: {\r\n                lineHeight: \"200%\",\r\n                color: \"orange\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 5,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                textDecoration: \"none\",\r\n            },\r\n            iconDiv: {\r\n                marginRight: 10,\r\n                color: \"white\",\r\n            },\r\n            iconDivHover: {\r\n                marginRight: 10,\r\n                color: \"orange\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [hover, setHover] = useState(false);\r\n    return (\r\n        <>\r\n            <Link\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n                href={props.linkTo}\r\n                underline={\"none\"}\r\n                target={\"_blank\"}\r\n                className={classes.iconText}\r\n            >\r\n                <Typography variant={\"body2\"} className={hover ? classes.textHover + \" \" + classes.iconDivHover : classes.text + \" \" + classes.iconDiv}>\r\n                    {props.icon} {props.text}\r\n                </Typography>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function Footer() {\r\n    // Detect mobile screen\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\r\n    let isTablet: boolean = !isMobile && width <= 1200\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\",\r\n                marginTop: 0,\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n                color: \"white\",\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n            },\r\n            textFaded: {\r\n                lineHeight: \"200%\",\r\n                color: \"#888\",\r\n            },\r\n            center: {\r\n                margin: \"auto\",\r\n                textAlign: \"center\",\r\n            },\r\n            marginTop15: {\r\n                marginTop: 15\r\n            },\r\n            marginRight10: {\r\n                marginRight: 10,\r\n            },\r\n            icon: {\r\n                color: \"white\",\r\n                marginRight: 10,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconHover: {\r\n                marginRight: 10,\r\n                color: theme.palette.primary.main,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n            },\r\n            map: {\r\n                maxHeight: \"400px\",\r\n                minHeight: \"300px\",\r\n                maxWidth: \"400px\",\r\n                borderRadius: 5,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                backgroundImage: \"url('https://assets.website-files.com/5e832e12eb7ca02ee9064d42/5f7db426b676b95755fb2844_Group%20805.jpg')\",\r\n                backgroundSize: \"cover\",\r\n            },\r\n            link: {\r\n                color: \"orange\",\r\n            },\r\n            footerInfoContainer: {\r\n                display: \"flex\",\r\n                justifyContent: isMobile ? \"center\" : \"\",\r\n                alignItems: isMobile ? \"center\" : \"\",\r\n                flexDirection: \"column\",\r\n            },\r\n            waves: {\r\n                marginBottom: -10,\r\n                marginTop: width > 2100 ? \"-25em\" : (isTablet ? \"-7em\" : \"-18em\"),\r\n                display: isMobile ? \"none\" : \"default\"\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [iconHoverInsta, setIconHoverInsta] = useState(false);\r\n    let [iconHoverFb, setIconHoverFb] = useState(false);\r\n    const pageElems = collection(\"pageElements\")\r\n    const [footerDoc] = useOnGet<FooterSection>(pageElems, \"footer\")\r\n\r\n    return (\r\n        <>\r\n            <svg className={classes.waves} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -50 1440 320\">\r\n                <path fill=\"#222222\" fillOpacity=\"1\" d=\"M0,192L120,197.3C240,203,480,213,720,208C960,203,1200,181,1320,170.7L1440,160L1440,320L1320,320C1200,320,960,320,720,320C480,320,240,320,120,320L0,320Z\" />\r\n            </svg>\r\n            <div className={classes.root}>\r\n                <Container className={classes.container}>\r\n                    <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                        <Grid container spacing={4} alignItems={\"center\"}>\r\n                            <Grid item xs={12} className={classes.center}>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverInsta(true)}\r\n                                    onMouseLeave={() => setIconHoverInsta(false)}\r\n                                    href={footerDoc ? footerDoc.data.igLink : \"\"}\r\n                                    className={iconHoverInsta ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <InstagramIcon />\r\n                                </Link>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverFb(true)}\r\n                                    onMouseLeave={() => setIconHoverFb(false)}\r\n                                    href={footerDoc ? footerDoc.data.fbLink : \"\"}\r\n                                    className={iconHoverFb ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <FacebookIcon />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} className={classes.footerInfoContainer}>\r\n                                <FooterIcon\r\n                                    text={\r\n                                        \"(+\" +\r\n                                        (footerDoc ? footerDoc.data.countryCode : \"\") +\") \" +\r\n                                        (footerDoc ? footerDoc.data.phone.slice(0,3) + \" \" +\r\n                                            footerDoc.data.phone.slice(3,5) + \" \" +\r\n                                            footerDoc.data.phone.slice(5,8) : \"\")\r\n                                    }\r\n                                    linkTo={\"tel: \" +\r\n                                    (footerDoc ? footerDoc.data.countryCode + footerDoc.data.phone : \"\")\r\n                                    }\r\n                                    icon={<PhoneIcon className={classes.marginRight10} />}/>\r\n                                <FooterIcon\r\n                                    text={\"Kontakt oss via e-post\"}\r\n                                    linkTo={footerDoc ? \"mailto:\" + footerDoc.data.email : \"\"}\r\n                                    icon={<EmailIcon className={classes.marginRight10} />}\r\n                                />\r\n                                <FooterIcon\r\n                                    text={footerDoc ? footerDoc.data.address : \"\"}\r\n                                    linkTo={footerDoc ? footerDoc.data.mapsUrl : \"\"}\r\n                                    icon={\r\n                                        <RoomIcon className={classes.marginRight10} />\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12}>\r\n                                <iframe\r\n                                    src={footerDoc ? footerDoc.data.mapsEmbed : \"\"}\r\n                                    width=\"100%\" height=\"350\" frameBorder={\"none\"} title={\"kart\"}\r\n                                    loading=\"lazy\">\r\n                                </iframe>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant={\"body2\"} className={classes.textFaded + \" \" + classes.center + \" \" + classes.marginTop15}>\r\n                                    <b>Nettside laget av <Link href={\"https://www.linkedin.com/in/joachim-maksim-3823a5197/\"} target=\"_blank\" className={classes.link}>Foxden Consulting</Link> (2021)</b>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ContactForm(props: {margin:number}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            textField: {\r\n                marginBottom: 15,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [notRobot, setNotRobot] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [hasSubmitted, setHasSubmitted] = useState(false)\r\n    let isMessageOk = message !== \"\"\r\n    const isEmailOk = () => {\r\n        let isOk = true\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email === \"\" || !re.test(String(email).toLowerCase())) {\r\n            isOk = false\r\n        }\r\n        return isOk\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title} >\r\n                        Kontakt oss\r\n                    </Typography>\r\n                    <form method={\"post\"} noValidate action=\"https://formspree.io/f/xnqldjry\" autoComplete=\"off\">\r\n                        <TextField\r\n                            error={!isEmailOk() && (hasSubmitted || notRobot.length > 0)}\r\n                            helperText={(!isEmailOk() && (hasSubmitted || notRobot.length > 0)) ? \"Vennligst skriv inn en gyldig e-post-adresse!\" : \"\"}\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            type={\"email\"}\r\n                            name={\"_replyto\"}\r\n                            required\r\n                            fullWidth\r\n                            id=\"standard-basic\"\r\n                            label=\"E-post\"\r\n                            className={classes.textField}\r\n                        />\r\n                        <TextField name={\"Navn\"} fullWidth id=\"standard-basic\" label=\"Navn\" className={classes.textField} />\r\n                        <TextField name={\"Adresse\"} fullWidth id=\"standard-basic\" label=\"Adresse\" className={classes.textField} />\r\n                        <TextField name={\"Tema\"} fullWidth id=\"standard-basic\" label=\"Tema\" className={classes.textField} />\r\n                        <TextField\r\n                            required\r\n                            error={!isMessageOk && (hasSubmitted || notRobot.length > 0)}\r\n                            value={message}\r\n                            onChange={e => setMessage(e.target.value)}\r\n                            name={\"Melding\"}\r\n                            multiline\r\n                            rows={5}\r\n                            fullWidth\r\n                            id=\"standard-basic\"\r\n                            label=\"Melding\"\r\n                            className={classes.textField}\r\n                            helperText={(!isMessageOk && (hasSubmitted || notRobot.length > 0)) ? \"Vennligst skriv en melding!\" : \"\"}\r\n                        />\r\n                        <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.title} >\r\n                            Vennligst skriv 'ikkerobot' i tekstfeltet under for å bekrefte at du er en ekte person\r\n                        </Typography>\r\n                        <TextField multiline value={notRobot} onChange={(e) => setNotRobot(e.target.value)} fullWidth id=\"standard-basic\" label=\"Skriv 'ikkerobot' her\" className={classes.textField} />\r\n                        <Button\r\n                            disabled={!notRobot.toLowerCase().includes(\"ikkerobot\") || notRobot.length >= 12 || !isMessageOk || !isEmailOk()}\r\n                            type={(isMessageOk && isEmailOk() && message.length > 0 && email.length > 0) ? \"submit\" : \"button\"}\r\n                            variant={\"outlined\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => {\r\n                                if((!isMessageOk || !isEmailOk())) {\r\n                                    setHasSubmitted(true)\r\n                                }\r\n                            }}\r\n                        >\r\n                            Send henvendelse\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {Doc} from \"typesaurus\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            title: {\n                marginBottom: 5,\n            },\n            text: {\n                lineHeight: \"200%\",\n            },\n            dateString: {\n                textTransform: \"capitalize\",\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant={\"h5\"} className={classes.title}>\n                    {props.announcement.data.title}\n                </Typography>\n                <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.dateString}>\n                    <b>{props.announcement.data.datetime.toLocaleDateString(\"no-NB\", {\n                        weekday: 'short', // long, short, narrow\n                        day: 'numeric', // numeric, 2-digit\n                        year: 'numeric', // numeric, 2-digit\n                        month: 'long', // numeric, 2-digit, long, short, narrow\n                        hour: 'numeric', // numeric, 2-digit\n                        minute: 'numeric', // numeric, 2-digit\n                    })}</b>\n                </Typography>\n                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\n                    {props.announcement.data.description}\n                </Typography>\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {\n    Button,\n    createStyles,\n    Grid, InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {collection, Doc, update, remove} from \"typesaurus\";\nimport {useState} from \"react\";\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\nimport {Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            txtField: {\n                marginBottom: 15,\n            },\n            root: {\n                //border: \"1px solid orange\",\n                padding: \"15px 15px 0\",\n                margin: \"15px 0 \",\n                borderRadius: 10,\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\n            },\n            btn: {\n                marginBottom: 15,\n                marginRight: 10,\n                color: \"white\",\n            },\n            deleteBtn: {\n                margin: 15,\n            },\n            deleteDiv: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            },\n            greyBtn: {\n                backgroundColor: \"grey\",\n                \"&:hover\": {\n                    backgroundColor: \"#333\"\n                }\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\"\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    const [openDialog, setOpenDialog] = useState(false);\n    let [desc, setDesc] = useState(props.announcement.data.description)\n    let [title, setTitle] = useState(props.announcement.data.title)\n    let [isProcessing, setIsProcessing] = useState(false)\n    const newsCollection = collection<NewsDoc>(\"news\")\n    const updateAnnouncement = () => {\n        setIsProcessing(true)\n        update(newsCollection, props.announcement.ref.id, {title: title, description: desc})\n            .then(() => {\n                setIsProcessing(false)\n            })\n            .catch((e) => {\n                alert(e)\n                console.error(e)\n                setIsProcessing(false)\n            })\n    }\n    const deleteAnnouncement = () => {\n        setIsProcessing(true)\n        remove(newsCollection, props.announcement.ref.id)\n            .then(() => {\n                setIsProcessing(false)\n            })\n            .catch((e) => {\n                alert(e)\n                console.error(e)\n                setIsProcessing(false)\n            })\n    }\n    return (\n        <>\n            <Grid className={classes.root} item xs={12}>\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Tittel\"}\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Title />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Beskrivelse\"}\n                    value={desc}\n                    onChange={(e) => setDesc(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Description />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button startIcon={<Update />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} color={\"primary\"} onClick={() => {\n                    updateAnnouncement()\n                }}>Oppdater</Button>\n                <Button className={classes.btn + \" \" + classes.greyBtn} variant={\"contained\"} startIcon={<Backspace />} color={\"default\"} onClick={() => {\n                    setDesc(props.announcement.data.description)\n                    setTitle(props.announcement.data.title)\n                }}>Angre alle endringer</Button>\n                <Button startIcon={<Delete />} disabled={isProcessing} className={classes.btn} variant={\"contained\"} onClick={() => {setOpenDialog(true)}} color={\"secondary\"}>Slett</Button>\n                <ConfirmDeleteDialog key={props.announcement.ref.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette nyheten?\"} information={\"Nyheten det gjelder: \" + props.announcement.data.title} deleteFunc={deleteAnnouncement} />\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {\n    Button,\n    createStyles,\n    Grid, InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {collection, add} from \"typesaurus\";\nimport {useState} from \"react\";\nimport {Add, Description, Title} from \"@material-ui/icons\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement() {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            txtField: {\n                marginBottom: 15,\n            },\n            root: {\n                //border: \"1px solid orange\",\n                padding: \"15px 15px 0\",\n                margin: \"15px 0 \",\n                borderRadius: 10,\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\n            },\n            btn: {\n                marginBottom: 15,\n                marginRight: 10,\n                color: \"white\",\n                borderColor: \"green\",\n            },\n            greyBtn: {\n                backgroundColor: \"grey\",\n                \"&:hover\": {\n                    backgroundColor: \"#333\"\n                }\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\"\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    let [desc, setDesc] = useState(\"\")\n    let [title, setTitle] = useState(\"\")\n    let [isProcessing, setIsProcessing] = useState(false)\n    let [error, setError] = useState(false)\n    const newsCollection = collection<NewsDoc>(\"news\")\n    const createAnnouncement = () => {\n        setIsProcessing(true)\n        if (title.length === 0 || desc.length === 0) {\n            alert(\"Nyheten trenger en tittel og beskrivelse!\")\n            setError(true)\n            setIsProcessing(false)\n            return\n        }\n        add(newsCollection, {datetime: new Date(), description: desc, title: title})\n            .then(() => {\n                alert(\"Nyheten har blitt publisert!\")\n                setTitle(\"\")\n                setDesc(\"\")\n                setIsProcessing(false)\n                setError(false)\n            }).catch((e) => {\n                setError(true)\n                console.error(e)\n                alert(e)\n                setIsProcessing(false)\n            })\n    }\n    return (\n        <>\n            <Grid className={classes.root} item xs={12}>\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Tittel\"}\n                    value={title}\n                    error={error}\n                    onChange={(e) => setTitle(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Title />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Beskrivelse\"}\n                    value={desc}\n                    error={error}\n                    onChange={(e) => setDesc(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Description />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button startIcon={<Add />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} onClick={() => {\n                    createAnnouncement()\n                }}>Publiser nyhet</Button>\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {Doc} from \"typesaurus\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport AnnouncementAdmin from \"./AnnouncementAdmin\";\r\nimport CreateAnnouncementAdmin from \"./CreateAnnouncementAdmin\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nexport default function NewsAdmin(props:{existingNewsDocs:Doc<NewsDoc>[]}) {\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Publiser nyhet</Typography>\r\n                <CreateAnnouncementAdmin />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Rediger nyheter</Typography>\r\n                <br />\r\n                {\r\n                    props.existingNewsDocs\r\n                        // @ts-ignore\r\n                        .sort((a,b) => b.data.datetime - a.data.datetime)\r\n                        .map(announcement => <AnnouncementAdmin key={announcement.ref.id} announcement={announcement} />)\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport Announcement from \"./Announcement\";\nimport {NewsDoc} from \"../../types\";\nimport {Doc} from \"typesaurus\";\nimport NewsAdmin from \"./NewsAdmin\";\n\nexport default function News(props:{margin:number, admin:boolean, news:Doc<NewsDoc>[]}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            text: {\n                lineHeight: \"200%\",\n            },\n            gridContainer: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n            }\n        }),\n    );\n    const classes = useStyles()\n\n    if (props.news.length <= 0 && !props.admin) {\n        return (<></>)\n    }\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\n                    <Grid container direction={\"column\"}>\n                        <Typography variant={\"h4\"} className={classes.title}>\n                            Siste nyheter\n                        </Typography>\n                        {\n                            props.admin ?\n                                <>\n                                    <NewsAdmin existingNewsDocs={props.news} />\n                                </>\n                                :\n                                <>\n                                    <Grid container spacing={4}>\n                                        {\n                                            // @ts-ignore\n                                            props.news.sort((a,b) => b.data.datetime - a.data.datetime).map(announcement =>\n                                                <Announcement key={announcement.ref.id} announcement={announcement} />\n                                            )\n                                        }\n                                    </Grid>\n                                </>\n                        }\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {CircularProgress, createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport {useEffect, useRef, useState} from \"react\";\n\ninterface CarouselImageProps {\n    imgUrl: string;\n}\n\nexport default function CarouselImage(this: any, props: CarouselImageProps) {\n    const isMounted = useRef(false)\n\n    useEffect(() => {\n        isMounted.current = true;\n        return () => { isMounted.current = false }\n    }, []);\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            image: {\n                maxHeight: \"90vh\",\n                maxWidth: \"90vw\",\n                margin: \"auto\",\n                alignSelf: \"center\",\n            },\n            imageContainer: {\n                display: \"flex\",\n                alignItems: \"center\",\n            }\n        }),\n    );\n    const classes = useStyles();\n    let [isLoaded, setIsLoaded] = useState(false)\n    let image = new Image()\n    if (!isMounted.current) {\n        image.onload = () => setIsLoaded(true)\n    }\n    image.src = props.imgUrl\n\n\n    return (\n        <div className={classes.imageContainer}>\n            {\n                isLoaded ?\n                    <img\n                        alt={\"bilde\"}\n                        className={classes.image}\n                        src={props.imgUrl}\n                    />\n                    :\n                    <CircularProgress />\n            }\n        </div>\n    )\n}","import Carousel from 'react-material-ui-carousel'\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport CarouselImage from \"./CarouselImage\";\nimport {useEffect, useRef} from \"react\";\n\ninterface carouselProps {\n    imgUrls:string[]\n}\n\nexport default function ProjectCarousel(props:carouselProps) {\n    const isMounted = useRef(false)\n\n    useEffect(() => {\n        isMounted.current = true;\n        return () => { isMounted.current = false }\n    }, []);\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            imgContainer: {\n                width: \"90vw\",\n                height: \"90vh\",\n                display: \"flex\",\n                justifyContent: \"center\",\n            }\n        }),\n    );\n    const classes = useStyles();\n    if (!isMounted.current) {\n        return (<></>)\n    }\n    return (\n        <>\n            {/*@ts-ignore*/}\n            <Carousel\n                navButtonsAlwaysVisible\n                fullHeightHover={false}\n                autoPlay={false}\n                NextIcon={<NavigateNextIcon />}\n                PrevIcon={<NavigateBeforeIcon />}\n                /* @ts-ignore */\n                navButtonsProps={{          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\n                    style: {\n                        backgroundColor: 'orange',\n                    }\n                }}\n                activeIndicatorIconButtonProps={{\n                    style: {\n                        backgroundColor: 'darkorange',\n                        color: \"orange\",\n                    }\n                }}\n                buttonWrapper={\n                    {\n                        style: {\n                            position: \"absolute\",\n                            height: \"150px\",\n                            backgroundColor: \"orange\",\n                            top: \"calc(50% - 70px)\",\n                            '&:hover': {\n                                '& $button': {\n                                    backgroundColor: \"black\",\n                                    filter: \"brightness(100%)\",\n                                    opacity: \"1 !important\"\n                                }\n                            }\n                        }\n                    }\n                }\n                button={{\n                    style:{\n                        position: \"relative\",\n                        backgroundColor: \"#494949\",\n                        top: \"calc(50% - 20px) !important\",\n                        color: \"white\",\n                        fontSize: \"30px\",\n                        transition: \"200ms\",\n                        cursor: \"pointer\",\n                        '&:hover': {\n                            opacity: \"1 !important\"\n                        },\n                    }\n                }}\n            >\n            {\n                props.imgUrls.map(imageUrl =>\n                    <div key={imageUrl} className={classes.imgContainer}>\n                        <CarouselImage imgUrl={imageUrl} key={imageUrl} />\n                    </div>\n                    )\n            }\n            </Carousel>\n        </>\n    )\n}","import {Backdrop, Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport ProjectCarousel from \"./ProjectCarousel\";\nimport {collection, Doc} from \"typesaurus\";\nimport {Project} from \"../../types\";\nimport {useOnAll} from \"@typesaurus/react\";\n\nfunction ProjectGrid(props: {projectData:Doc<Project> | undefined}) {\n    let [projectHover, setProjectHover] = useState(false);\n    const [open, setOpen] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            projectGrid: {\n                backgroundColor: \"rgba(0,0,0,0.1)\",\n                width: \"100%\",\n                padding: 0,\n                marginBottom: -4,\n                position: \"relative\",\n            },\n            displayProjectText: {\n                color: \"white\",\n                opacity: projectHover ? \"100%\" : \"0%\",\n                transition: \"all 0.2s ease-in-out\",\n                margin: 0,\n                padding: 0,\n            },\n            projectHoverDiv: {\n                width: \"100%\",\n                height: projectHover ? \"100%\" : 0,\n                backgroundColor: \"rgba(255,140,0, 0.9)\",\n                color: \"white\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                wrap: \"nowrap\",\n                transition: \"0.2s ease-in-out\",\n                position: \"absolute\",\n                bottom: 0,\n                pointerEvents: \"none\",\n                padding: 0,\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff',\n                backgroundColor: \"rgba(0,0,0,0.8)\"\n            },\n            imgContainerDiv: {\n                position: \"relative\",\n                cursor: \"pointer\",\n                margin: 0,\n                padding: 0,\n            }\n        }),\n    );\n    const classes = useStyles();\n    if (!props.projectData) {\n        return (\n            <>\n                Laster inn data...\n            </>\n        )\n    }\n\n    return (\n        <Grid item sm={6} xs={12}>\n            <div className={classes.imgContainerDiv}>\n                <img\n                    alt={props.projectData.data.title + \" bilde\"}\n                    src={props.projectData.data.thumbnail}\n                    className={classes.projectGrid}\n                    onMouseEnter={() => setProjectHover(true)}\n                    onMouseLeave={() => setProjectHover(false)}\n                    onClick={handleToggle}\n                />\n                <div className={classes.projectHoverDiv}>\n                    <Typography variant={\"body1\"} className={classes.displayProjectText}>\n                        <b>\n                            Vis\n                            {\n                                \" \" + props.projectData.data.images.length + \" bilde\" + (props.projectData.data.images.length > 1 ? \"r\" : \"\")\n                            }\n                        </b>\n                    </Typography>\n                </div>\n            </div>\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n                <ProjectCarousel imgUrls={props.projectData.data.images} />\n            </Backdrop>\n        </Grid>\n    )\n}\n\nfunction ProjectDesc(props: {isMobile:boolean, toggle:boolean | undefined, isLast:boolean, projectData:Doc<Project> | undefined}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            projectDesc: {\n                padding: props.isMobile ? \"5px 0\" : (props.toggle ? \"5px 15px\" : \"5px 15px 5px 0\"),\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                height: \"100%\",\n                maxWidth: \"100%\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            text: {\n                lineHeight: \"200%\",\n                marginBottom: props.isMobile && !props.isLast ? \"3.5em\" : \"0\",\n            },\n        }),\n    );\n    const classes = useStyles();\n    const textTitleStyle = \"h5\"; // Anbefaler h5\n    const textStyle = \"body2\"; // Anbefaler body1, body2 eller caption\n    if (!props.projectData) {\n        return (\n            <>\n                Laster inn beskrivelse...\n            </>\n        )\n    }\n    return (\n        <Grid item sm={6} xs={12}>\n            <div className={classes.projectDesc}>\n                <div>\n                    <Typography variant={textTitleStyle} className={classes.title} color={\"textPrimary\"}>\n                        { props.projectData.data.title }\n                    </Typography>\n                    <Typography variant={textStyle} className={classes.text} color={\"textSecondary\"}>\n                        { props.projectData.data.description }\n                    </Typography>\n                </div>\n            </div>\n        </Grid>\n    )\n}\n\nexport default function Projects(props: {margin:number}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            }\n        }),\n    );\n    const classes = useStyles();\n\n    // Detect mobile screen\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\n    // Retrieve projects from db\n    const projectsCol = collection<Project>(\"projects\")\n    const [projectDocs] = useOnAll(projectsCol)\n    const [toggleStates, setToggleStates] = useState<Map<string, boolean>>(new Map())\n    useEffect(() => {\n        if (projectDocs) {\n            let toggleState = true\n            let tempMap:Map<string, boolean> = new Map()\n            projectDocs.forEach(project => {\n                tempMap.set(project.ref.id, toggleState)\n                toggleState = !toggleState\n            })\n            setToggleStates(tempMap)\n        }\n    }, [projectDocs])\n    let projectCount = 0\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12}>\n                    <Typography variant={\"h4\"} className={classes.title}>Noen av våre prosjekter</Typography>\n                    <Grid container spacing={0}>\n                        {\n                            projectDocs ?\n                            projectDocs.map(project => {\n                                projectCount++\n\n                                    return (\n                                    <Grid container key={project.ref.id}>\n                                        {\n                                            isMobile ?\n                                                <>\n                                                    <ProjectGrid projectData={project} />\n                                                    <ProjectDesc toggle={false} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                </>\n                                                :\n                                                (toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : false) ?\n                                                    <>\n                                                        <ProjectGrid projectData={project} />\n                                                        <ProjectDesc toggle={(toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : true)} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                    </>\n                                                    :\n                                                    <>\n                                                        <ProjectDesc toggle={toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : false} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                        <ProjectGrid projectData={project} />\n                                                    </>\n                                        }\n                                    </Grid>\n                                )\n                            }\n                            )\n                                :\n                                \"Prosjekter laster\"\n                        }\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBNP28c3vsIihTrYVOzkOG_YuXgHGZvbTw\",\r\n    authDomain: \"ll-bygg.firebaseapp.com\",\r\n    projectId: \"ll-bygg\",\r\n    storageBucket: \"ll-bygg.appspot.com\",\r\n    messagingSenderId: \"1072602321840\",\r\n    appId: \"1:1072602321840:web:bfb60075079e215666bc75\"\r\n})\r\n\r\nconst firestore = firebase.app().firestore()\r\nconst auth = firebase.app().auth()\r\n\r\nexport {\r\n    firestore, auth, firebase as default\r\n}\r\n\r\n","import {Button, createStyles, makeStyles, Theme, Typography} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useState} from \"react\";\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"150px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        txtField: {\r\n            width: \"400px\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            width: \"200px\",\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [loading, setLoading] = useState(false)\r\n    let [errorState, setErrorState] = useState(\"\")\r\n    const auth = firebase.app().auth()\r\n    const history = useHistory()\r\n    const submit = () => {\r\n        setLoading(true)\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setErrorState(\"\")\r\n            history.push(\"/adminPanel\")\r\n        }).catch(e => {\r\n            setErrorState(e.message)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n    if (loading) {\r\n        return (<>Loading...</>)\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h5\"} >Logg inn</Typography>\r\n                <TextField onChange={e => {setEmail(e.target.value)}} id=\"outlined-basic\" label=\"E-post\" className={classes.txtField} variant=\"outlined\" />\r\n                <TextField onChange={e => {setPassword(e.target.value)}} type=\"password\" label=\"Passord\" className={classes.txtField} variant=\"outlined\" />\r\n                {\r\n                    errorState\r\n                }\r\n                <Button variant=\"contained\" onClick={submit} color=\"primary\" className={classes.btn}>\r\n                    Logg inn\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import {Button, createStyles, InputAdornment, makeStyles, TextField, Theme} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport default function ProjectAdminImage(props:{onDeleteFunc:(id:number) => any, rerender:boolean, id:number, otherImages:string[], initUrl:string, onChangeFunc:(id:number, val:string) => any}) {\r\n    const [duplicate, setDuplicate] = useState(false)\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 \",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 5,\r\n                marginTop: 15,\r\n                flexWrap: \"wrap\",\r\n                flexBasis: \"90%\",\r\n\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                marginLeft: 5,\r\n                marginBottom: 12,\r\n                color: \"white\",\r\n                flexBasis: \"5%\",\r\n                height: 55,\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n            },\r\n            inputDuplicate: {\r\n                color: \"red\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [url, setUrl] = useState(props.initUrl)\r\n    useEffect(() => {\r\n        setUrl(props.initUrl)\r\n    }, [props.initUrl, props.rerender])\r\n    useEffect(() => {\r\n        let count = 0\r\n        for (let i = 0; i<props.otherImages.length; i++) {\r\n            if (props.otherImages[i] === url) {\r\n                count++\r\n            }\r\n        }\r\n        setDuplicate(count > 1)\r\n    }, [props.otherImages, url])\r\n    return (\r\n        <>\r\n            <div className={classes.div}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Bilde \" + (props.id + 1) + \" URL\"}\r\n                    value={url}\r\n                    onChange={(e) => {\r\n                        setUrl(e.target.value)\r\n                        props.onChangeFunc(props.id, e.target.value)\r\n                    }}\r\n                    InputProps={{\r\n                        className: duplicate ? classes.inputDuplicate : \"\",\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    helperText={duplicate ? \"OBS: Dette bildet har blitt lagt til flere ganger i dette prosjektet!\" : \" \"}\r\n                />\r\n                <Button\r\n                    variant={\"contained\"}\r\n                    className={classes.btn}\r\n                    color={\"secondary\"}\r\n                    onClick={(e) => {\r\n                        props.onDeleteFunc(props.id)\r\n                    }}\r\n                >\r\n                    <Delete />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {\r\n    Backdrop,\r\n    Button,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    Link,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Project} from \"../../types\";\r\nimport {add, collection, Doc, remove, update} from \"typesaurus\";\r\nimport {useState} from \"react\";\r\nimport ProjectAdminImage from \"./ProjectAdminImage\";\r\nimport {Add, Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\r\nimport ProjectCarousel from \"./ProjectCarousel\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nexport default function ProjectAdminCard(props:{create:boolean, project?:Doc<Project>}) {\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(props.project ? props.project.data.thumbnail : \"\")\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 30px\",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 15,\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                margin: \"0 10px 15px 0\",\r\n                color: \"white\",\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            },\r\n            link: {\r\n                color: \"darkblue\",\r\n                cursor: \"pointer\",\r\n                marginBottom: 15,\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n                backgroundColor: \"rgba(0,0,0,0.8)\"\r\n            },\r\n            projectGrid: {\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n                height: \"100%\",\r\n                width: 400,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n                backgroundImage: \"url('\" + thumbnailUrl + \"')\",\r\n                backgroundSize: \"cover\",\r\n                minHeight: 250,\r\n                padding: 0,\r\n                borderRadius: 0,\r\n                cursor: \"context-menu\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [title, setTitle] = useState(props.project ? props.project.data.title : \"\")\r\n    const [description, setDescription] = useState(props.project ? props.project.data.description : \"\")\r\n    const [images, setImages] = useState(props.project ?props.project.data.images : [\"\"])\r\n    const [open, setOpen] = useState(false)\r\n    const [rerender, setRerender] = useState(false)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const setImageByID = (id:number, value:string) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i === id) {\r\n                res.push(value)\r\n            } else {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n    }\r\n    const deleteImageByID = (id:number) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i !== id) {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n        setRerender(!rerender)\r\n    }\r\n    const projectCollection = collection<Project>(\"projects\")\r\n    const updateProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            update(projectCollection, props.project.ref.id, {title: title, description: description, thumbnail: thumbnailUrl, images:images})\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt oppdatert!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const deleteProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            remove(projectCollection, props.project.ref.id)\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt slettet!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const createProject = () => {\r\n        setIsProcessing(true)\r\n        add(projectCollection, {title:title, description:description, images:images,thumbnail:thumbnailUrl})\r\n            .then(() => {\r\n                alert(\"Prosjektet har blitt slettet!\")\r\n                setIsProcessing(false)\r\n                setTitle(\"\")\r\n                setDescription(\"\")\r\n                setImages([\"\"])\r\n                setThumbnailUrl(\"\")\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    let i = 0\r\n    return (\r\n        <>\r\n            <Grid item xs={12} className={classes.root}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Tittel\"}\r\n                    value={title}\r\n                    onChange={(e) => {setTitle(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Title />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Beskrivelse\"}\r\n                    multiline\r\n                    value={description}\r\n                    onChange={(e) => {setDescription(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Description />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Thumbnail</Typography>\r\n                <Button\r\n                    id={\"0\"}\r\n                    className={classes.projectGrid}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Thumbnail-URL\"}\r\n                    value={thumbnailUrl}\r\n                    onChange={(e) => {setThumbnailUrl(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Bilder</Typography>\r\n                {\r\n                    images.map(projectImage =>\r\n                        <ProjectAdminImage\r\n                            key={props.project ? (props.project.data.images[i] + \" \" + i) : i}\r\n                            otherImages={images}\r\n                            rerender={rerender}\r\n                            id={i++}\r\n                            onChangeFunc={(id, val) => {\r\n                                setImageByID(id, val)\r\n                            }}\r\n                            initUrl={projectImage}\r\n                            onDeleteFunc={(id:number) => deleteImageByID(id)}\r\n                        />\r\n                    )\r\n                }\r\n                <Button\r\n                    className={classes.btn + \" \" + classes.btnGreen}\r\n                    startIcon={<Add />}\r\n                    variant={\"contained\"}\r\n                    onClick={() => {\r\n                        let temp = images\r\n                        temp.push(\"\")\r\n                        setImages(temp)\r\n                        setRerender(!rerender)\r\n                    }}\r\n                    disabled={isProcessing}\r\n                >\r\n                    Legg til bilde\r\n                </Button>\r\n                <div className={classes.link}>\r\n                    <Link underline={\"always\"} color={\"textPrimary\"} onClick={() => {setOpen(true)}}>Forhåndsvis karusell</Link>\r\n                </div>\r\n                {\r\n                    (!props.create && props.project) ?\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Update />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateProject()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGrey}\r\n                                startIcon={<Backspace />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setImages(props.project!.data.images)\r\n                                    setTitle(props.project!.data.title)\r\n                                    setDescription(props.project!.data.description)\r\n                                    setThumbnailUrl(props.project!.data.thumbnail)\r\n                                    setRerender(!rerender)\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn}\r\n                                startIcon={<Delete />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setOpenDialog(true)\r\n                                }}\r\n                            >\r\n                                Slett\r\n                            </Button>\r\n                            <ConfirmDeleteDialog\r\n                                key={props.project.ref.id}\r\n                                setIsOpen={setOpenDialog}\r\n                                isOpen={openDialog}\r\n                                title={\"Er du sikker på at du vil slette prosjektet?\"}\r\n                                information={\"Prosjektet det gjelder: \" + props.project.data.title}\r\n                                deleteFunc={deleteProject}\r\n                            />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Add />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => createProject()}\r\n                            >\r\n                                Legg til prosjekt\r\n                            </Button>\r\n                        </>\r\n\r\n                }\r\n                <Backdrop className={classes.backdrop} open={open} onClick={() => {setOpen(false)}}>\r\n                    <ProjectCarousel imgUrls={images} />\r\n                </Backdrop>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {collection} from \"typesaurus\";\nimport {Project} from \"../../types\";\nimport {useOnAll} from \"@typesaurus/react\";\nimport ProjectAdminCard from \"./ProjectAdminCard\";\n\nexport default function ProjectsAdmin(props: {margin:number}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n        }),\n    );\n    const classes = useStyles();\n    // Retrieve projects from db\n    const projectsCol = collection<Project>(\"projects\")\n    const [projectDocs] = useOnAll(projectsCol)\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12}>\n                    <Typography variant={\"h4\"} className={classes.title}>Våre prosjekter</Typography>\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Nytt prosjekt</Typography>\n                    <ProjectAdminCard create={true} key={0} />\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Rediger prosjekter</Typography>\n                    {\n                        projectDocs &&\n                            projectDocs.map(project =>\n                            <ProjectAdminCard create={false} key={project.ref.id} project={project} />\n                        )\n                    }\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Add, Backspace, Email, Facebook, Instagram, Link, Map, Phone, Room, Update} from \"@material-ui/icons\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\nexport default function FooterAdmin() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\"\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n            },\r\n            txtField: {\r\n                margin: \"7.5px 15px 7.5px 0\"\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n                border: \"none\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const pageElements = collection(\"pageElements\")\r\n    const [footerDoc, status] = useOnGet<FooterSection>(pageElements, \"footer\")\r\n    const [countryCode, setCountryCode] = useState(47)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [mapsUrl, setMapsUrl] = useState(\"\")\r\n    const [ig, setIg] = useState(\"\")\r\n    const [fb, setFb] = useState(\"\")\r\n    const [mapEmbed, setMapEmbed] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (footerDoc && !status.loading && !status.error) {\r\n            setCountryCode(footerDoc.data.countryCode)\r\n            setPhoneNumber(footerDoc.data.phone)\r\n            setAddress(footerDoc.data.address)\r\n            setMapsUrl(footerDoc.data.mapsUrl)\r\n            setEmail(footerDoc.data.email)\r\n            setIg(footerDoc.data.igLink)\r\n            setFb(footerDoc.data.fbLink)\r\n            setMapEmbed(footerDoc.data.mapsEmbed)\r\n        }\r\n    }, [footerDoc, status.error, status.loading])\r\n    const updateFooter = () => {\r\n        setIsProcessing(true)\r\n        update(pageElements, \"footer\", {countryCode:countryCode, address:address, email:email, fbLink:fb, igLink:ig, phone:phoneNumber, mapsUrl:mapsUrl, mapsEmbed:mapEmbed})\r\n            .then(() => {\r\n                alert(\"Footeren har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container spacing={4} alignItems={\"center\"}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={\"h4\"}>\r\n                                Rediger footer\r\n                            </Typography>\r\n                            <div className={classes.div}>\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Landkode\"}\r\n                                    value={countryCode}\r\n                                    type={\"number\"}\r\n                                    onChange={(e) => setCountryCode(parseInt(e.target.value))}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Add />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Telefonnummer\"}\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Phone />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"E-post\"}\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Email />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Adresse\"}\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Room />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Google Maps URL\"}\r\n                                value={mapsUrl}\r\n                                onChange={(e) => setMapsUrl(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Map />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Instagram-URL\"}\r\n                                value={ig}\r\n                                onChange={(e) => setIg(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Instagram />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Facebook-URL\"}\r\n                                value={fb}\r\n                                onChange={(e) => setFb(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Facebook />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Google maps embed-src\"}\r\n                                value={mapEmbed}\r\n                                onChange={(e) => setMapEmbed(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Link />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Update />}\r\n                                className={classes.btnGreen}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateFooter()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Backspace />}\r\n                                className={classes.btnGrey}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    if (footerDoc) {\r\n                                        setPhoneNumber(footerDoc.data.phone)\r\n                                        setMapEmbed(footerDoc.data.mapsEmbed)\r\n                                        setEmail(footerDoc.data.email)\r\n                                        setAddress(footerDoc.data.address)\r\n                                        setMapsUrl(footerDoc.data.mapsUrl)\r\n                                        setIg(footerDoc.data.igLink)\r\n                                        setFb(footerDoc.data.fbLink)\r\n                                        setCountryCode(footerDoc.data.countryCode)\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","\r\nconst validateImage = async (url:string, errorFunc:() => any, successFunc:() => any) => {\r\n    let img = new Image()\r\n    img.onerror = () => errorFunc()\r\n    img.onload = () => successFunc()\r\n    img.src = url\r\n}\r\n\r\nexport {validateImage}","import {\n    Button,\n    Container,\n    createStyles,\n    Grid,\n    InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n    Typography\n} from \"@material-ui/core\";\nimport {HeaderSection} from \"../../types\";\nimport {collection, update} from \"typesaurus\";\nimport {useGet} from \"@typesaurus/react\";\nimport {useEffect, useState} from \"react\";\nimport {validateImage} from \"../../adminUtils\";\nimport {Link, Update} from \"@material-ui/icons\";\n\nlet logoImg = require(\"./llbygg_redusert.png\")\nconst darkness = 0.25 // Higher = darker\n\nexport default function HeaderAdmin() {\n    const pageElem = collection(\"pageElements\")\n    const [isValidImg, setIsValidImg] = useState(true)\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\n    let [inputImg, setInputImg] = useState(\"\")\n    const uploadImg = () => {\n        setIsValidImg(false)\n        let pageElements = collection(\"pageElements\")\n        update(pageElements, \"header\", {imgUrl : inputImg}).then(() => {\n            alert(\"Header har blitt oppdatert!\")\n            setIsValidImg(true)\n        }).catch((e) => {\n            alert(e)\n            setIsValidImg(true)\n        })\n    }\n    useEffect(() => {\n        if (img) {\n            setInputImg(img.data.imgUrl)\n        }\n    }, [img])\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: \"15px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            header: {\n                height: \"85vh\",\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (inputImg) + \"')\",\n                backgroundAttachment: \"fixed\",\n                backgroundSize: \"cover\",\n                boxShadow: \"inset 0 0 7em 1em #000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n            },\n            typography: {\n                color: \"white\",\n                marginTop: 20,\n            },\n            imgBg: {\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: 10,\n            },\n            gridContainer: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                marginTop: 15,\n                color: \"white\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\",\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <>\n            <div className={classes.header}>\n                <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={200} />\n            </div>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\n                    <Grid container direction={\"column\"}>\n                        <Typography variant={\"h4\"} className={classes.title}>\n                            Rediger header\n                        </Typography>\n                        <div>\n                            <TextField\n                                variant={\"outlined\"}\n                                label={\"Bilde-URL\"}\n                                value={inputImg}\n                                fullWidth\n                                onChange={e => {\n                                    setInputImg(e.target.value)\n                                    validateImage(e.target.value, () => setIsValidImg(false), () => setIsValidImg(true))\n                                }}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <Link />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            <Button\n                                variant={\"contained\"}\n                                startIcon={<Update />}\n                                className={classes.greenBtn}\n                                disabled={!isValidImg}\n                                onClick={() => uploadImg()}\n                            >\n                                Oppdater\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {Button, createStyles, Divider, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Services from \"../services/Services\";\r\nimport About from \"../about/About\";\r\nimport News from \"../news/News\";\r\nimport React from \"react\";\r\nimport ProjectsAdmin from \"../projects/ProjectsAdmin\";\r\nimport FooterAdmin from \"../FooterAdmin\";\r\nimport HeaderAdmin from \"../header/HeaderAdmin\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport {auth} from \"../../firebase\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"20px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            width: \"300px\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"darkgreen\",\r\n            }\r\n        },\r\n        divider: {\r\n            width: \"30vw\",\r\n            margin: \"auto\",\r\n        },\r\n    }),\r\n);\r\nexport default function AdminPanel() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const newsCollection = collection<NewsDoc>(\"news\")\r\n    const [newsDocs] = useOnAll(newsCollection)\r\n    let margin = 15\r\n    const submit = () => {\r\n        auth.signOut().then(() => {\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h4\"}>Administrator-panel</Typography>\r\n                <Button startIcon={<MeetingRoomIcon />} fullWidth variant=\"contained\" onClick={submit} className={classes.btn}>\r\n                    Logg ut\r\n                </Button>\r\n            </form>\r\n            <HeaderAdmin />\r\n            <Services admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <About admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <ProjectsAdmin margin={15} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <News admin={true} news={newsDocs ? newsDocs : []} margin={margin} />\r\n\r\n\r\n            <FooterAdmin />\r\n        </>\r\n    )\r\n}","function Flake() {\n    let size = Math.random()\n    let style = {\n        flake: {\n            fontSize: size + \"em\"\n        }\n    }\n    return (\n        <div style={style.flake} className=\"snowflake\">❆</div>\n    )\n}\n\nexport default function Snowflakes() {\n\n    return (\n        <div className=\"snowflakes\" aria-hidden=\"true\">\n            <Flake/>\n            <Flake/>\n            <Flake/>\n            <Flake/>\n            <Flake/>\n            <Flake/>\n            <Flake/>\n            <Flake/>\n        </div>\n    )\n}","import {useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport About from \"./components/about/About\";\nimport {Backdrop, CircularProgress, createStyles, Divider, makeStyles, Theme} from \"@material-ui/core\";\nimport Services from \"./components/services/Services\";\nimport Footer from \"./components/Footer\";\nimport ContactForm from \"./components/contactform/ContactForm\";\nimport News from \"./components/news/News\"\nimport {\n    createMuiTheme,\n    ThemeProvider,\n} from '@material-ui/core/styles';\nimport Projects from \"./components/projects/Projects\";\nimport { ScrollingProvider, Section } from \"react-scroll-section\";\nimport {HashRouter as Router, Switch, Route, RouteProps} from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport \"./firebase\"\nimport Login from \"./components/login/Login\";\nimport AdminPanel from \"./components/adminpanel/AdminPanel\";\nimport {collection} from \"typesaurus\";\nimport {NewsDoc} from \"./types\";\nimport {useOnAll} from \"@typesaurus/react\";\nimport { auth } from \"./firebase\";\nimport Snowflakes from \"./components/misc/Snowflakes\";\n\n\nfunction App() {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            divider: {\n                width: \"30vw\",\n                margin: \"auto\",\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff',\n                backgroundColor: \"black\",\n            },\n        }),\n    );\n    const classes = useStyles()\n    let margin = 50;\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#FF8C00\"\n            },\n        },\n        typography: {\n            h5: {\n                fontFamily: [\n                    \"Poppins\",\n                    \"Urbanist\",\n                    \"Roboto\",\n                ].join(\",\"),\n                fontSize: 25,\n            },\n            h4: {\n                fontFamily: [\n                    \"Poppins\",\n                    \"Urbanist\",\n                    \"Roboto\",\n                ].join(\",\"),\n                fontSize: 35,\n                color: \"#666\"\n            },\n            body1: {\n                fontFamily: [\n                    \"Urbanist\",\n                    \"Roboto\",\n                ].join(\",\"),\n                fontSize: 18,\n            },\n            body2: {\n                fontSize: 16,\n            }\n\n        }\n    });\n    const newsCol = collection<NewsDoc>(\"news\")\n    const [news] = useOnAll(newsCol)\n\n    const [displayOverlay, setDisplayOverlay] = useState(true)\n    let [isHeaderLoaded, setIsHeaderLoaded] = useState(false)\n    if (news && displayOverlay && isHeaderLoaded) {\n        setTimeout(() => {\n            setDisplayOverlay(false);\n        }, 500);\n    }\n    const menuItems =\n        news && news.length > 0 ?\n            [ // [section-reference, menu-text]\n                [\"hjemRef\", \"hjem\"],\n                [\"tjenesteRef\", \"våre tjenester\"],\n                [\"omRef\", \"om oss\"],\n                [\"prosjektRef\", \"våre prosjekter\"],\n                [\"nyhetRef\", \"Nyheter\"],\n                [\"kontaktRef\", \"kontakt oss\"]\n            ]\n            :\n            [ // [section-reference, menu-text]\n                [\"hjemRef\", \"hjem\"],\n                [\"tjenesteRef\", \"våre tjenester\"],\n                [\"omRef\", \"om oss\"],\n                [\"prosjektRef\", \"våre prosjekter\"],\n                [\"kontaktRef\", \"kontakt oss\"]\n            ]\n    // Detect mobile screen\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    const [height, setHeight] = useState<number>(window.innerHeight);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\n    let isIpad: boolean = !isMobile && width <= 1366;\n    let lowHeight: boolean = height <= 900;\n    let currentDate = new Date();\n    let christmas = currentDate.getMonth() === 11; // Christmas styling in December\n    return (\n        <div className=\"App\">\n            { christmas && <Snowflakes /> }\n            <Backdrop\n                className={classes.backdrop}\n                open={displayOverlay}\n                onClick={(e) => e}\n                transitionDuration={{appear:0, enter:0, exit:2000}}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"#f0852b\" strokeWidth=\"45\" width={isMobile ? \"25vw\" : \"10vw\"}\n                     viewBox=\"0 0 521.42 368.27\">\n                    <polyline\n                        className=\"path\"\n                        points=\"92.31 344.77 22.5 344.77 22.5 200.11 190.43 32.19 358.83 199.6 358.83 345.77 163.78 345.77 163.78 199.6 331.31 31.79 498.92 198.4 498.92 345.77 426.27 345.77\"\n                    />\n                </svg>\n            </Backdrop>\n            {\n                news &&\n                <ScrollingProvider scrollBehavior={\"smooth\"}>\n                    <ThemeProvider theme={theme}>\n                        <Router basename={process.env.PUBLIC_URL}>\n                            <Switch>\n                                <DisallowAuthenticatedRoute path={\"/admin\"}>\n                                    <Login />\n                                </DisallowAuthenticatedRoute>\n                                <AuthenticatedRoute path={\"/adminPanel\"}>\n                                    <AdminPanel />\n                                </AuthenticatedRoute>\n                                <UnAuthenticatedRoute path={\"/\"}>\n                                    <NavigationBar menuItems={menuItems} />\n\n                                    <Section id={\"hjemRef\"}>\n                                        <Header setIsHeaderLoaded={setIsHeaderLoaded} lowHeight={lowHeight} isMobile={isMobile} isIpad={isIpad} />\n                                    </Section>\n\n                                    <Section id={\"tjenesteRef\"}>\n                                        <Services margin={margin} admin={false} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n\n                                    <Section id={\"omRef\"}>\n                                        <About admin={false} margin={margin} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n\n                                    <Section id={\"prosjektRef\"}>\n                                        <Projects margin={margin} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n                                    {\n                                        news && news.length > 0 &&\n                                        <>\n                                            <Section id={\"nyhetRef\"}>\n                                                <News admin={false} news={news} margin={margin} />\n                                            </Section>\n                                            <Divider className={classes.divider} />\n                                        </>\n                                    }\n                                    <Section id={\"kontaktRef\"}>\n                                        <ContactForm margin={margin} />\n                                    </Section>\n                                    <Footer />\n                                </UnAuthenticatedRoute>\n                            </Switch>\n                        </Router>\n                    </ThemeProvider>\n                </ScrollingProvider>\n            }\n        </div>\n    );\n}\n\nexport default App;\n\n// Redirect user\ninterface AuthRouteProps extends RouteProps {\n    redirect?: string\n}\n\nfunction AuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\n    const [user, loading, error] = useAuthState(auth)\n    error && console.error(error)\n    return (\n        <Route {...rest}>\n            {loading && <CircularProgress />}\n            {((!user && !loading) || error) && <Redirect to={redirect} />}\n            {user && children}\n        </Route>\n    )\n}\n\nfunction UnAuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\n    return (\n        <Route {...rest}>\n            {children}\n        </Route>\n    )\n}\n\nfunction DisallowAuthenticatedRoute({ children, redirect = \"/adminPanel\", ...rest }: AuthRouteProps) {\n    const [user, loading, error] = useAuthState(auth)\n    error && console.error(error)\n    return (\n        <Route {...rest}>\n            {loading && <CircularProgress />}\n            {((user && !loading)) && <Redirect to={redirect} />}\n            {(!user || error) && !loading && children}\n        </Route>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}