{"version":3,"sources":["components/header/llbygg_redusert.png","components/header/Header.tsx","components/NavigationBar.tsx","components/ConfirmDeleteDialog.tsx","components/employees/EmployeeCard.tsx","components/employees/Employees.tsx","components/about/About.tsx","components/services/Services.tsx","components/Footer.tsx","components/contactform/ContactForm.tsx","components/news/Announcement.tsx","components/news/AnnouncementAdmin.tsx","components/news/CreateAnnouncementAdmin.tsx","components/news/NewsAdmin.tsx","components/news/News.tsx","components/projects/ProjectCarousel.tsx","components/projects/Projects.tsx","components/login/Login.tsx","components/projects/ProjectAdminImage.tsx","components/projects/ProjectAdminCard.tsx","components/projects/ProjectsAdmin.tsx","components/FooterAdmin.tsx","adminUtils.ts","components/header/HeaderAdmin.tsx","components/adminpanel/AdminPanel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["logoImg","require","Header","pageElem","collection","useGet","img","classes","makeStyles","theme","createStyles","header","height","background","data","imgUrl","backgroundAttachment","backgroundSize","boxShadow","display","alignItems","justifyContent","flexDirection","typography","color","marginTop","imgBg","backgroundColor","width","padding","useStyles","className","alt","src","default","menuButton","margin","appbar","position","menuIconBox","borderRadius","zIndex","backdrop","drawer","icon","menuText","flex","cursor","menuTextContainer","minHeight","navigateIconHover","opacity","paddingLeft","transition","navigateIconExit","navigateIconMobile","MenuItem","props","useState","window","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","isMobile","hover","setHover","headerSection","useScrollSection","reference","Link","onClick","underline","onMouseEnter","onMouseLeave","Typography","variant","boldText","menuItem","toUpperCase","NavigationBar","openBackdrop","setOpenBackdrop","handleToggle","AppBar","Toolbar","IconButton","edge","aria-label","Backdrop","open","menuItems","map","ConfirmDeleteDialog","deleteBtn","deleteDiv","Dialog","onClose","setIsOpen","aria-labelledby","isOpen","DialogTitle","title","information","Button","deleteFunc","EmployeeCard","text","lineHeight","card","media","paddingTop","filter","marginBottom","txtField","btn","btnUpdate","btnGrey","name","setName","role","setRole","description","desc","setDesc","url","setImgUrl","priority","displayPriority","setDisplayPriority","openDialog","setOpenDialog","isProcessing","setIsProcessing","employeeCollection","Grid","item","xs","sm","xl","Card","CardMedia","image","admin","createEmployee","TextField","value","onChange","e","target","fullWidth","label","InputProps","startAdornment","InputAdornment","AccountCircle","Build","multiline","Description","parseInt","type","PriorityHigh","disabled","startIcon","Add","add","then","alert","catch","console","error","Update","update","id","Backspace","Delete","remove","Employees","employeesCollection","useOnAll","employeeDocs","container","textAlign","gridContainer","spacing","sort","a","b","employee","ref","About","aboutDoc","setDescription","setTitle","whiteSpace","Container","lg","md","Title","style","pageElementsCol","Services","servicesDoc","setError","uploadServiceDescriptions","descs","byggDesc","monteringDesc","rehabiliteringDesc","subtitle","iconContainer","palette","primary","main","fontSize","saveBtn","marginLeft","btnDiv","gridContainerCenter","tempDescription","services","faHammer","faHouseDamage","faTools","setDescs","direction","service","temp","i","FooterIcon","textHover","iconText","textDecoration","iconDiv","marginRight","iconDivHover","href","linkTo","Footer","root","textFaded","center","marginTop15","marginRight10","iconHover","maxHeight","maxWidth","backgroundImage","link","footerInfoContainer","iconHoverInsta","setIconHoverInsta","iconHoverFb","setIconHoverFb","pageElems","useOnGet","footerDoc","igLink","fbLink","countryCode","phone","slice","email","address","mapsUrl","mapsEmbed","frameBorder","loading","ContactForm","textField","notRobot","setNotRobot","method","noValidate","action","autoComplete","required","rows","toLowerCase","includes","length","Announcement","dateString","textTransform","announcement","datetime","toLocaleDateString","weekday","day","year","month","hour","minute","greyBtn","greenBtn","newsCollection","borderColor","Date","createAnnouncement","NewsAdmin","existingNewsDocs","News","news","ProjectCarousel","alignSelf","imgContainer","navButtonsAlwaysVisible","fullHeightHover","autoPlay","NextIcon","PrevIcon","navButtonsProps","activeIndicatorIconButtonProps","buttonWrapper","top","button","imgUrls","imageUrl","ProjectGrid","projectHover","setProjectHover","setOpen","projectGrid","projectData","thumbnail","displayProjectText","projectHoverDiv","bottom","images","ProjectDesc","projectDesc","toggle","isLast","Projects","projectsCol","projectDocs","projectCount","project","Login","setEmail","password","setPassword","setLoading","errorState","setErrorState","auth","firebase","app","history","useHistory","signInWithEmailAndPassword","push","message","finally","ProjectAdminImage","duplicate","setDuplicate","flexWrap","flexBasis","div","inputDuplicate","initUrl","setUrl","rerender","count","otherImages","onChangeFunc","helperText","onDeleteFunc","ProjectAdminCard","thumbnailUrl","setThumbnailUrl","btnGreen","setImages","setRerender","projectCollection","projectImage","val","res","setImageByID","deleteImageByID","create","ProjectsAdmin","FooterAdmin","border","pageElements","status","setCountryCode","phoneNumber","setPhoneNumber","setAddress","setMapsUrl","ig","setIg","fb","setFb","mapEmbed","setMapEmbed","Map","validateImage","errorFunc","successFunc","Image","onerror","onload","HeaderAdmin","isValidImg","setIsValidImg","inputImg","setInputImg","uploadImg","divider","AdminPanel","newsDocs","signOut","Divider","App","createMuiTheme","newsCol","displayOverlay","setDisplayOverlay","setTimeout","transitionDuration","appear","enter","exit","xmlns","fill","stroke","strokeWidth","viewBox","points","scrollBehavior","ThemeProvider","basename","process","DisallowAuthenticatedRoute","path","AuthenticatedRoute","UnAuthenticatedRoute","children","redirect","rest","useAuthState","user","CircularProgress","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f349a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/llbygg_redusert.fc265ec0.png\";","import {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport {HeaderSection} from \"../../types\";\nimport {collection} from \"typesaurus\";\nimport {useGet} from \"@typesaurus/react\";\n\nlet logoImg = require(\"./llbygg_redusert.png\")\nconst darkness = 0.25 // Higher = darker\n\nexport default function Header() {\n    const pageElem = collection(\"pageElements\")\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\n\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            header: {\n                height: \"85vh\",\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (img ? img.data!.imgUrl : \"\") + \"')\",\n                backgroundAttachment: \"fixed\",\n                backgroundSize: \"cover\",\n                boxShadow: \"inset 0 0 7em 1em #000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n            },\n            typography: {\n                color: \"white\",\n                marginTop: 20,\n            },\n            imgBg: {\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: 10,\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <div className={classes.header}>\n            <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={200} />\n        </div>\n    )\n}","import {\n    AppBar,\n    Backdrop,\n    createStyles,\n    IconButton,\n    Link,\n    makeStyles,\n    Theme,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {useEffect, useState} from \"react\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { useScrollSection } from \"react-scroll-section\";\n\n\nconst menuIconSize = 30; // Burger menu icon\nconst arrowIconSize = 40; // Right-arrow icon when hovering over menu element\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        menuButton: {\n            margin: \"auto\",\n        },\n        appbar: {\n            background: \"transparent\",\n            boxShadow: \"none\",\n            position: \"static\",\n            height: 0,\n        },\n        menuIconBox: {\n            //backgroundColor: \"orange\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            borderRadius: 5,\n            marginTop: 20,\n            color: \"white\",\n            backgroundColor: \"rgba(255,140,0,0.8)\",\n            position: \"fixed\",\n            zIndex: 1,\n        },\n        backdrop: {\n            zIndex: theme.zIndex.drawer + 1,\n            color: '#fff',\n            backgroundColor: \"rgba(255,102,0,0.93)\",\n        },\n        icon: {\n            width: menuIconSize,\n            height: menuIconSize,\n        },\n        menuText: {\n            flex: 1,\n            color: \"white\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            cursor: \"pointer\",\n        },\n        menuTextContainer: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            minHeight: \"70vh\",\n        },\n        navigateIconHover: {\n            opacity: 1,\n            width: arrowIconSize,\n            height: arrowIconSize,\n            paddingLeft: 5,\n            transition: \"all 0.2s ease-in-out\",\n        },\n        navigateIconExit: {\n            opacity: 0,\n            width: arrowIconSize,\n            height: arrowIconSize,\n            transition: \"all 0.2s ease-in-out\",\n        },\n        navigateIconMobile: {\n            opacity: 0,\n            width: 0,\n            height: 0,\n        }\n    }),\n);\n\nfunction MenuItem(props:{reference:string, boldText:boolean, menuItem:string}) {\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 768);\n    const classes = useStyles();\n    let [hover, setHover] = useState(false);\n    const headerSection = useScrollSection(props.reference);\n    return (\n        <>\n            <Link onClick={headerSection.onClick} underline=\"none\" className={classes.menuText} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\n                <NavigateNextIcon className={isMobile ? classes.navigateIconMobile : (hover ? classes.navigateIconHover : classes.navigateIconExit)} />\n                <Typography variant={isMobile ? \"h5\" : \"h4\"}>\n                    {\n                        props.boldText ?\n                            <b>{props.menuItem.toUpperCase()}</b> : props.menuItem.toUpperCase()\n                    }\n                </Typography>\n            </Link>\n        </>\n    )\n}\n\nexport default function NavigationBar(props:{menuItems:string[][]}) {\n    const classes = useStyles();\n    const boldText = false;\n    const [openBackdrop, setOpenBackdrop] = useState(false);\n    const handleToggle = () => { // Toggle backdrop\n        setOpenBackdrop(!openBackdrop);\n    }\n    return (\n        <>\n            <AppBar position={\"fixed\"} className={classes.appbar}>\n                <Toolbar>\n                    <div className={classes.menuIconBox}>\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleToggle}>\n                                <MenuIcon className={classes.icon} />\n                        </IconButton>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Backdrop className={classes.backdrop} open={openBackdrop} onClick={handleToggle}>\n                <div className={classes.menuTextContainer}>\n                    {\n                        props.menuItems.map(menuItem =>\n                            <MenuItem key={menuItem[0]} boldText={boldText} menuItem={menuItem[1]} reference={menuItem[0]} />\n                        )\n                    }\n                </div>\n            </Backdrop>\n        </>\n    )\n}","import {Button, createStyles, Dialog, DialogTitle, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\n\r\nexport default function ConfirmDeleteDialog(props:{setIsOpen:(arg:boolean) => any, isOpen:boolean, title:string, information:string, deleteFunc:() => any}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            deleteBtn: {\r\n                margin: 15,\r\n            },\r\n            deleteDiv: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <Dialog onClose={() => {props.setIsOpen(false)}} aria-labelledby=\"Slett nyhet\" open={props.isOpen}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <div className={classes.deleteDiv}>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>DET VIL IKKE VÆRE MULIG Å ANGRE NÅR DETTE ER GJORT!</Typography>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>{props.information}</Typography>\r\n                <Typography variant={\"body2\"} color={\"textSecondary\"}>Klikk utenfor dette vinduet for å angre sletting.</Typography>\r\n                <Button\r\n                    className={classes.deleteBtn}\r\n                    variant={\"outlined\"}\r\n                    color={\"secondary\"}\r\n                    onClick={() => {\r\n                        props.setIsOpen(false)\r\n                        props.deleteFunc()\r\n                    }}\r\n                >\r\n                    Bekreft sletting\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}","import {\r\n    Button,\r\n    Card,\r\n    CardMedia,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport {add, collection, remove, update} from \"typesaurus\";\r\nimport {Employee} from \"../../types\";\r\nimport {\r\n    AccountCircle,\r\n    Add,\r\n    Backspace,\r\n    Build,\r\n    Delete,\r\n    Description,\r\n    Link,\r\n    PriorityHigh,\r\n    Update\r\n} from \"@material-ui/icons\";\r\n\r\ninterface employeeCardInterface {\r\n    name: string;\r\n    role: string;\r\n    description: string;\r\n    url: string;\r\n    admin: boolean;\r\n    priority: number;\r\n    id: string;\r\n    createEmployee: boolean;\r\n}\r\nexport default function EmployeeCard(props:employeeCardInterface) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            title: {\r\n\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            card: {\r\n                boxShadow: \"none\",\r\n            },\r\n            media: {\r\n                height: 10,\r\n                paddingTop: '100%',\r\n                filter: \"grayscale(100%)\",\r\n                borderRadius: 1,\r\n                marginBottom: 15,\r\n                backgroundColor: \"#EEE\",\r\n            },\r\n            txtField: {\r\n                margin: \"10px 0\"\r\n            },\r\n            btn: {\r\n                marginBottom: 10,\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                color: \"white\",\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [name, setName] = useState(props.name)\r\n    const [role, setRole] = useState(props.role)\r\n    const [desc, setDesc] = useState(props.description)\r\n    const [imgUrl, setImgUrl] = useState(props.url ? props.url : \"\")\r\n    const [displayPriority, setDisplayPriority] = useState(props.priority)\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const employeeCollection = collection<Employee>(\"employees\")\r\n    const deleteEmployee = () => {\r\n        setIsProcessing(true)\r\n        remove(employeeCollection, props.id)\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt slettet!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const updateEmployee = () => {\r\n        setIsProcessing(true)\r\n        update(employeeCollection, props.id, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const createEmployee = () => {\r\n        add(employeeCollection, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                setName(\"\")\r\n                setRole(\"\")\r\n                setDesc(\"\")\r\n                setImgUrl(\"\")\r\n                setDisplayPriority(0)\r\n                alert(\"Den ansatte har blitt lagt til!\")\r\n                setIsProcessing(false)\r\n            }).catch((e) => {\r\n            console.error(e)\r\n            alert(e)\r\n            setIsProcessing(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid item xs={8} sm={5} xl={4}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        title={props.name}\r\n                        image={imgUrl ? imgUrl : \"empty\"}\r\n                        className={classes.media}\r\n                    />\r\n                    {\r\n                        props.admin ?\r\n                            props.createEmployee ?\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Add />} onClick={() => createEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Legg til ansatt</Button>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Update />} onClick={() => updateEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Oppdater</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Backspace />} fullWidth variant={\"contained\"} color={\"default\"} className={classes.btn + \" \" + classes.btnGrey} onClick={() => {\r\n                                        setName(props.name)\r\n                                        setDesc(props.description)\r\n                                        setRole(props.role)\r\n                                        setImgUrl(props.url)\r\n                                        setDisplayPriority(props.priority)\r\n                                    }\r\n                                    }>Angre endringer</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Delete />} onClick={() => setOpenDialog(true)} fullWidth variant={\"contained\"} color={\"secondary\"} className={classes.btn}>Slett</Button>\r\n                                    <ConfirmDeleteDialog key={props.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette den ansatte?\"} information={\"Ansatt det gjelder: \" + props.name} deleteFunc={deleteEmployee} />\r\n                                </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} className={classes.title}>\r\n                                    {props.name}\r\n                                </Typography>\r\n                                <Typography variant={\"caption\"} color={\"textSecondary\"}>\r\n                                    <b>{props.role.toUpperCase()}</b>\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {props.description}\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport {Employee} from \"../../types\";\r\n\r\nexport default function Employees(props: {margin:number, admin:boolean}) {\r\n    const employeesCollection = collection(\"employees\")\r\n    let [employeeDocs] = useOnAll<Employee>(employeesCollection)\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBottom: props.margin,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    if (props.admin) {\r\n        return (\r\n            <>\r\n                <Typography variant={\"body1\"} className={classes.title} color={\"textSecondary\"}><b>Merk:</b> Høyere visningsprioritet vil gjøre at den ansatte vil dukke opp høyere på siden</Typography>\r\n                <Grid container spacing={3} className={classes.gridContainer}>\r\n                    {\r\n                        employeeDocs ?\r\n                            employeeDocs\r\n                                .sort((a,b) => b.data.priority - a.data.priority)\r\n                                .map(employee =>\r\n                                    <EmployeeCard\r\n                                        admin={props.admin}\r\n                                        key={employee.ref.id}\r\n                                        url={employee.data.imgUrl}\r\n                                        name={employee.data.name}\r\n                                        role={employee.data.role}\r\n                                        priority={employee.data.priority}\r\n                                        id={employee.ref.id}\r\n                                        createEmployee={false}\r\n                                        description={employee.data.description} />\r\n                                )\r\n                            :\r\n                            \"Vennligst vent mens seksjonen laster\"\r\n                    }\r\n                    <EmployeeCard\r\n                        admin={props.admin}\r\n                        url={\"\"}\r\n                        name={\"\"}\r\n                        role={\"\"}\r\n                        priority={0}\r\n                        id={\"\"}\r\n                        createEmployee={true}\r\n                        description={\"\"}\r\n                    />\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.gridContainer}>\r\n                {\r\n                    employeeDocs ?\r\n                        employeeDocs\r\n                            .sort((a,b) => b.data.priority - a.data.priority)\r\n                            .map(employee =>\r\n                            <EmployeeCard\r\n                                admin={props.admin}\r\n                                key={employee.ref.id}\r\n                                url={employee.data.imgUrl}\r\n                                name={employee.data.name}\r\n                                role={employee.data.role}\r\n                                priority={employee.data.priority}\r\n                                id={employee.ref.id}\r\n                                createEmployee={false}\r\n                                description={employee.data.description} />\r\n                            )\r\n                        :\r\n                        \"Vennligst vent mens seksjonen laster\"\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Employees from \"../employees/Employees\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {AboutSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Description, Title, Update} from \"@material-ui/icons\";\r\n\r\nexport default function About(props: {margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [aboutDoc] = useGet<AboutSection>(pageElem, \"about\")\r\n    let [description, setDescription] = useState(\"\")\r\n    let [title, setTitle] = useState(\"\")\r\n    let [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (aboutDoc) {\r\n            setDescription(aboutDoc.data.description)\r\n            setTitle(aboutDoc.data.title)\r\n        }\r\n    }, [aboutDoc])\r\n    const updateAboutSection = () => {\r\n        if (!aboutDoc) {\r\n            alert(\"Vent til informasjonen laster fra databasen\")\r\n            return\r\n        }\r\n        setIsProcessing(true)\r\n        update(pageElem, aboutDoc.ref.id, {title:title, description:description})\r\n            .then(() => {\r\n                alert(\"Beskrivelsen har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            txtField: {\r\n                margin: \"15px 0\",\r\n                whiteSpace: \"pre-line\",\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title}>\r\n                        Om oss\r\n                    </Typography>\r\n                    <Employees admin={props.admin} margin={15} />\r\n                    {\r\n                        props.admin ?\r\n                            <>\r\n                                <Typography variant={\"h5\"}>Rediger \"Om oss\"-seksjon</Typography>\r\n                                <TextField\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    value={title}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Tittel\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Title />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    value={description}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Beskrivelse\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Description />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant={\"contained\"}\r\n                                    className={classes.btnUpdate}\r\n                                    onClick={() => {\r\n                                        updateAboutSection()\r\n                                    }}\r\n                                    disabled={isProcessing}\r\n                                    startIcon={<Update />}\r\n                                >\r\n                                    Oppdater\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>\r\n                                    <b>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.title.toUpperCase()\r\n                                            :\r\n                                            \"STIFTET I 2016\"\r\n                                    }\r\n                                    </b>\r\n                                </Typography>\r\n                                <Typography style={{whiteSpace: 'pre-line'}} display=\"block\" variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.description\r\n                                            :\r\n                                            \"Beskrivelse laster...\"\r\n                                    }\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faHammer, faHouseDamage, faTools } from '@fortawesome/free-solid-svg-icons'\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {ServicesSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Update} from \"@material-ui/icons\";\r\n\r\nlet pageElementsCol = collection(\"pageElements\")\r\nexport default function Services(props:{margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [servicesDoc] = useGet<ServicesSection>(pageElem, \"services\")\r\n    let [error, setError] = useState(\"\")\r\n    const uploadServiceDescriptions = async (descs:string[]) => {\r\n        update(pageElementsCol, \"services\", { byggDesc: descs[0], monteringDesc: descs[1], rehabiliteringDesc: descs[2] })\r\n            .then(() => {\r\n                setError(\"\")\r\n                alert(\"Beskrivelsen ble oppdatert\")\r\n            })\r\n            .catch(e => {\r\n                console.error(e)\r\n                alert(e)\r\n                setError(e)\r\n            })\r\n    }\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            subtitle: {\r\n                marginBottom: 5,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                margin: \"auto\",\r\n            },\r\n            iconContainer: {\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n            },\r\n            icon: {\r\n                color: theme.palette.primary.main,\r\n                fontSize: 45,\r\n                display: \"flex\",\r\n                margin: \"10px auto\",\r\n            },\r\n            saveBtn: {\r\n                marginBottom: 15,\r\n                marginLeft: 15,\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnDiv: {\r\n                width: \"100%\",\r\n            },\r\n            gridContainerCenter: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const tempDescription = \"Beskrivelse laster inn, vennligst vent...\"\r\n    let services = [\r\n        [0, \"Bygg\", (servicesDoc ? servicesDoc.data.byggDesc : tempDescription), faHammer],\r\n        [1, \"Rehabilitering\", (servicesDoc ? servicesDoc.data.rehabiliteringDesc : tempDescription), faHouseDamage],\r\n        [2, \"Montering\", (servicesDoc ? servicesDoc.data.monteringDesc : tempDescription), faTools]\r\n    ]\r\n    let [descs, setDescs] = useState([\"\",\"\",\"\"])\r\n    useEffect(() => {\r\n        if (servicesDoc) {\r\n            setDescs([\r\n                servicesDoc.data.byggDesc,\r\n                servicesDoc.data.rehabiliteringDesc,\r\n                servicesDoc.data.monteringDesc\r\n            ])\r\n        }\r\n    }, [servicesDoc])\r\n\r\n    return(\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container direction={\"column\"}>\r\n                        <Typography variant={\"h4\"} className={classes.title}>\r\n                            Våre tjenester\r\n                        </Typography>\r\n                        <Grid container className={classes.gridContainerCenter} spacing={4}>\r\n                            {\r\n                                services.map(service =>\r\n                                    // @ts-ignore\r\n                                    <Grid key={service[0]} item xl={4} lg={6} md={8} sm={10} xs={12}>\r\n                                        <div className={classes.iconContainer}>\r\n                                            <div className={classes.iconContainer}>\r\n                                                {/* @ts-ignore */}\r\n                                                <FontAwesomeIcon className={classes.icon} icon={service[3]} />\r\n                                            </div>\r\n                                            <Typography variant={\"h5\"} className={classes.subtitle} color={\"textSecondary\"}>\r\n                                                <b>{service[1]}</b>\r\n                                            </Typography>\r\n                                            {\r\n                                                props.admin ?\r\n                                                    <>\r\n                                                        <TextField\r\n                                                            label=\"Beskrivelse\"\r\n                                                            variant=\"outlined\"\r\n                                                            multiline\r\n                                                            /* @ts-ignore */\r\n                                                            value={descs[service[0]]}\r\n                                                            onChange = {\r\n                                                                e =>\r\n                                                                {\r\n                                                                    let temp = [\"\",\"\",\"\"]\r\n                                                                    for (let i = 0; i<3; i++) {\r\n                                                                        if (i === service[0]) {\r\n                                                                            temp[i] = e.target.value\r\n                                                                        } else {\r\n                                                                            temp[i] = descs[i]\r\n                                                                        }\r\n                                                                    }\r\n                                                                    setDescs(temp)\r\n                                                                }\r\n                                                            }\r\n                                                        />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Typography variant={\"body2\"} className={classes.text} color={\"textSecondary\"}>\r\n                                                        {service[2]}\r\n                                                    </Typography>\r\n                                            }\r\n                                        </div>\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                            <div className={classes.btnDiv}>\r\n                                {\r\n                                    props.admin &&\r\n                                    <>\r\n                                        <Button\r\n                                            className={classes.saveBtn}\r\n                                            variant={\"contained\"}\r\n                                            startIcon={<Update />}\r\n                                            onClick={() =>\r\n                                            {\r\n                                                uploadServiceDescriptions(descs)\r\n                                            }\r\n                                            }\r\n                                        >\r\n                                            Oppdater\r\n                                        </Button>\r\n                                        {\r\n                                            error !== \"\" &&\r\n                                            <Typography variant={\"caption\"}>\r\n                                                {error}\r\n                                            </Typography>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, Link, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport {useEffect, useState} from \"react\";\r\nimport {collection} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\n\r\nfunction FooterIcon(props:{text:string, linkTo:string, icon:JSX.Element}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            textHover: {\r\n                lineHeight: \"200%\",\r\n                color: \"orange\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 5,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                textDecoration: \"none\",\r\n            },\r\n            iconDiv: {\r\n                marginRight: 10,\r\n                color: \"white\",\r\n            },\r\n            iconDivHover: {\r\n                marginRight: 10,\r\n                color: \"orange\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [hover, setHover] = useState(false);\r\n    return (\r\n        <>\r\n            <Link\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n                href={props.linkTo}\r\n                underline={\"none\"}\r\n                target={\"_blank\"}\r\n                className={classes.iconText}\r\n            >\r\n                <Typography variant={\"body2\"} className={hover ? classes.textHover + \" \" + classes.iconDivHover : classes.text + \" \" + classes.iconDiv}>\r\n                    {props.icon} {props.text}\r\n                </Typography>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function Footer() {\r\n    // Detect mobile screen\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\"\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n                color: \"white\",\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n            },\r\n            textFaded: {\r\n                lineHeight: \"200%\",\r\n                color: \"#888\",\r\n            },\r\n            center: {\r\n                margin: \"auto\",\r\n                textAlign: \"center\",\r\n            },\r\n            marginTop15: {\r\n                marginTop: 15\r\n            },\r\n            marginRight10: {\r\n                marginRight: 10,\r\n            },\r\n            icon: {\r\n                color: \"white\",\r\n                marginRight: 10,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconHover: {\r\n                marginRight: 10,\r\n                color: theme.palette.primary.main,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n            },\r\n            map: {\r\n                maxHeight: \"400px\",\r\n                minHeight: \"300px\",\r\n                maxWidth: \"400px\",\r\n                borderRadius: 5,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                backgroundImage: \"url('https://assets.website-files.com/5e832e12eb7ca02ee9064d42/5f7db426b676b95755fb2844_Group%20805.jpg')\",\r\n                backgroundSize: \"cover\",\r\n            },\r\n            link: {\r\n                color: \"orange\",\r\n            },\r\n            footerInfoContainer: {\r\n                display: \"flex\",\r\n                justifyContent: isMobile ? \"center\" : \"\",\r\n                alignItems: isMobile ? \"center\" : \"\",\r\n                flexDirection: \"column\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [iconHoverInsta, setIconHoverInsta] = useState(false);\r\n    let [iconHoverFb, setIconHoverFb] = useState(false);\r\n    const pageElems = collection(\"pageElements\")\r\n    const [footerDoc] = useOnGet<FooterSection>(pageElems, \"footer\")\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Container className={classes.container}>\r\n                    <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                        <Grid container spacing={4} alignItems={\"center\"}>\r\n                            <Grid item xs={12} className={classes.center}>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverInsta(true)}\r\n                                    onMouseLeave={() => setIconHoverInsta(false)}\r\n                                    href={footerDoc ? footerDoc.data.igLink : \"\"}\r\n                                    className={iconHoverInsta ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <InstagramIcon />\r\n                                </Link>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverFb(true)}\r\n                                    onMouseLeave={() => setIconHoverFb(false)}\r\n                                    href={footerDoc ? footerDoc.data.fbLink : \"\"}\r\n                                    className={iconHoverFb ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <FacebookIcon />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} className={classes.footerInfoContainer}>\r\n                                <FooterIcon\r\n                                    text={\r\n                                        \"(+\" +\r\n                                        (footerDoc ? footerDoc.data.countryCode : \"\") +\") \" +\r\n                                        (footerDoc ? footerDoc.data.phone.slice(0,3) + \" \" +\r\n                                            footerDoc.data.phone.slice(3,5) + \" \" +\r\n                                            footerDoc.data.phone.slice(5,8) : \"\")\r\n                                    }\r\n                                    linkTo={\"tel: \" +\r\n                                    (footerDoc ? footerDoc.data.countryCode + footerDoc.data.phone : \"\")\r\n                                    }\r\n                                    icon={<PhoneIcon className={classes.marginRight10} />}/>\r\n                                <FooterIcon\r\n                                    text={\"Kontakt oss via e-post\"}\r\n                                    linkTo={footerDoc ? \"mailto:\" + footerDoc.data.email : \"\"}\r\n                                    icon={<EmailIcon className={classes.marginRight10} />}\r\n                                />\r\n                                <FooterIcon\r\n                                    text={footerDoc ? footerDoc.data.address : \"\"}\r\n                                    linkTo={footerDoc ? footerDoc.data.mapsUrl : \"\"}\r\n                                    icon={\r\n                                        <RoomIcon className={classes.marginRight10} />\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12}>\r\n                                <iframe\r\n                                    src={footerDoc ? footerDoc.data.mapsEmbed : \"\"}\r\n                                    width=\"100%\" height=\"350\" frameBorder={\"none\"} title={\"kart\"}\r\n                                    loading=\"lazy\">\r\n                                </iframe>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant={\"body2\"} className={classes.textFaded + \" \" + classes.center + \" \" + classes.marginTop15}>\r\n                                    <b>Nettside laget av <Link href={\"https://joachimmaksim.no/\"} target=\"_blank\" className={classes.link}>Foxden Consulting</Link> (2021)</b>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ContactForm(props: {margin:number}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            textField: {\r\n                marginBottom: 15,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [notRobot, setNotRobot] = useState(\"\")\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title} >\r\n                        Kontakt oss\r\n                    </Typography>\r\n                    <form method={\"post\"} noValidate action=\"https://formspree.io/f/xnqldjry\" autoComplete=\"off\">\r\n                        <TextField type={\"email\"} name={\"_replyto\"} required fullWidth id=\"standard-basic\" label=\"E-post\" className={classes.textField} /> {/* TODO: Enforce this */}\r\n                        <TextField name={\"Navn\"} fullWidth id=\"standard-basic\" label=\"Navn\" className={classes.textField} />\r\n                        <TextField name={\"Adresse\"} fullWidth id=\"standard-basic\" label=\"Adresse\" className={classes.textField} />\r\n                        <TextField name={\"Tema\"} fullWidth id=\"standard-basic\" label=\"Tema\" className={classes.textField} />\r\n                        <TextField name={\"Melding\"} multiline rows={5} fullWidth id=\"standard-basic\" label=\"Melding\" className={classes.textField} />\r\n                        <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.title} >\r\n                            Vennligst skriv 'ikkerobot' i tekstfeltet under for å bekrefte at du er en ekte person\r\n                        </Typography>\r\n                        <TextField multiline value={notRobot} onChange={(e) => setNotRobot(e.target.value)} fullWidth id=\"standard-basic\" label=\"Skriv 'ikkerobot' her\" className={classes.textField} />\r\n                        <Button disabled={!notRobot.toLowerCase().includes(\"ikkerobot\") || notRobot.length >= 12} type={\"submit\"} variant={\"outlined\"} color={\"primary\"} >Send henvendelse</Button>\r\n                    </form>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {Doc} from \"typesaurus\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            title: {\n                marginBottom: 5,\n            },\n            text: {\n                lineHeight: \"200%\",\n            },\n            dateString: {\n                textTransform: \"capitalize\",\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <>\n            <Grid item xs={12}>\n                <Typography variant={\"h5\"} className={classes.title}>\n                    {props.announcement.data.title}\n                </Typography>\n                <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.dateString}>\n                    <b>{props.announcement.data.datetime.toLocaleDateString(\"no-NB\", {\n                        weekday: 'short', // long, short, narrow\n                        day: 'numeric', // numeric, 2-digit\n                        year: 'numeric', // numeric, 2-digit\n                        month: 'long', // numeric, 2-digit, long, short, narrow\n                        hour: 'numeric', // numeric, 2-digit\n                        minute: 'numeric', // numeric, 2-digit\n                    })}</b>\n                </Typography>\n                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\n                    {props.announcement.data.description}\n                </Typography>\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {\n    Button,\n    createStyles,\n    Grid, InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {collection, Doc, update, remove} from \"typesaurus\";\nimport {useState} from \"react\";\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\nimport {Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            txtField: {\n                marginBottom: 15,\n            },\n            root: {\n                //border: \"1px solid orange\",\n                padding: \"15px 15px 0\",\n                margin: \"15px 0 \",\n                borderRadius: 10,\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\n            },\n            btn: {\n                marginBottom: 15,\n                marginRight: 10,\n                color: \"white\",\n            },\n            deleteBtn: {\n                margin: 15,\n            },\n            deleteDiv: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            },\n            greyBtn: {\n                backgroundColor: \"grey\",\n                \"&:hover\": {\n                    backgroundColor: \"#333\"\n                }\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\"\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    const [openDialog, setOpenDialog] = useState(false);\n    let [desc, setDesc] = useState(props.announcement.data.description)\n    let [title, setTitle] = useState(props.announcement.data.title)\n    let [isProcessing, setIsProcessing] = useState(false)\n    const newsCollection = collection<NewsDoc>(\"news\")\n    const updateAnnouncement = () => {\n        setIsProcessing(true)\n        update(newsCollection, props.announcement.ref.id, {title: title, description: desc})\n            .then(() => {\n                setIsProcessing(false)\n            })\n            .catch((e) => {\n                alert(e)\n                console.error(e)\n                setIsProcessing(false)\n            })\n    }\n    const deleteAnnouncement = () => {\n        setIsProcessing(true)\n        remove(newsCollection, props.announcement.ref.id)\n            .then(() => {\n                setIsProcessing(false)\n            })\n            .catch((e) => {\n                alert(e)\n                console.error(e)\n                setIsProcessing(false)\n            })\n    }\n    return (\n        <>\n            <Grid className={classes.root} item xs={12}>\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Tittel\"}\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Title />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Beskrivelse\"}\n                    value={desc}\n                    onChange={(e) => setDesc(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Description />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button startIcon={<Update />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} color={\"primary\"} onClick={() => {\n                    updateAnnouncement()\n                }}>Oppdater</Button>\n                <Button className={classes.btn + \" \" + classes.greyBtn} variant={\"contained\"} startIcon={<Backspace />} color={\"default\"} onClick={() => {\n                    setDesc(props.announcement.data.description)\n                    setTitle(props.announcement.data.title)\n                }}>Angre alle endringer</Button>\n                <Button startIcon={<Delete />} disabled={isProcessing} className={classes.btn} variant={\"contained\"} onClick={() => {setOpenDialog(true)}} color={\"secondary\"}>Slett</Button>\n                <ConfirmDeleteDialog key={props.announcement.ref.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette nyheten?\"} information={\"Nyheten det gjelder: \" + props.announcement.data.title} deleteFunc={deleteAnnouncement} />\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {\n    Button,\n    createStyles,\n    Grid, InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n} from \"@material-ui/core\";\nimport {NewsDoc} from \"../../types\";\nimport {collection, add} from \"typesaurus\";\nimport {useState} from \"react\";\nimport {Add, Description, Title} from \"@material-ui/icons\";\n\ninterface announcementInterface {\n    id:number;\n    title:string;\n    description:string;\n    date:Date;\n}\n\nexport default function Announcement() {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            txtField: {\n                marginBottom: 15,\n            },\n            root: {\n                //border: \"1px solid orange\",\n                padding: \"15px 15px 0\",\n                margin: \"15px 0 \",\n                borderRadius: 10,\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\n            },\n            btn: {\n                marginBottom: 15,\n                marginRight: 10,\n                color: \"white\",\n                borderColor: \"green\",\n            },\n            greyBtn: {\n                backgroundColor: \"grey\",\n                \"&:hover\": {\n                    backgroundColor: \"#333\"\n                }\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\"\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    let [desc, setDesc] = useState(\"\")\n    let [title, setTitle] = useState(\"\")\n    let [isProcessing, setIsProcessing] = useState(false)\n    let [error, setError] = useState(false)\n    const newsCollection = collection<NewsDoc>(\"news\")\n    const createAnnouncement = () => {\n        setIsProcessing(true)\n        if (title.length === 0 || desc.length === 0) {\n            alert(\"Nyheten trenger en tittel og beskrivelse!\")\n            setError(true)\n            setIsProcessing(false)\n            return\n        }\n        add(newsCollection, {datetime: new Date(), description: desc, title: title})\n            .then(() => {\n                alert(\"Nyheten har blitt publisert!\")\n                setTitle(\"\")\n                setDesc(\"\")\n                setIsProcessing(false)\n                setError(false)\n            }).catch((e) => {\n                setError(true)\n                console.error(e)\n                alert(e)\n                setIsProcessing(false)\n            })\n    }\n    return (\n        <>\n            <Grid className={classes.root} item xs={12}>\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Tittel\"}\n                    value={title}\n                    error={error}\n                    onChange={(e) => setTitle(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Title />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <TextField\n                    className={classes.txtField}\n                    fullWidth\n                    multiline\n                    variant={\"outlined\"}\n                    label={\"Beskrivelse\"}\n                    value={desc}\n                    error={error}\n                    onChange={(e) => setDesc(e.target.value)}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <Description />\n                            </InputAdornment>\n                        ),\n                    }}\n                />\n                <Button startIcon={<Add />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} onClick={() => {\n                    createAnnouncement()\n                }}>Publiser nyhet</Button>\n            </Grid>\n        </>\n    )\n}\n\nexport type {announcementInterface}","import {Doc} from \"typesaurus\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport AnnouncementAdmin from \"./AnnouncementAdmin\";\r\nimport CreateAnnouncementAdmin from \"./CreateAnnouncementAdmin\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nexport default function NewsAdmin(props:{existingNewsDocs:Doc<NewsDoc>[]}) {\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Publiser nyhet</Typography>\r\n                <CreateAnnouncementAdmin />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Rediger nyheter</Typography>\r\n                <br />\r\n                {\r\n                    props.existingNewsDocs\r\n                        // @ts-ignore\r\n                        .sort((a,b) => b.data.datetime - a.data.datetime)\r\n                        .map(announcement => <AnnouncementAdmin key={announcement.ref.id} announcement={announcement} />)\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport Announcement from \"./Announcement\";\nimport {NewsDoc} from \"../../types\";\nimport {Doc} from \"typesaurus\";\nimport NewsAdmin from \"./NewsAdmin\";\n\nexport default function News(props:{margin:number, admin:boolean, news:Doc<NewsDoc>[]}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            text: {\n                lineHeight: \"200%\",\n            },\n            gridContainer: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n            }\n        }),\n    );\n    const classes = useStyles()\n\n    if (props.news.length <= 0 && !props.admin) {\n        return (<></>)\n    }\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\n                    <Grid container direction={\"column\"}>\n                        <Typography variant={\"h4\"} className={classes.title}>\n                            Siste nyheter\n                        </Typography>\n                        {\n                            props.admin ?\n                                <>\n                                    <NewsAdmin existingNewsDocs={props.news} />\n                                </>\n                                :\n                                <>\n                                    <Grid container spacing={4}>\n                                        {\n                                            // @ts-ignore\n                                            props.news.sort((a,b) => b.data.datetime - a.data.datetime).map(announcement =>\n                                                <Announcement key={announcement.ref.id} announcement={announcement} />\n                                            )\n                                        }\n                                    </Grid>\n                                </>\n                        }\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import Carousel from 'react-material-ui-carousel'\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\ninterface carouselProps {\n    imgUrls:string[]\n}\n\nexport default function ProjectCarousel(props:carouselProps) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            image: {\n                maxHeight: \"90vh\",\n                maxWidth: \"90vw\",\n                margin: \"auto\",\n                alignSelf: \"center\",\n            },\n            imgContainer: {\n                width: \"90vw\",\n                height: \"90vh\",\n                display: \"flex\",\n            }\n        }),\n    );\n    const classes = useStyles();\n\n    return (\n        <>\n            {/*@ts-ignore*/}\n            <Carousel\n                navButtonsAlwaysVisible\n                fullHeightHover={false}\n                autoPlay={false}\n                NextIcon={<NavigateNextIcon />}\n                PrevIcon={<NavigateBeforeIcon />}\n                /* @ts-ignore */\n                navButtonsProps={{          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\n                    style: {\n                        backgroundColor: 'orange',\n                    }\n                }}\n                activeIndicatorIconButtonProps={{\n                    style: {\n                        backgroundColor: 'darkorange',\n                        color: \"orange\",\n                    }\n                }}\n                buttonWrapper={\n                    {\n                        style: {\n                            position: \"absolute\",\n                            height: \"150px\",\n                            backgroundColor: \"orange\",\n                            top: \"calc(50% - 70px)\",\n                            '&:hover': {\n                                '& $button': {\n                                    backgroundColor: \"black\",\n                                    filter: \"brightness(100%)\",\n                                    opacity: \"1 !important\"\n                                }\n                            }\n                        }\n                    }\n                }\n                button={{\n                    style:{\n                        position: \"relative\",\n                        backgroundColor: \"#494949\",\n                        top: \"calc(50% - 20px) !important\",\n                        color: \"white\",\n                        fontSize: \"30px\",\n                        transition: \"200ms\",\n                        cursor: \"pointer\",\n                        '&:hover': {\n                            opacity: \"1 !important\"\n                        },\n                    }\n                }}\n            >\n            {\n                props.imgUrls.map(imageUrl =>\n                    <div key={imageUrl} className={classes.imgContainer}>\n                        <img alt={\"bilde\"} className={classes.image} src={imageUrl} />\n                    </div>\n                    )\n            }\n            </Carousel>\n        </>\n    )\n}","import {Backdrop, Button, Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {useEffect, useState} from \"react\";\nimport ProjectCarousel from \"./ProjectCarousel\";\nimport {collection, Doc} from \"typesaurus\";\nimport {Project} from \"../../types\";\nimport {useOnAll} from \"@typesaurus/react\";\n\nfunction ProjectGrid(props: {projectData:Doc<Project> | undefined}) {\n    let [projectHover, setProjectHover] = useState(false);\n    const [open, setOpen] = useState(false);\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleToggle = () => {\n        setOpen(!open);\n    };\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            projectGrid: {\n                backgroundColor: \"rgba(0,0,0,0.1)\",\n                height: \"100%\",\n                width: \"100%\",\n                backgroundImage: \"url('\" + (props.projectData ? props.projectData.data.thumbnail : \"\") + \"')\",\n                backgroundSize: \"cover\",\n                minHeight: 250,\n                padding: 0,\n                borderRadius: 0,\n            },\n            displayProjectText: {\n                color: \"white\",\n                opacity: projectHover ? \"100%\" : \"0%\",\n                transition: \"all 0.2s ease-in-out\",\n            },\n            projectHoverDiv: {\n                width: \"100%\",\n                height: projectHover ? \"100%\" : 0,\n                bottom: \"0\",\n                backgroundColor: \"rgba(255,140,0, 0.9)\",\n                color: \"white\",\n                position: \"absolute\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                transition: \"0.2s ease-in-out\",\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff',\n                backgroundColor: \"rgba(0,0,0,0.8)\"\n            },\n        }),\n    );\n    const classes = useStyles();\n    if (!props.projectData) {\n        return (\n            <>\n                Laster inn data...\n            </>\n        )\n    }\n    return (\n        <Grid item sm={6} xs={12}>\n            <Button\n                id={props.projectData.ref!.id}\n                className={classes.projectGrid}\n                onMouseEnter={() => setProjectHover(true)}\n                onMouseLeave={() => setProjectHover(false)}\n                onClick={handleToggle}\n            >\n                <div className={classes.projectHoverDiv}>\n                    <Typography variant={\"body1\"} className={classes.displayProjectText}>\n                        <b>\n                            Vis\n                            {\n                                \" \" + props.projectData.data.images.length + \" bilde\" + (props.projectData.data.images.length > 1 ? \"r\" : \"\")\n                            }\n                        </b>\n                    </Typography>\n                </div>\n            </Button>\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n                <ProjectCarousel imgUrls={props.projectData.data.images} />\n            </Backdrop>\n        </Grid>\n    )\n}\n\nfunction ProjectDesc(props: {isMobile:boolean, toggle:boolean, isLast:boolean, projectData:Doc<Project> | undefined}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            projectDesc: {\n                padding: props.isMobile ? \"5px 0\" : (props.toggle ? \"5px 15px\" : \"5px 15px 5px 0\"),\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                height: \"100%\",\n                maxWidth: \"100%\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            text: {\n                lineHeight: \"200%\",\n                marginBottom: props.isMobile && !props.isLast ? \"3.5em\" : \"0\",\n            },\n        }),\n    );\n    const classes = useStyles();\n    const textTitleStyle = \"h5\"; // Anbefaler h5\n    const textStyle = \"body2\"; // Anbefaler body1, body2 eller caption\n    if (!props.projectData) {\n        return (\n            <>\n                Laster inn beskrivelse...\n            </>\n        )\n    }\n    return (\n        <Grid item sm={6} xs={12}>\n            <div className={classes.projectDesc}>\n                <div>\n                    <Typography variant={textTitleStyle} className={classes.title} color={\"textPrimary\"}>\n                        { props.projectData.data.title }\n                    </Typography>\n                    <Typography variant={textStyle} className={classes.text} color={\"textSecondary\"}>\n                        { props.projectData.data.description }\n                    </Typography>\n                </div>\n            </div>\n        </Grid>\n    )\n}\n\nexport default function Projects(props: {margin:number}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            }\n        }),\n    );\n    const classes = useStyles();\n\n    // Detect mobile screen\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\n    // Retrieve projects from db\n    const projectsCol = collection<Project>(\"projects\")\n    const [projectDocs] = useOnAll(projectsCol)\n    let toggle = false; // Controls whether to display text on left or right side\n    let projectCount = 0; // Used to check which image is last\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12}>\n                    <Typography variant={\"h4\"} className={classes.title}>Våre prosjekter</Typography>\n                    <Grid container spacing={0}>\n                        {\n                            projectDocs ?\n                            projectDocs.map(project => {\n                                toggle = !toggle\n                                projectCount += 1\n                                return (\n                                    <Grid container key={project.ref.id}>\n                                        {\n                                            isMobile ?\n                                                <>\n                                                    <ProjectGrid projectData={project} />\n                                                    <ProjectDesc toggle={toggle} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                </>\n                                                :\n                                                toggle ?\n                                                    <>\n                                                        <ProjectGrid projectData={project} />\n                                                        <ProjectDesc toggle={toggle} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                    </>\n                                                    :\n                                                    <>\n                                                        <ProjectDesc toggle={toggle} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\n                                                        <ProjectGrid projectData={project} />\n                                                    </>\n                                        }\n                                    </Grid>\n                                )\n                            }\n                            )\n                                :\n                                \"Prosjekter laster\"\n                        }\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {Button, createStyles, makeStyles, Theme, Typography} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useState} from \"react\";\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"150px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        txtField: {\r\n            width: \"400px\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            width: \"200px\",\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [loading, setLoading] = useState(false)\r\n    let [errorState, setErrorState] = useState(\"\")\r\n    const auth = firebase.app().auth()\r\n    const history = useHistory()\r\n    const submit = () => {\r\n        setLoading(true)\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setErrorState(\"\")\r\n            history.push(\"/adminPanel\")\r\n        }).catch(e => {\r\n            setErrorState(e.message)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n    if (loading) {\r\n        return (<>Loading...</>)\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h5\"} >Logg inn</Typography>\r\n                <TextField onChange={e => {setEmail(e.target.value)}} id=\"outlined-basic\" label=\"E-post\" className={classes.txtField} variant=\"outlined\" />\r\n                <TextField onChange={e => {setPassword(e.target.value)}} type=\"password\" label=\"Passord\" className={classes.txtField} variant=\"outlined\" />\r\n                {\r\n                    errorState\r\n                }\r\n                <Button variant=\"contained\" onClick={submit} color=\"primary\" className={classes.btn}>\r\n                    Logg inn\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import {Button, createStyles, InputAdornment, makeStyles, TextField, Theme} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport default function ProjectAdminImage(props:{onDeleteFunc:(id:number) => any, rerender:boolean, id:number, otherImages:string[], initUrl:string, onChangeFunc:(id:number, val:string) => any}) {\r\n    const [duplicate, setDuplicate] = useState(false)\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 \",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 5,\r\n                marginTop: 15,\r\n                flexWrap: \"wrap\",\r\n                flexBasis: \"90%\",\r\n\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                marginLeft: 5,\r\n                marginBottom: 12,\r\n                color: \"white\",\r\n                flexBasis: \"5%\",\r\n                height: 55,\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n            },\r\n            inputDuplicate: {\r\n                color: \"red\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [url, setUrl] = useState(props.initUrl)\r\n    useEffect(() => {\r\n        setUrl(props.initUrl)\r\n    }, [props.initUrl, props.rerender])\r\n    useEffect(() => {\r\n        let count = 0\r\n        for (let i = 0; i<props.otherImages.length; i++) {\r\n            if (props.otherImages[i] === url) {\r\n                count++\r\n            }\r\n        }\r\n        setDuplicate(count > 1)\r\n    }, [props.otherImages, url])\r\n    return (\r\n        <>\r\n            <div className={classes.div}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Bilde \" + (props.id + 1) + \" URL\"}\r\n                    value={url}\r\n                    onChange={(e) => {\r\n                        setUrl(e.target.value)\r\n                        props.onChangeFunc(props.id, e.target.value)\r\n                    }}\r\n                    InputProps={{\r\n                        className: duplicate ? classes.inputDuplicate : \"\",\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    helperText={duplicate ? \"OBS: Dette bildet har blitt lagt til flere ganger i dette prosjektet!\" : \" \"}\r\n                />\r\n                <Button\r\n                    variant={\"contained\"}\r\n                    className={classes.btn}\r\n                    color={\"secondary\"}\r\n                    onClick={(e) => {\r\n                        props.onDeleteFunc(props.id)\r\n                    }}\r\n                >\r\n                    <Delete />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {\r\n    Backdrop,\r\n    Button,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    Link,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Project} from \"../../types\";\r\nimport {add, collection, Doc, remove, update} from \"typesaurus\";\r\nimport {useState} from \"react\";\r\nimport ProjectAdminImage from \"./ProjectAdminImage\";\r\nimport {Add, Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\r\nimport ProjectCarousel from \"./ProjectCarousel\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nexport default function ProjectAdminCard(props:{create:boolean, project?:Doc<Project>}) {\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(props.project ? props.project.data.thumbnail : \"\")\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 30px\",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 15,\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                margin: \"0 10px 15px 0\",\r\n                color: \"white\",\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            },\r\n            link: {\r\n                color: \"darkblue\",\r\n                cursor: \"pointer\",\r\n                marginBottom: 15,\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n                backgroundColor: \"rgba(0,0,0,0.8)\"\r\n            },\r\n            projectGrid: {\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n                height: \"100%\",\r\n                width: 400,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n                backgroundImage: \"url('\" + thumbnailUrl + \"')\",\r\n                backgroundSize: \"cover\",\r\n                minHeight: 250,\r\n                padding: 0,\r\n                borderRadius: 0,\r\n                cursor: \"context-menu\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [title, setTitle] = useState(props.project ? props.project.data.title : \"\")\r\n    const [description, setDescription] = useState(props.project ? props.project.data.description : \"\")\r\n    const [images, setImages] = useState(props.project ?props.project.data.images : [\"\"])\r\n    const [open, setOpen] = useState(false)\r\n    const [rerender, setRerender] = useState(false)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const setImageByID = (id:number, value:string) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i === id) {\r\n                res.push(value)\r\n            } else {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n    }\r\n    const deleteImageByID = (id:number) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i !== id) {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n        setRerender(!rerender)\r\n    }\r\n    const projectCollection = collection<Project>(\"projects\")\r\n    const updateProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            update(projectCollection, props.project.ref.id, {title: title, description: description, thumbnail: thumbnailUrl, images:images})\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt oppdatert!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const deleteProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            remove(projectCollection, props.project.ref.id)\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt slettet!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const createProject = () => {\r\n        setIsProcessing(true)\r\n        add(projectCollection, {title:title, description:description, images:images,thumbnail:thumbnailUrl})\r\n            .then(() => {\r\n                alert(\"Prosjektet har blitt slettet!\")\r\n                setIsProcessing(false)\r\n                setTitle(\"\")\r\n                setDescription(\"\")\r\n                setImages([\"\"])\r\n                setThumbnailUrl(\"\")\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    let i = 0\r\n    return (\r\n        <>\r\n            <Grid item xs={12} className={classes.root}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Tittel\"}\r\n                    value={title}\r\n                    onChange={(e) => {setTitle(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Title />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Beskrivelse\"}\r\n                    multiline\r\n                    value={description}\r\n                    onChange={(e) => {setDescription(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Description />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Thumbnail</Typography>\r\n                <Button\r\n                    id={\"0\"}\r\n                    className={classes.projectGrid}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Thumbnail-URL\"}\r\n                    value={thumbnailUrl}\r\n                    onChange={(e) => {setThumbnailUrl(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Bilder</Typography>\r\n                {\r\n                    images.map(projectImage =>\r\n                        <ProjectAdminImage\r\n                            key={props.project ? (props.project.data.images[i] + \" \" + i) : i}\r\n                            otherImages={images}\r\n                            rerender={rerender}\r\n                            id={i++}\r\n                            onChangeFunc={(id, val) => {\r\n                                setImageByID(id, val)\r\n                            }}\r\n                            initUrl={projectImage}\r\n                            onDeleteFunc={(id:number) => deleteImageByID(id)}\r\n                        />\r\n                    )\r\n                }\r\n                <Button\r\n                    className={classes.btn + \" \" + classes.btnGreen}\r\n                    startIcon={<Add />}\r\n                    variant={\"contained\"}\r\n                    onClick={() => {\r\n                        let temp = images\r\n                        temp.push(\"\")\r\n                        setImages(temp)\r\n                        setRerender(!rerender)\r\n                    }}\r\n                    disabled={isProcessing}\r\n                >\r\n                    Legg til bilde\r\n                </Button>\r\n                <div className={classes.link}>\r\n                    <Link underline={\"always\"} color={\"textPrimary\"} onClick={() => {setOpen(true)}}>Forhåndsvis karusell</Link>\r\n                </div>\r\n                {\r\n                    (!props.create && props.project) ?\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Update />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateProject()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGrey}\r\n                                startIcon={<Backspace />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setImages(props.project!.data.images)\r\n                                    setTitle(props.project!.data.title)\r\n                                    setDescription(props.project!.data.description)\r\n                                    setThumbnailUrl(props.project!.data.thumbnail)\r\n                                    setRerender(!rerender)\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn}\r\n                                startIcon={<Delete />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setOpenDialog(true)\r\n                                }}\r\n                            >\r\n                                Slett\r\n                            </Button>\r\n                            <ConfirmDeleteDialog\r\n                                key={props.project.ref.id}\r\n                                setIsOpen={setOpenDialog}\r\n                                isOpen={openDialog}\r\n                                title={\"Er du sikker på at du vil slette prosjektet?\"}\r\n                                information={\"Prosjektet det gjelder: \" + props.project.data.title}\r\n                                deleteFunc={deleteProject}\r\n                            />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Add />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => createProject()}\r\n                            >\r\n                                Legg til prosjekt\r\n                            </Button>\r\n                        </>\r\n\r\n                }\r\n                <Backdrop className={classes.backdrop} open={open} onClick={() => {setOpen(false)}}>\r\n                    <ProjectCarousel imgUrls={images} />\r\n                </Backdrop>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\nimport {collection} from \"typesaurus\";\nimport {Project} from \"../../types\";\nimport {useOnAll} from \"@typesaurus/react\";\nimport ProjectAdminCard from \"./ProjectAdminCard\";\n\nexport default function ProjectsAdmin(props: {margin:number}) {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: props.margin + \"px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n        }),\n    );\n    const classes = useStyles();\n    // Retrieve projects from db\n    const projectsCol = collection<Project>(\"projects\")\n    const [projectDocs] = useOnAll(projectsCol)\n    return (\n        <>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12}>\n                    <Typography variant={\"h4\"} className={classes.title}>Våre prosjekter</Typography>\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Nytt prosjekt</Typography>\n                    <ProjectAdminCard create={true} key={0} />\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Rediger prosjekter</Typography>\n                    {\n                        projectDocs &&\n                            projectDocs.map(project =>\n                            <ProjectAdminCard create={false} key={project.ref.id} project={project} />\n                        )\n                    }\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Add, Backspace, Email, Facebook, Instagram, Link, Map, Phone, Room, Update} from \"@material-ui/icons\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\nexport default function FooterAdmin() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\"\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n            },\r\n            txtField: {\r\n                margin: \"7.5px 15px 7.5px 0\"\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n                border: \"none\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const pageElements = collection(\"pageElements\")\r\n    const [footerDoc, status] = useOnGet<FooterSection>(pageElements, \"footer\")\r\n    const [countryCode, setCountryCode] = useState(47)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [mapsUrl, setMapsUrl] = useState(\"\")\r\n    const [ig, setIg] = useState(\"\")\r\n    const [fb, setFb] = useState(\"\")\r\n    const [mapEmbed, setMapEmbed] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (footerDoc && !status.loading && !status.error) {\r\n            setCountryCode(footerDoc.data.countryCode)\r\n            setPhoneNumber(footerDoc.data.phone)\r\n            setAddress(footerDoc.data.address)\r\n            setMapsUrl(footerDoc.data.mapsUrl)\r\n            setEmail(footerDoc.data.email)\r\n            setIg(footerDoc.data.igLink)\r\n            setFb(footerDoc.data.fbLink)\r\n            setMapEmbed(footerDoc.data.mapsEmbed)\r\n        }\r\n    }, [footerDoc, status.error, status.loading])\r\n    const updateFooter = () => {\r\n        setIsProcessing(true)\r\n        update(pageElements, \"footer\", {countryCode:countryCode, address:address, email:email, fbLink:fb, igLink:ig, phone:phoneNumber, mapsUrl:mapsUrl, mapsEmbed:mapEmbed})\r\n            .then(() => {\r\n                alert(\"Footeren har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container spacing={4} alignItems={\"center\"}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={\"h4\"}>\r\n                                Rediger footer\r\n                            </Typography>\r\n                            <div className={classes.div}>\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Landkode\"}\r\n                                    value={countryCode}\r\n                                    type={\"number\"}\r\n                                    onChange={(e) => setCountryCode(parseInt(e.target.value))}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Add />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Telefonnummer\"}\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Phone />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"E-post\"}\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Email />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Adresse\"}\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Room />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Google Maps URL\"}\r\n                                value={mapsUrl}\r\n                                onChange={(e) => setMapsUrl(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Map />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Instagram-URL\"}\r\n                                value={ig}\r\n                                onChange={(e) => setIg(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Instagram />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Facebook-URL\"}\r\n                                value={fb}\r\n                                onChange={(e) => setFb(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Facebook />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Google maps embed-src\"}\r\n                                value={mapEmbed}\r\n                                onChange={(e) => setMapEmbed(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Link />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Update />}\r\n                                className={classes.btnGreen}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateFooter()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Backspace />}\r\n                                className={classes.btnGrey}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    if (footerDoc) {\r\n                                        setPhoneNumber(footerDoc.data.phone)\r\n                                        setMapEmbed(footerDoc.data.mapsEmbed)\r\n                                        setEmail(footerDoc.data.email)\r\n                                        setAddress(footerDoc.data.address)\r\n                                        setMapsUrl(footerDoc.data.mapsUrl)\r\n                                        setIg(footerDoc.data.igLink)\r\n                                        setFb(footerDoc.data.fbLink)\r\n                                        setCountryCode(footerDoc.data.countryCode)\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","\r\nconst validateImage = async (url:string, errorFunc:() => any, successFunc:() => any) => {\r\n    let img = new Image()\r\n    img.onerror = () => errorFunc()\r\n    img.onload = () => successFunc()\r\n    img.src = url\r\n}\r\n\r\nexport {validateImage}","import {\n    Button,\n    Container,\n    createStyles,\n    Grid,\n    InputAdornment,\n    makeStyles,\n    TextField,\n    Theme,\n    Typography\n} from \"@material-ui/core\";\nimport {HeaderSection} from \"../../types\";\nimport {collection, update} from \"typesaurus\";\nimport {useGet} from \"@typesaurus/react\";\nimport {useEffect, useState} from \"react\";\nimport {validateImage} from \"../../adminUtils\";\nimport {Link, Update} from \"@material-ui/icons\";\n\nlet logoImg = require(\"./llbygg_redusert.png\")\nconst darkness = 0.25 // Higher = darker\n\nexport default function HeaderAdmin() {\n    const pageElem = collection(\"pageElements\")\n    const [isValidImg, setIsValidImg] = useState(true)\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\n    let [inputImg, setInputImg] = useState(\"\")\n    const uploadImg = () => {\n        setIsValidImg(false)\n        let pageElements = collection(\"pageElements\")\n        update(pageElements, \"header\", {imgUrl : inputImg}).then(() => {\n            alert(\"Header har blitt oppdatert!\")\n            setIsValidImg(true)\n        }).catch((e) => {\n            alert(e)\n            setIsValidImg(true)\n        })\n    }\n    useEffect(() => {\n        if (img) {\n            setInputImg(img.data.imgUrl)\n        }\n    }, [img])\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            container: {\n                display: \"flex\",\n                justifyContent: \"center\",\n                margin: \"15px auto\",\n                textAlign: \"left\",\n            },\n            title: {\n                marginBottom: 15,\n            },\n            header: {\n                height: \"85vh\",\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (inputImg) + \"')\",\n                backgroundAttachment: \"fixed\",\n                backgroundSize: \"cover\",\n                boxShadow: \"inset 0 0 7em 1em #000\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n            },\n            typography: {\n                color: \"white\",\n                marginTop: 20,\n            },\n            imgBg: {\n                backgroundColor: \"rgba(0,0,0,0.5)\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                padding: 10,\n            },\n            gridContainer: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: \"auto\",\n            },\n            greenBtn: {\n                backgroundColor: \"green\",\n                marginTop: 15,\n                color: \"white\",\n                \"&:hover\": {\n                    backgroundColor: \"darkgreen\",\n                }\n            }\n        }),\n    );\n    const classes = useStyles()\n    return (\n        <>\n            <div className={classes.header}>\n                <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={200} />\n            </div>\n            <Container className={classes.container}>\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\n                    <Grid container direction={\"column\"}>\n                        <Typography variant={\"h4\"} className={classes.title}>\n                            Rediger header\n                        </Typography>\n                        <div>\n                            <TextField\n                                variant={\"outlined\"}\n                                label={\"Bilde-URL\"}\n                                value={inputImg}\n                                fullWidth\n                                onChange={e => {\n                                    setInputImg(e.target.value)\n                                    validateImage(e.target.value, () => setIsValidImg(false), () => setIsValidImg(true))\n                                }}\n                                InputProps={{\n                                    startAdornment: (\n                                        <InputAdornment position=\"start\">\n                                            <Link />\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                            <Button\n                                variant={\"contained\"}\n                                startIcon={<Update />}\n                                className={classes.greenBtn}\n                                disabled={!isValidImg}\n                                onClick={() => uploadImg()}\n                            >\n                                Oppdater\n                            </Button>\n                        </div>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}","import {Button, createStyles, Divider, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Services from \"../services/Services\";\r\nimport About from \"../about/About\";\r\nimport News from \"../news/News\";\r\nimport React from \"react\";\r\nimport ProjectsAdmin from \"../projects/ProjectsAdmin\";\r\nimport FooterAdmin from \"../FooterAdmin\";\r\nimport HeaderAdmin from \"../header/HeaderAdmin\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"20px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            width: \"300px\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"darkgreen\",\r\n            }\r\n        },\r\n        divider: {\r\n            width: \"30vw\",\r\n            margin: \"auto\",\r\n        },\r\n    }),\r\n);\r\nexport default function AdminPanel() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const newsCollection = collection<NewsDoc>(\"news\")\r\n    const [newsDocs] = useOnAll(newsCollection)\r\n    let margin = 15\r\n    const submit = () => {\r\n        firebase.app().auth().signOut().then(() => {\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h4\"}>Administrator-panel</Typography>\r\n                <Button startIcon={<MeetingRoomIcon />} fullWidth variant=\"contained\" onClick={submit} className={classes.btn}>\r\n                    Logg ut\r\n                </Button>\r\n            </form>\r\n            <HeaderAdmin />\r\n            <Services admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <About admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <ProjectsAdmin margin={15} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <News admin={true} news={newsDocs ? newsDocs : []} margin={margin} />\r\n\r\n\r\n            <FooterAdmin />\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport About from \"./components/about/About\";\nimport {Backdrop, CircularProgress, createStyles, Divider, makeStyles, Theme} from \"@material-ui/core\";\nimport Services from \"./components/services/Services\";\nimport Footer from \"./components/Footer\";\nimport ContactForm from \"./components/contactform/ContactForm\";\nimport News from \"./components/news/News\"\nimport {\n    createMuiTheme,\n    ThemeProvider,\n} from '@material-ui/core/styles';\nimport Projects from \"./components/projects/Projects\";\nimport { ScrollingProvider, Section } from \"react-scroll-section\";\nimport {HashRouter as Router, Switch, Route, RouteProps} from \"react-router-dom\";\nimport { Redirect } from \"react-router\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport firebase from 'firebase/app'\nimport Login from \"./components/login/Login\";\nimport AdminPanel from \"./components/adminpanel/AdminPanel\";\nimport {collection} from \"typesaurus\";\nimport {NewsDoc} from \"./types\";\nimport {useOnAll} from \"@typesaurus/react\";\n\n\nfunction App() {\n    const useStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            divider: {\n                width: \"30vw\",\n                margin: \"auto\",\n            },\n            backdrop: {\n                zIndex: theme.zIndex.drawer + 1,\n                color: '#fff',\n                backgroundColor: \"black\",\n            },\n        }),\n    );\n    const classes = useStyles()\n    let margin = 50;\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#FF8C00\"\n            },\n        }\n    });\n    const newsCol = collection<NewsDoc>(\"news\")\n    const [news] = useOnAll(newsCol)\n    const [displayOverlay, setDisplayOverlay] = useState(true)\n    if (news && displayOverlay) {\n        setTimeout(() => {\n            setDisplayOverlay(false);\n        }, 1000);\n    }\n    const menuItems =\n        news && news.length > 0 ?\n            [ // [section-reference, menu-text]\n                [\"hjemRef\", \"hjem\"],\n                [\"tjenesteRef\", \"våre tjenester\"],\n                [\"omRef\", \"om oss\"],\n                [\"prosjektRef\", \"våre prosjekter\"],\n                [\"nyhetRef\", \"Nyheter\"],\n                [\"kontaktRef\", \"kontakt oss\"]\n            ]\n            :\n            [ // [section-reference, menu-text]\n                [\"hjemRef\", \"hjem\"],\n                [\"tjenesteRef\", \"våre tjenester\"],\n                [\"omRef\", \"om oss\"],\n                [\"prosjektRef\", \"våre prosjekter\"],\n                [\"kontaktRef\", \"kontakt oss\"]\n            ]\n    // Detect mobile screen\n    const [width, setWidth] = useState<number>(window.innerWidth);\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n    useEffect(() => {\n        window.addEventListener('resize', handleWindowSizeChange);\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, []);\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\n    return (\n        <div className=\"App\">\n\n            <Backdrop\n                className={classes.backdrop}\n                open={displayOverlay}\n                onClick={(e) => e}\n                transitionDuration={{appear:0, enter:0, exit:2000}}\n            >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"#f0852b\" strokeWidth=\"45\" width={isMobile ? \"25vw\" : \"10vw\"}\n                     viewBox=\"0 0 521.42 368.27\">\n                    <polyline\n                        className=\"path\"\n                        points=\"92.31 344.77 22.5 344.77 22.5 200.11 190.43 32.19 358.83 199.6 358.83 345.77 163.78 345.77 163.78 199.6 331.31 31.79 498.92 198.4 498.92 345.77 426.27 345.77\"\n                    />\n                </svg>\n            </Backdrop>\n            {\n                news &&\n                <ScrollingProvider scrollBehavior={\"smooth\"}>\n                    <ThemeProvider theme={theme}>\n                        <Router basename={process.env.PUBLIC_URL}>\n                            <Switch>\n                                <DisallowAuthenticatedRoute path={\"/admin\"}>\n                                    <Login />\n                                </DisallowAuthenticatedRoute>\n                                <AuthenticatedRoute path={\"/adminPanel\"}>\n                                    <AdminPanel />\n                                </AuthenticatedRoute>\n                                <UnAuthenticatedRoute path={\"/\"}>\n                                    <NavigationBar menuItems={menuItems} />\n\n                                    <Section id={\"hjemRef\"}>\n                                        <Header />\n                                    </Section>\n\n                                    <Section id={\"tjenesteRef\"}>\n                                        <Services margin={margin} admin={false} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n\n                                    <Section id={\"omRef\"}>\n                                        <About admin={false} margin={margin} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n\n                                    <Section id={\"prosjektRef\"}>\n                                        <Projects margin={margin} />\n                                    </Section>\n                                    <Divider className={classes.divider} />\n                                    {\n                                        news && news.length > 0 &&\n                                        <>\n                                            <Section id={\"nyhetRef\"}>\n                                                <News admin={false} news={news} margin={margin} />\n                                            </Section>\n                                            <Divider className={classes.divider} />\n                                        </>\n                                    }\n                                    <Section id={\"kontaktRef\"}>\n                                        <ContactForm margin={margin} />\n                                    </Section>\n                                    <Footer />\n                                </UnAuthenticatedRoute>\n                            </Switch>\n                        </Router>\n                    </ThemeProvider>\n                </ScrollingProvider>\n            }\n        </div>\n    );\n}\n\nexport default App;\n\n// Redirect user\ninterface AuthRouteProps extends RouteProps {\n    redirect?: string\n}\n\nfunction AuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\n    const [user, loading, error] = useAuthState(firebase.app().auth())\n    error && console.error(error)\n    return (\n        <Route {...rest}>\n            {loading && <CircularProgress />}\n            {((!user && !loading) || error) && <Redirect to={redirect} />}\n            {user && children}\n        </Route>\n    )\n}\n\nfunction UnAuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\n    return (\n        <Route {...rest}>\n            {children}\n        </Route>\n    )\n}\n\nfunction DisallowAuthenticatedRoute({ children, redirect = \"/adminPanel\", ...rest }: AuthRouteProps) {\n    const [user, loading, error] = useAuthState(firebase.app().auth())\n    error && console.error(error)\n    return (\n        <Route {...rest}>\n            {loading && <CircularProgress />}\n            {((user && !loading)) && <Redirect to={redirect} />}\n            {(!user || error) && !loading && children}\n        </Route>\n    )\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase/app\"\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBNP28c3vsIihTrYVOzkOG_YuXgHGZvbTw\",\n    authDomain: \"ll-bygg.firebaseapp.com\",\n    projectId: \"ll-bygg\",\n    storageBucket: \"ll-bygg.appspot.com\",\n    messagingSenderId: \"1072602321840\",\n    appId: \"1:1072602321840:web:bfb60075079e215666bc75\"\n})\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}