{"version":3,"sources":["components/header/llbygg_redusert.png","components/header/Header.tsx","components/NavigationBar.tsx","components/ConfirmDeleteDialog.tsx","components/employees/EmployeeCard.tsx","components/employees/Employees.tsx","components/about/About.tsx","components/services/Services.tsx","components/Footer.tsx","components/contactform/ContactForm.tsx","components/news/Announcement.tsx","components/news/AnnouncementAdmin.tsx","components/news/CreateAnnouncementAdmin.tsx","components/news/NewsAdmin.tsx","components/news/News.tsx","components/projects/CarouselImage.tsx","components/projects/ProjectCarousel.tsx","components/projects/Projects.tsx","firebase.ts","components/login/Login.tsx","components/projects/ProjectAdminImage.tsx","components/projects/ProjectAdminCard.tsx","components/projects/ProjectsAdmin.tsx","components/FooterAdmin.tsx","adminUtils.ts","components/header/HeaderAdmin.tsx","components/adminpanel/AdminPanel.tsx","App.tsx","index.tsx"],"names":["logoImg","require","Header","props","pageElem","collection","useGet","img","isIOS","window","navigator","userAgent","indexOf","classes","makeStyles","theme","createStyles","header","height","background","data","imgUrl","backgroundAttachment","isIpad","isMobile","backgroundSize","backgroundPosition","boxShadow","display","alignItems","justifyContent","flexDirection","typography","color","marginTop","imgBg","backgroundColor","width","padding","useStyles","className","alt","src","default","menuButton","margin","appbar","position","menuIconBox","borderRadius","zIndex","backdrop","drawer","icon","menuText","flex","cursor","menuTextContainer","minHeight","navigateIconHover","opacity","paddingLeft","transition","navigateIconExit","navigateIconMobile","MenuItem","useState","innerWidth","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","hover","setHover","headerSection","useScrollSection","reference","Link","onClick","underline","onMouseEnter","onMouseLeave","Typography","variant","boldText","menuItem","toUpperCase","NavigationBar","openBackdrop","setOpenBackdrop","handleToggle","AppBar","Toolbar","IconButton","edge","aria-label","Backdrop","open","menuItems","map","ConfirmDeleteDialog","deleteBtn","deleteDiv","Dialog","onClose","setIsOpen","aria-labelledby","isOpen","DialogTitle","title","information","Button","deleteFunc","EmployeeCard","text","lineHeight","card","media","paddingTop","filter","marginBottom","txtField","btn","btnUpdate","btnGrey","name","setName","role","setRole","description","desc","setDesc","url","setImgUrl","priority","displayPriority","setDisplayPriority","openDialog","setOpenDialog","isProcessing","setIsProcessing","employeeCollection","Grid","item","xs","sm","md","Card","CardMedia","image","admin","createEmployee","TextField","value","onChange","e","target","fullWidth","label","InputProps","startAdornment","InputAdornment","AccountCircle","Build","multiline","Description","parseInt","type","PriorityHigh","disabled","startIcon","Add","add","then","alert","catch","console","error","Update","update","id","Backspace","Delete","remove","Employees","employeesCollection","useOnAll","employeeDocs","container","textAlign","gridContainer","spacing","sort","a","b","employee","ref","About","aboutDoc","setDescription","setTitle","whiteSpace","Container","lg","Title","style","pageElementsCol","Services","servicesDoc","setError","uploadServiceDescriptions","descs","byggDesc","rehabiliteringDesc","monteringDesc","subtitle","iconContainer","palette","primary","main","fontSize","saveBtn","marginLeft","btnDiv","gridContainerCenter","tempDescription","services","faHammer","faHouseDamage","faTools","setDescs","direction","service","temp","i","FooterIcon","textHover","iconText","textDecoration","iconDiv","marginRight","iconDivHover","href","linkTo","Footer","root","textFaded","center","marginTop15","marginRight10","iconHover","maxHeight","maxWidth","backgroundImage","link","footerInfoContainer","iconHoverInsta","setIconHoverInsta","iconHoverFb","setIconHoverFb","pageElems","useOnGet","footerDoc","igLink","fbLink","countryCode","phone","slice","email","address","mapsUrl","mapsEmbed","frameBorder","loading","ContactForm","textField","notRobot","setNotRobot","setEmail","message","setMessage","hasSubmitted","setHasSubmitted","isMessageOk","isEmailOk","isOk","test","String","toLowerCase","method","noValidate","action","autoComplete","length","helperText","required","rows","includes","Announcement","dateString","textTransform","announcement","datetime","toLocaleDateString","weekday","day","year","month","hour","minute","greyBtn","greenBtn","newsCollection","borderColor","Date","createAnnouncement","NewsAdmin","existingNewsDocs","News","news","CarouselImage","alignSelf","imageContainer","isLoaded","setIsLoaded","Image","onload","onLoad","CircularProgress","ProjectCarousel","imgContainer","navButtonsAlwaysVisible","fullHeightHover","autoPlay","NextIcon","PrevIcon","navButtonsProps","activeIndicatorIconButtonProps","buttonWrapper","top","button","imgUrls","imageUrl","ProjectGrid","projectHover","setProjectHover","setOpen","projectGrid","displayProjectText","projectHoverDiv","wrap","bottom","pointerEvents","imgContainerDiv","projectData","thumbnail","images","ProjectDesc","projectDesc","toggle","isLast","Projects","projectsCol","projectDocs","Map","toggleStates","setToggleStates","toggleState","tempMap","forEach","project","set","projectCount","has","get","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","Login","password","setPassword","setLoading","errorState","setErrorState","history","useHistory","signInWithEmailAndPassword","push","finally","ProjectAdminImage","duplicate","setDuplicate","flexWrap","flexBasis","div","inputDuplicate","initUrl","setUrl","rerender","count","otherImages","onChangeFunc","onDeleteFunc","ProjectAdminCard","thumbnailUrl","setThumbnailUrl","btnGreen","setImages","setRerender","projectCollection","projectImage","val","res","setImageByID","deleteImageByID","create","ProjectsAdmin","FooterAdmin","border","pageElements","status","setCountryCode","phoneNumber","setPhoneNumber","setAddress","setMapsUrl","ig","setIg","fb","setFb","mapEmbed","setMapEmbed","validateImage","errorFunc","successFunc","onerror","HeaderAdmin","isValidImg","setIsValidImg","inputImg","setInputImg","uploadImg","divider","AdminPanel","newsDocs","signOut","Divider","App","createMuiTheme","h5","fontFamily","join","h4","body1","body2","newsCol","displayOverlay","setDisplayOverlay","setTimeout","transitionDuration","appear","enter","exit","xmlns","fill","stroke","strokeWidth","viewBox","points","scrollBehavior","ThemeProvider","basename","process","DisallowAuthenticatedRoute","path","AuthenticatedRoute","UnAuthenticatedRoute","children","redirect","rest","useAuthState","user","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e41d0f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/llbygg_redusert.fc265ec0.png\";","import {createStyles, makeStyles, Theme} from \"@material-ui/core\";\r\nimport {HeaderSection} from \"../../types\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\n\r\nlet logoImg = require(\"./llbygg_redusert.png\")\r\nconst darkness = 0.25 // Higher = darker\r\n\r\nexport default function Header(props:{isMobile:boolean, isIpad:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\r\n    let isIOS = window.navigator.userAgent.indexOf(\"Mac\") !== -1\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            header: {\r\n                height: \"85vh\",\r\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (img ? img.data!.imgUrl : \"\") + \"')\",\r\n                backgroundAttachment: ((props.isIpad || props.isMobile) && isIOS) ? \"scroll\" : \"fixed\",\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n                boxShadow: \"inset 0 0 7em 1em #000\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n            },\r\n            typography: {\r\n                color: \"white\",\r\n                marginTop: 20,\r\n            },\r\n            imgBg: {\r\n                backgroundColor: \"rgba(0,0,0,0.5)\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                padding: 10,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.header}>\r\n            <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={props.isMobile ? 100 : 200} />\r\n        </div>\r\n    )\r\n}","import {\r\n    AppBar,\r\n    Backdrop,\r\n    createStyles,\r\n    IconButton,\r\n    Link,\r\n    makeStyles,\r\n    Theme,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {useEffect, useState} from \"react\";\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { useScrollSection } from \"react-scroll-section\";\r\n\r\n\r\nconst menuIconSize = 30; // Burger menu icon\r\nconst arrowIconSize = 40; // Right-arrow icon when hovering over menu element\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        menuButton: {\r\n            margin: \"auto\",\r\n        },\r\n        appbar: {\r\n            background: \"transparent\",\r\n            boxShadow: \"none\",\r\n            position: \"static\",\r\n            height: 0,\r\n        },\r\n        menuIconBox: {\r\n            //backgroundColor: \"orange\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            borderRadius: 5,\r\n            marginTop: 20,\r\n            color: \"white\",\r\n            backgroundColor: \"rgba(255,140,0,0.8)\",\r\n            position: \"fixed\",\r\n            zIndex: 1,\r\n        },\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n            backgroundColor: \"rgba(255,102,0,0.99)\",\r\n        },\r\n        icon: {\r\n            width: menuIconSize,\r\n            height: menuIconSize,\r\n        },\r\n        menuText: {\r\n            flex: 1,\r\n            color: \"white\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            cursor: \"pointer\",\r\n        },\r\n        menuTextContainer: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            minHeight: \"70vh\",\r\n        },\r\n        navigateIconHover: {\r\n            opacity: 1,\r\n            width: arrowIconSize,\r\n            height: arrowIconSize,\r\n            paddingLeft: 5,\r\n            transition: \"all 0.2s ease-in-out\",\r\n        },\r\n        navigateIconExit: {\r\n            opacity: 0,\r\n            width: arrowIconSize,\r\n            height: arrowIconSize,\r\n            transition: \"all 0.2s ease-in-out\",\r\n        },\r\n        navigateIconMobile: {\r\n            opacity: 0,\r\n            width: 0,\r\n            height: 0,\r\n        },\r\n        typography: {\r\n            color: \"white\",\r\n        }\r\n    }),\r\n);\r\n\r\nfunction MenuItem(props:{reference:string, boldText:boolean, menuItem:string}) {\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 768);\r\n    const classes = useStyles();\r\n    let [hover, setHover] = useState(false);\r\n    const headerSection = useScrollSection(props.reference);\r\n    return (\r\n        <>\r\n            <Link onClick={headerSection.onClick} underline=\"none\" className={classes.menuText} onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} >\r\n                <NavigateNextIcon className={isMobile ? classes.navigateIconMobile : (hover ? classes.navigateIconHover : classes.navigateIconExit)} />\r\n                <Typography className={classes.typography} variant={isMobile ? \"h5\" : \"h4\"}>\r\n                    {\r\n                        props.boldText ?\r\n                            <b>{props.menuItem.toUpperCase()}</b> : props.menuItem.toUpperCase()\r\n                    }\r\n                </Typography>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function NavigationBar(props:{menuItems:string[][]}) {\r\n    const classes = useStyles();\r\n    const boldText = false;\r\n    const [openBackdrop, setOpenBackdrop] = useState(false);\r\n    const handleToggle = () => { // Toggle backdrop\r\n        setOpenBackdrop(!openBackdrop);\r\n    }\r\n    return (\r\n        <>\r\n            <AppBar position={\"fixed\"} className={classes.appbar}>\r\n                <Toolbar>\r\n                    <div className={classes.menuIconBox}>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleToggle}>\r\n                                <MenuIcon className={classes.icon} />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Backdrop className={classes.backdrop} open={openBackdrop} onClick={handleToggle}>\r\n                <div className={classes.menuTextContainer}>\r\n                    {\r\n                        props.menuItems.map(menuItem =>\r\n                            <MenuItem key={menuItem[0]} boldText={boldText} menuItem={menuItem[1]} reference={menuItem[0]} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}","import {Button, createStyles, Dialog, DialogTitle, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\n\r\nexport default function ConfirmDeleteDialog(props:{setIsOpen:(arg:boolean) => any, isOpen:boolean, title:string, information:string, deleteFunc:() => any}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            deleteBtn: {\r\n                margin: 15,\r\n            },\r\n            deleteDiv: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <Dialog onClose={() => {props.setIsOpen(false)}} aria-labelledby=\"Slett nyhet\" open={props.isOpen}>\r\n            <DialogTitle>{props.title}</DialogTitle>\r\n            <div className={classes.deleteDiv}>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>DET VIL IKKE VÆRE MULIG Å ANGRE NÅR DETTE ER GJORT!</Typography>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"}>{props.information}</Typography>\r\n                <Typography variant={\"body2\"} color={\"textSecondary\"}>Klikk utenfor dette vinduet for å angre sletting.</Typography>\r\n                <Button\r\n                    className={classes.deleteBtn}\r\n                    variant={\"outlined\"}\r\n                    color={\"secondary\"}\r\n                    onClick={() => {\r\n                        props.setIsOpen(false)\r\n                        props.deleteFunc()\r\n                    }}\r\n                >\r\n                    Bekreft sletting\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}","import {\r\n    Button,\r\n    Card,\r\n    CardMedia,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport {add, collection, remove, update} from \"typesaurus\";\r\nimport {Employee} from \"../../types\";\r\nimport {\r\n    AccountCircle,\r\n    Add,\r\n    Backspace,\r\n    Build,\r\n    Delete,\r\n    Description,\r\n    Link,\r\n    PriorityHigh,\r\n    Update\r\n} from \"@material-ui/icons\";\r\n\r\ninterface employeeCardInterface {\r\n    name: string;\r\n    role: string;\r\n    description: string;\r\n    url: string;\r\n    admin: boolean;\r\n    priority: number;\r\n    id: string;\r\n    createEmployee: boolean;\r\n}\r\nexport default function EmployeeCard(props:employeeCardInterface) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            title: {\r\n\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            card: {\r\n                boxShadow: \"none\",\r\n            },\r\n            media: {\r\n                height: 10,\r\n                paddingTop: '100%',\r\n                filter: \"grayscale(100%)\",\r\n                borderRadius: 1,\r\n                marginBottom: 15,\r\n                backgroundColor: \"#EEE\",\r\n            },\r\n            txtField: {\r\n                margin: \"10px 0\"\r\n            },\r\n            btn: {\r\n                marginBottom: 10,\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                color: \"white\",\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [name, setName] = useState(props.name)\r\n    const [role, setRole] = useState(props.role)\r\n    const [desc, setDesc] = useState(props.description)\r\n    const [imgUrl, setImgUrl] = useState(props.url ? props.url : \"\")\r\n    const [displayPriority, setDisplayPriority] = useState(props.priority)\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const employeeCollection = collection<Employee>(\"employees\")\r\n    const deleteEmployee = () => {\r\n        setIsProcessing(true)\r\n        remove(employeeCollection, props.id)\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt slettet!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const updateEmployee = () => {\r\n        setIsProcessing(true)\r\n        update(employeeCollection, props.id, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                alert(\"Den ansatte har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const createEmployee = () => {\r\n        add(employeeCollection, {name:name, description:desc, imgUrl:imgUrl, priority:displayPriority, role:role})\r\n            .then(() => {\r\n                setName(\"\")\r\n                setRole(\"\")\r\n                setDesc(\"\")\r\n                setImgUrl(\"\")\r\n                setDisplayPriority(0)\r\n                alert(\"Den ansatte har blitt lagt til!\")\r\n                setIsProcessing(false)\r\n            }).catch((e) => {\r\n            console.error(e)\r\n            alert(e)\r\n            setIsProcessing(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid item xs={8} sm={5} md={4}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        title={props.name}\r\n                        image={imgUrl ? imgUrl : \"empty\"}\r\n                        className={classes.media}\r\n                    />\r\n                    {\r\n                        props.admin ?\r\n                            props.createEmployee ?\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Add />} onClick={() => createEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Legg til ansatt</Button>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <TextField\r\n                                        value={name}\r\n                                        onChange={(e) => {setName(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Navn\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <AccountCircle />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={role}\r\n                                        onChange={(e) => {setRole(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Rolle\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Build />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={desc}\r\n                                        onChange={(e) => {setDesc(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        multiline\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Beskrivelse\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Description />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={imgUrl}\r\n                                        onChange={(e) => {setImgUrl(e.target.value)}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Bilde-URL\"}\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <Link />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <TextField\r\n                                        value={displayPriority}\r\n                                        onChange={(e) => {setDisplayPriority(parseInt(e.target.value))}}\r\n                                        className={classes.txtField}\r\n                                        fullWidth\r\n                                        variant={\"outlined\"}\r\n                                        label={\"Visningsprioritet\"}\r\n                                        type=\"number\"\r\n                                        InputProps={{\r\n                                            startAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                    <PriorityHigh />\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    <Button disabled={isProcessing} startIcon={<Update />} onClick={() => updateEmployee()} fullWidth variant={\"contained\"} className={classes.btnUpdate + \" \" + classes.btn}>Oppdater</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Backspace />} fullWidth variant={\"contained\"} color={\"default\"} className={classes.btn + \" \" + classes.btnGrey} onClick={() => {\r\n                                        setName(props.name)\r\n                                        setDesc(props.description)\r\n                                        setRole(props.role)\r\n                                        setImgUrl(props.url)\r\n                                        setDisplayPriority(props.priority)\r\n                                    }\r\n                                    }>Angre endringer</Button>\r\n                                    <Button disabled={isProcessing} startIcon={<Delete />} onClick={() => setOpenDialog(true)} fullWidth variant={\"contained\"} color={\"secondary\"} className={classes.btn}>Slett</Button>\r\n                                    <ConfirmDeleteDialog key={props.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette den ansatte?\"} information={\"Ansatt det gjelder: \" + props.name} deleteFunc={deleteEmployee} />\r\n                                </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} className={classes.title}>\r\n                                    {props.name}\r\n                                </Typography>\r\n                                <Typography variant={\"caption\"} color={\"textSecondary\"}>\r\n                                    <b>{props.role.toUpperCase()}</b>\r\n                                </Typography>\r\n                                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {props.description}\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Card>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport {Employee} from \"../../types\";\r\n\r\nexport default function Employees(props: {margin:number, admin:boolean}) {\r\n    const employeesCollection = collection(\"employees\")\r\n    let [employeeDocs] = useOnAll<Employee>(employeesCollection)\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                marginBottom: props.margin,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    if (props.admin) {\r\n        return (\r\n            <>\r\n                <Typography variant={\"body1\"} className={classes.title} color={\"textSecondary\"}><b>Merk:</b> Høyere visningsprioritet vil gjøre at den ansatte vil dukke opp høyere på siden</Typography>\r\n                <Grid container spacing={3} className={classes.gridContainer}>\r\n                    {\r\n                        employeeDocs ?\r\n                            employeeDocs\r\n                                .sort((a,b) => b.data.priority - a.data.priority)\r\n                                .map(employee =>\r\n                                    <EmployeeCard\r\n                                        admin={props.admin}\r\n                                        key={employee.ref.id}\r\n                                        url={employee.data.imgUrl}\r\n                                        name={employee.data.name}\r\n                                        role={employee.data.role}\r\n                                        priority={employee.data.priority}\r\n                                        id={employee.ref.id}\r\n                                        createEmployee={false}\r\n                                        description={employee.data.description} />\r\n                                )\r\n                            :\r\n                            \"Vennligst vent mens seksjonen laster\"\r\n                    }\r\n                    <EmployeeCard\r\n                        admin={props.admin}\r\n                        url={\"\"}\r\n                        name={\"\"}\r\n                        role={\"\"}\r\n                        priority={0}\r\n                        id={\"\"}\r\n                        createEmployee={true}\r\n                        description={\"\"}\r\n                    />\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.gridContainer}>\r\n                {\r\n                    employeeDocs ?\r\n                        employeeDocs\r\n                            .sort((a,b) => b.data.priority - a.data.priority)\r\n                            .map(employee =>\r\n                            <EmployeeCard\r\n                                admin={props.admin}\r\n                                key={employee.ref.id}\r\n                                url={employee.data.imgUrl}\r\n                                name={employee.data.name}\r\n                                role={employee.data.role}\r\n                                priority={employee.data.priority}\r\n                                id={employee.ref.id}\r\n                                createEmployee={false}\r\n                                description={employee.data.description} />\r\n                            )\r\n                        :\r\n                        \"Vennligst vent mens seksjonen laster\"\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport Employees from \"../employees/Employees\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {AboutSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Description, Title, Update} from \"@material-ui/icons\";\r\n\r\nexport default function About(props: {margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [aboutDoc] = useGet<AboutSection>(pageElem, \"about\")\r\n    let [description, setDescription] = useState(\"\")\r\n    let [title, setTitle] = useState(\"\")\r\n    let [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (aboutDoc) {\r\n            setDescription(aboutDoc.data.description)\r\n            setTitle(aboutDoc.data.title)\r\n        }\r\n    }, [aboutDoc])\r\n    const updateAboutSection = () => {\r\n        if (!aboutDoc) {\r\n            alert(\"Vent til informasjonen laster fra databasen\")\r\n            return\r\n        }\r\n        setIsProcessing(true)\r\n        update(pageElem, aboutDoc.ref.id, {title:title, description:description})\r\n            .then(() => {\r\n                alert(\"Beskrivelsen har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            txtField: {\r\n                margin: \"15px 0\",\r\n                whiteSpace: \"pre-line\",\r\n            },\r\n            btnUpdate: {\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title}>\r\n                        Om oss\r\n                    </Typography>\r\n                    <Employees admin={props.admin} margin={15} />\r\n                    {\r\n                        props.admin ?\r\n                            <>\r\n                                <Typography variant={\"h5\"}>Rediger \"Om oss\"-seksjon</Typography>\r\n                                <TextField\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    value={title}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Tittel\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Title />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                    value={description}\r\n                                    className={classes.txtField}\r\n                                    multiline\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Beskrivelse\"}\r\n                                    fullWidth\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Description />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    variant={\"contained\"}\r\n                                    className={classes.btnUpdate}\r\n                                    onClick={() => {\r\n                                        updateAboutSection()\r\n                                    }}\r\n                                    disabled={isProcessing}\r\n                                    startIcon={<Update />}\r\n                                >\r\n                                    Oppdater\r\n                                </Button>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>\r\n                                    <b>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.title.toUpperCase()\r\n                                            :\r\n                                            \"STIFTET I 2016\"\r\n                                    }\r\n                                    </b>\r\n                                </Typography>\r\n                                <Typography style={{whiteSpace: 'pre-line'}} display=\"block\" variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                                    {\r\n                                        aboutDoc ?\r\n                                            aboutDoc.data.description\r\n                                            :\r\n                                            \"Beskrivelse laster...\"\r\n                                    }\r\n                                </Typography>\r\n                            </>\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faHammer, faHouseDamage, faTools } from '@fortawesome/free-solid-svg-icons'\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {ServicesSection} from \"../../types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Update} from \"@material-ui/icons\";\r\n\r\nlet pageElementsCol = collection(\"pageElements\")\r\nexport default function Services(props:{margin:number, admin:boolean}) {\r\n    const pageElem = collection(\"pageElements\")\r\n    let [servicesDoc] = useGet<ServicesSection>(pageElem, \"services\")\r\n    let [error, setError] = useState(\"\")\r\n    const uploadServiceDescriptions = async (descs:string[]) => {\r\n        update(pageElementsCol, \"services\", { byggDesc: descs[0], rehabiliteringDesc: descs[1], monteringDesc: descs[2] })\r\n            .then(() => {\r\n                setError(\"\")\r\n                alert(\"Beskrivelsen ble oppdatert\")\r\n            })\r\n            .catch(e => {\r\n                console.error(e)\r\n                alert(e)\r\n                setError(e)\r\n            })\r\n    }\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            subtitle: {\r\n                marginBottom: 5,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                margin: \"auto\",\r\n            },\r\n            iconContainer: {\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n            },\r\n            icon: {\r\n                color: theme.palette.primary.main,\r\n                fontSize: 45,\r\n                display: \"flex\",\r\n                margin: \"10px auto\",\r\n            },\r\n            saveBtn: {\r\n                marginBottom: 15,\r\n                marginLeft: 15,\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnDiv: {\r\n                width: \"100%\",\r\n            },\r\n            gridContainerCenter: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const tempDescription = \"Beskrivelse laster inn, vennligst vent...\"\r\n    let services = [\r\n        [0, \"Bygg\", (servicesDoc ? servicesDoc.data.byggDesc : tempDescription), faHammer],\r\n        [1, \"Rehabilitering\", (servicesDoc ? servicesDoc.data.rehabiliteringDesc : tempDescription), faHouseDamage],\r\n        [2, \"Montering\", (servicesDoc ? servicesDoc.data.monteringDesc : tempDescription), faTools]\r\n    ]\r\n    let [descs, setDescs] = useState([\"\",\"\",\"\"])\r\n    useEffect(() => {\r\n        if (servicesDoc) {\r\n            setDescs([\r\n                servicesDoc.data.byggDesc,\r\n                servicesDoc.data.rehabiliteringDesc,\r\n                servicesDoc.data.monteringDesc\r\n            ])\r\n        }\r\n    }, [servicesDoc])\r\n\r\n    return(\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container direction={\"column\"}>\r\n                        <Typography variant={\"h4\"} className={classes.title}>\r\n                            Våre tjenester\r\n                        </Typography>\r\n                        <Grid container className={classes.gridContainerCenter} spacing={4}>\r\n                            {\r\n                                services.map(service =>\r\n                                    // @ts-ignore\r\n                                    <Grid key={service[0]} item md={4} sm={10} xs={12}>\r\n                                        <div className={classes.iconContainer}>\r\n                                            <div className={classes.iconContainer}>\r\n                                                {/* @ts-ignore */}\r\n                                                <FontAwesomeIcon className={classes.icon} icon={service[3]} />\r\n                                            </div>\r\n                                            <Typography variant={\"h5\"} className={classes.subtitle} color={\"textSecondary\"}>\r\n                                                <b>{service[1]}</b>\r\n                                            </Typography>\r\n                                            {\r\n                                                props.admin ?\r\n                                                    <>\r\n                                                        <TextField\r\n                                                            label=\"Beskrivelse\"\r\n                                                            variant=\"outlined\"\r\n                                                            multiline\r\n                                                            /* @ts-ignore */\r\n                                                            value={descs[service[0]]}\r\n                                                            onChange = {\r\n                                                                e =>\r\n                                                                {\r\n                                                                    let temp = [\"\",\"\",\"\"]\r\n                                                                    for (let i = 0; i<3; i++) {\r\n                                                                        if (i === service[0]) {\r\n                                                                            temp[i] = e.target.value\r\n                                                                        } else {\r\n                                                                            temp[i] = descs[i]\r\n                                                                        }\r\n                                                                    }\r\n                                                                    setDescs(temp)\r\n                                                                }\r\n                                                            }\r\n                                                        />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Typography variant={\"body2\"} className={classes.text} color={\"textSecondary\"}>\r\n                                                        {service[2]}\r\n                                                    </Typography>\r\n                                            }\r\n                                        </div>\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                            <div className={classes.btnDiv}>\r\n                                {\r\n                                    props.admin &&\r\n                                    <>\r\n                                        <Button\r\n                                            className={classes.saveBtn}\r\n                                            variant={\"contained\"}\r\n                                            startIcon={<Update />}\r\n                                            onClick={() =>\r\n                                            {\r\n                                                uploadServiceDescriptions(descs)\r\n                                            }\r\n                                            }\r\n                                        >\r\n                                            Oppdater\r\n                                        </Button>\r\n                                        {\r\n                                            error !== \"\" &&\r\n                                            <Typography variant={\"caption\"}>\r\n                                                {error}\r\n                                            </Typography>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, Link, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport {useEffect, useState} from \"react\";\r\nimport {collection} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\n\r\nfunction FooterIcon(props:{text:string, linkTo:string, icon:JSX.Element}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            textHover: {\r\n                lineHeight: \"200%\",\r\n                color: \"orange\",\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                paddingLeft: 5,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                textDecoration: \"none\",\r\n            },\r\n            iconDiv: {\r\n                marginRight: 10,\r\n                color: \"white\",\r\n            },\r\n            iconDivHover: {\r\n                marginRight: 10,\r\n                color: \"orange\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [hover, setHover] = useState(false);\r\n    return (\r\n        <>\r\n            <Link\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n                href={props.linkTo}\r\n                underline={\"none\"}\r\n                target={\"_blank\"}\r\n                className={classes.iconText}\r\n            >\r\n                <Typography variant={\"body2\"} className={hover ? classes.textHover + \" \" + classes.iconDivHover : classes.text + \" \" + classes.iconDiv}>\r\n                    {props.icon} {props.text}\r\n                </Typography>\r\n            </Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default function Footer() {\r\n    // Detect mobile screen\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\"\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n                color: \"white\",\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                color: \"white\",\r\n            },\r\n            textFaded: {\r\n                lineHeight: \"200%\",\r\n                color: \"#888\",\r\n            },\r\n            center: {\r\n                margin: \"auto\",\r\n                textAlign: \"center\",\r\n            },\r\n            marginTop15: {\r\n                marginTop: 15\r\n            },\r\n            marginRight10: {\r\n                marginRight: 10,\r\n            },\r\n            icon: {\r\n                color: \"white\",\r\n                marginRight: 10,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconHover: {\r\n                marginRight: 10,\r\n                color: theme.palette.primary.main,\r\n                transition: \"all 0.2s ease-in-out\",\r\n            },\r\n            iconText: {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                color: \"white\",\r\n                textDecoration: \"none\",\r\n            },\r\n            map: {\r\n                maxHeight: \"400px\",\r\n                minHeight: \"300px\",\r\n                maxWidth: \"400px\",\r\n                borderRadius: 5,\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                backgroundImage: \"url('https://assets.website-files.com/5e832e12eb7ca02ee9064d42/5f7db426b676b95755fb2844_Group%20805.jpg')\",\r\n                backgroundSize: \"cover\",\r\n            },\r\n            link: {\r\n                color: \"orange\",\r\n            },\r\n            footerInfoContainer: {\r\n                display: \"flex\",\r\n                justifyContent: isMobile ? \"center\" : \"\",\r\n                alignItems: isMobile ? \"center\" : \"\",\r\n                flexDirection: \"column\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [iconHoverInsta, setIconHoverInsta] = useState(false);\r\n    let [iconHoverFb, setIconHoverFb] = useState(false);\r\n    const pageElems = collection(\"pageElements\")\r\n    const [footerDoc] = useOnGet<FooterSection>(pageElems, \"footer\")\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <Container className={classes.container}>\r\n                    <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                        <Grid container spacing={4} alignItems={\"center\"}>\r\n                            <Grid item xs={12} className={classes.center}>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverInsta(true)}\r\n                                    onMouseLeave={() => setIconHoverInsta(false)}\r\n                                    href={footerDoc ? footerDoc.data.igLink : \"\"}\r\n                                    className={iconHoverInsta ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <InstagramIcon />\r\n                                </Link>\r\n                                <Link\r\n                                    onMouseEnter={() => setIconHoverFb(true)}\r\n                                    onMouseLeave={() => setIconHoverFb(false)}\r\n                                    href={footerDoc ? footerDoc.data.fbLink : \"\"}\r\n                                    className={iconHoverFb ? classes.iconHover : classes.icon}\r\n                                >\r\n                                    <FacebookIcon />\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12} className={classes.footerInfoContainer}>\r\n                                <FooterIcon\r\n                                    text={\r\n                                        \"(+\" +\r\n                                        (footerDoc ? footerDoc.data.countryCode : \"\") +\") \" +\r\n                                        (footerDoc ? footerDoc.data.phone.slice(0,3) + \" \" +\r\n                                            footerDoc.data.phone.slice(3,5) + \" \" +\r\n                                            footerDoc.data.phone.slice(5,8) : \"\")\r\n                                    }\r\n                                    linkTo={\"tel: \" +\r\n                                    (footerDoc ? footerDoc.data.countryCode + footerDoc.data.phone : \"\")\r\n                                    }\r\n                                    icon={<PhoneIcon className={classes.marginRight10} />}/>\r\n                                <FooterIcon\r\n                                    text={\"Kontakt oss via e-post\"}\r\n                                    linkTo={footerDoc ? \"mailto:\" + footerDoc.data.email : \"\"}\r\n                                    icon={<EmailIcon className={classes.marginRight10} />}\r\n                                />\r\n                                <FooterIcon\r\n                                    text={footerDoc ? footerDoc.data.address : \"\"}\r\n                                    linkTo={footerDoc ? footerDoc.data.mapsUrl : \"\"}\r\n                                    icon={\r\n                                        <RoomIcon className={classes.marginRight10} />\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                            <Grid item sm={6} xs={12}>\r\n                                <iframe\r\n                                    src={footerDoc ? footerDoc.data.mapsEmbed : \"\"}\r\n                                    width=\"100%\" height=\"350\" frameBorder={\"none\"} title={\"kart\"}\r\n                                    loading=\"lazy\">\r\n                                </iframe>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant={\"body2\"} className={classes.textFaded + \" \" + classes.center + \" \" + classes.marginTop15}>\r\n                                    <b>Nettside laget av <Link href={\"https://www.linkedin.com/in/joachim-maksim-3823a5197/\"} target=\"_blank\" className={classes.link}>Foxden Consulting</Link> (2021)</b>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {Button, Container, createStyles, Grid, makeStyles, TextField, Theme, Typography} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ContactForm(props: {margin:number}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            textField: {\r\n                marginBottom: 15,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [notRobot, setNotRobot] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [message, setMessage] = useState(\"\")\r\n    const [hasSubmitted, setHasSubmitted] = useState(false)\r\n    let isMessageOk = message !== \"\"\r\n    const isEmailOk = () => {\r\n        let isOk = true\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email === \"\" || !re.test(String(email).toLowerCase())) {\r\n            isOk = false\r\n        }\r\n        return isOk\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title} >\r\n                        Kontakt oss\r\n                    </Typography>\r\n                    <form method={\"post\"} noValidate action=\"https://formspree.io/f/xnqldjry\" autoComplete=\"off\">\r\n                        <TextField\r\n                            error={!isEmailOk() && (hasSubmitted || notRobot.length > 0)}\r\n                            helperText={(!isEmailOk() && (hasSubmitted || notRobot.length > 0)) ? \"Vennligst skriv inn en gyldig e-post-adresse!\" : \"\"}\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            type={\"email\"}\r\n                            name={\"_replyto\"}\r\n                            required\r\n                            fullWidth\r\n                            id=\"standard-basic\"\r\n                            label=\"E-post\"\r\n                            className={classes.textField}\r\n                        />\r\n                        <TextField name={\"Navn\"} fullWidth id=\"standard-basic\" label=\"Navn\" className={classes.textField} />\r\n                        <TextField name={\"Adresse\"} fullWidth id=\"standard-basic\" label=\"Adresse\" className={classes.textField} />\r\n                        <TextField name={\"Tema\"} fullWidth id=\"standard-basic\" label=\"Tema\" className={classes.textField} />\r\n                        <TextField\r\n                            required\r\n                            error={!isMessageOk && (hasSubmitted || notRobot.length > 0)}\r\n                            value={message}\r\n                            onChange={e => setMessage(e.target.value)}\r\n                            name={\"Melding\"}\r\n                            multiline\r\n                            rows={5}\r\n                            fullWidth\r\n                            id=\"standard-basic\"\r\n                            label=\"Melding\"\r\n                            className={classes.textField}\r\n                            helperText={(!isMessageOk && (hasSubmitted || notRobot.length > 0)) ? \"Vennligst skriv en melding!\" : \"\"}\r\n                        />\r\n                        <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.title} >\r\n                            Vennligst skriv 'ikkerobot' i tekstfeltet under for å bekrefte at du er en ekte person\r\n                        </Typography>\r\n                        <TextField multiline value={notRobot} onChange={(e) => setNotRobot(e.target.value)} fullWidth id=\"standard-basic\" label=\"Skriv 'ikkerobot' her\" className={classes.textField} />\r\n                        <Button\r\n                            disabled={!notRobot.toLowerCase().includes(\"ikkerobot\") || notRobot.length >= 12 || !isMessageOk || !isEmailOk()}\r\n                            type={(isMessageOk && isEmailOk() && message.length > 0 && email.length > 0) ? \"submit\" : \"button\"}\r\n                            variant={\"outlined\"}\r\n                            color={\"primary\"}\r\n                            onClick={() => {\r\n                                if((!isMessageOk || !isEmailOk())) {\r\n                                    setHasSubmitted(true)\r\n                                }\r\n                            }}\r\n                        >\r\n                            Send henvendelse\r\n                        </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {Doc} from \"typesaurus\";\r\n\r\ninterface announcementInterface {\r\n    id:number;\r\n    title:string;\r\n    description:string;\r\n    date:Date;\r\n}\r\n\r\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            title: {\r\n                marginBottom: 5,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            dateString: {\r\n                textTransform: \"capitalize\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <Grid item xs={12}>\r\n                <Typography variant={\"h5\"} className={classes.title}>\r\n                    {props.announcement.data.title}\r\n                </Typography>\r\n                <Typography variant={\"caption\"} color={\"textSecondary\"} className={classes.dateString}>\r\n                    <b>{props.announcement.data.datetime.toLocaleDateString(\"no-NB\", {\r\n                        weekday: 'short', // long, short, narrow\r\n                        day: 'numeric', // numeric, 2-digit\r\n                        year: 'numeric', // numeric, 2-digit\r\n                        month: 'long', // numeric, 2-digit, long, short, narrow\r\n                        hour: 'numeric', // numeric, 2-digit\r\n                        minute: 'numeric', // numeric, 2-digit\r\n                    })}</b>\r\n                </Typography>\r\n                <Typography variant={\"body2\"} color={\"textSecondary\"} className={classes.text}>\r\n                    {props.announcement.data.description}\r\n                </Typography>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport type {announcementInterface}","import {\r\n    Button,\r\n    createStyles,\r\n    Grid, InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {collection, Doc, update, remove} from \"typesaurus\";\r\nimport {useState} from \"react\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport {Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\r\n\r\ninterface announcementInterface {\r\n    id:number;\r\n    title:string;\r\n    description:string;\r\n    date:Date;\r\n}\r\n\r\nexport default function Announcement(props:{announcement:Doc<NewsDoc>}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            txtField: {\r\n                marginBottom: 15,\r\n            },\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 \",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            btn: {\r\n                marginBottom: 15,\r\n                marginRight: 10,\r\n                color: \"white\",\r\n            },\r\n            deleteBtn: {\r\n                margin: 15,\r\n            },\r\n            deleteDiv: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n            },\r\n            greyBtn: {\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\"\r\n                }\r\n            },\r\n            greenBtn: {\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\"\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    let [desc, setDesc] = useState(props.announcement.data.description)\r\n    let [title, setTitle] = useState(props.announcement.data.title)\r\n    let [isProcessing, setIsProcessing] = useState(false)\r\n    const newsCollection = collection<NewsDoc>(\"news\")\r\n    const updateAnnouncement = () => {\r\n        setIsProcessing(true)\r\n        update(newsCollection, props.announcement.ref.id, {title: title, description: desc})\r\n            .then(() => {\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    const deleteAnnouncement = () => {\r\n        setIsProcessing(true)\r\n        remove(newsCollection, props.announcement.ref.id)\r\n            .then(() => {\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid className={classes.root} item xs={12}>\r\n                <TextField\r\n                    className={classes.txtField}\r\n                    fullWidth\r\n                    multiline\r\n                    variant={\"outlined\"}\r\n                    label={\"Tittel\"}\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Title />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    className={classes.txtField}\r\n                    fullWidth\r\n                    multiline\r\n                    variant={\"outlined\"}\r\n                    label={\"Beskrivelse\"}\r\n                    value={desc}\r\n                    onChange={(e) => setDesc(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Description />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Button startIcon={<Update />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} color={\"primary\"} onClick={() => {\r\n                    updateAnnouncement()\r\n                }}>Oppdater</Button>\r\n                <Button className={classes.btn + \" \" + classes.greyBtn} variant={\"contained\"} startIcon={<Backspace />} color={\"default\"} onClick={() => {\r\n                    setDesc(props.announcement.data.description)\r\n                    setTitle(props.announcement.data.title)\r\n                }}>Angre alle endringer</Button>\r\n                <Button startIcon={<Delete />} disabled={isProcessing} className={classes.btn} variant={\"contained\"} onClick={() => {setOpenDialog(true)}} color={\"secondary\"}>Slett</Button>\r\n                <ConfirmDeleteDialog key={props.announcement.ref.id} setIsOpen={setOpenDialog} isOpen={openDialog} title={\"Er du sikker på at du vil slette nyheten?\"} information={\"Nyheten det gjelder: \" + props.announcement.data.title} deleteFunc={deleteAnnouncement} />\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport type {announcementInterface}","import {\r\n    Button,\r\n    createStyles,\r\n    Grid, InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n} from \"@material-ui/core\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {collection, add} from \"typesaurus\";\r\nimport {useState} from \"react\";\r\nimport {Add, Description, Title} from \"@material-ui/icons\";\r\n\r\ninterface announcementInterface {\r\n    id:number;\r\n    title:string;\r\n    description:string;\r\n    date:Date;\r\n}\r\n\r\nexport default function Announcement() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            txtField: {\r\n                marginBottom: 15,\r\n            },\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 \",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            btn: {\r\n                marginBottom: 15,\r\n                marginRight: 10,\r\n                color: \"white\",\r\n                borderColor: \"green\",\r\n            },\r\n            greyBtn: {\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\"\r\n                }\r\n            },\r\n            greenBtn: {\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\"\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let [desc, setDesc] = useState(\"\")\r\n    let [title, setTitle] = useState(\"\")\r\n    let [isProcessing, setIsProcessing] = useState(false)\r\n    let [error, setError] = useState(false)\r\n    const newsCollection = collection<NewsDoc>(\"news\")\r\n    const createAnnouncement = () => {\r\n        setIsProcessing(true)\r\n        if (title.length === 0 || desc.length === 0) {\r\n            alert(\"Nyheten trenger en tittel og beskrivelse!\")\r\n            setError(true)\r\n            setIsProcessing(false)\r\n            return\r\n        }\r\n        add(newsCollection, {datetime: new Date(), description: desc, title: title})\r\n            .then(() => {\r\n                alert(\"Nyheten har blitt publisert!\")\r\n                setTitle(\"\")\r\n                setDesc(\"\")\r\n                setIsProcessing(false)\r\n                setError(false)\r\n            }).catch((e) => {\r\n                setError(true)\r\n                console.error(e)\r\n                alert(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Grid className={classes.root} item xs={12}>\r\n                <TextField\r\n                    className={classes.txtField}\r\n                    fullWidth\r\n                    multiline\r\n                    variant={\"outlined\"}\r\n                    label={\"Tittel\"}\r\n                    value={title}\r\n                    error={error}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Title />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    className={classes.txtField}\r\n                    fullWidth\r\n                    multiline\r\n                    variant={\"outlined\"}\r\n                    label={\"Beskrivelse\"}\r\n                    value={desc}\r\n                    error={error}\r\n                    onChange={(e) => setDesc(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Description />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Button startIcon={<Add />} disabled={isProcessing} className={classes.btn + \" \" + classes.greenBtn} variant={\"contained\"} onClick={() => {\r\n                    createAnnouncement()\r\n                }}>Publiser nyhet</Button>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport type {announcementInterface}","import {Doc} from \"typesaurus\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport AnnouncementAdmin from \"./AnnouncementAdmin\";\r\nimport CreateAnnouncementAdmin from \"./CreateAnnouncementAdmin\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nexport default function NewsAdmin(props:{existingNewsDocs:Doc<NewsDoc>[]}) {\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Publiser nyhet</Typography>\r\n                <CreateAnnouncementAdmin />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Rediger nyheter</Typography>\r\n                <br />\r\n                {\r\n                    props.existingNewsDocs\r\n                        // @ts-ignore\r\n                        .sort((a,b) => b.data.datetime - a.data.datetime)\r\n                        .map(announcement => <AnnouncementAdmin key={announcement.ref.id} announcement={announcement} />)\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport Announcement from \"./Announcement\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {Doc} from \"typesaurus\";\r\nimport NewsAdmin from \"./NewsAdmin\";\r\n\r\nexport default function News(props:{margin:number, admin:boolean, news:Doc<NewsDoc>[]}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                margin: \"auto\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n\r\n    if (props.news.length <= 0 && !props.admin) {\r\n        return (<></>)\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container direction={\"column\"}>\r\n                        <Typography variant={\"h4\"} className={classes.title}>\r\n                            Siste nyheter\r\n                        </Typography>\r\n                        {\r\n                            props.admin ?\r\n                                <>\r\n                                    <NewsAdmin existingNewsDocs={props.news} />\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <Grid container spacing={4}>\r\n                                        {\r\n                                            // @ts-ignore\r\n                                            props.news.sort((a,b) => b.data.datetime - a.data.datetime).map(announcement =>\r\n                                                <Announcement key={announcement.ref.id} announcement={announcement} />\r\n                                            )\r\n                                        }\r\n                                    </Grid>\r\n                                </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {CircularProgress, createStyles, makeStyles, Theme} from \"@material-ui/core\";\r\nimport {useState} from \"react\";\r\n\r\ninterface CarouselImageProps {\r\n    imgUrl: string;\r\n}\r\n\r\nexport default function CarouselImage(props: CarouselImageProps) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            image: {\r\n                maxHeight: \"90vh\",\r\n                maxWidth: \"90vw\",\r\n                margin: \"auto\",\r\n                alignSelf: \"center\",\r\n            },\r\n            imageContainer: {\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n\r\n    let [isLoaded, setIsLoaded] = useState(false)\r\n    let image = new Image()\r\n    image.src = props.imgUrl\r\n    image.onload = () => setIsLoaded(true)\r\n\r\n    return (\r\n        <div className={classes.imageContainer}>\r\n            {\r\n                isLoaded ?\r\n                    <img\r\n                        alt={\"bilde\"}\r\n                        className={classes.image}\r\n                        src={props.imgUrl}\r\n                        onLoad={() => setIsLoaded(true)}\r\n                    />\r\n                    :\r\n                    <CircularProgress />\r\n            }\r\n        </div>\r\n    )\r\n}","import Carousel from 'react-material-ui-carousel'\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core\";\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CarouselImage from \"./CarouselImage\";\r\n\r\ninterface carouselProps {\r\n    imgUrls:string[]\r\n}\r\n\r\nexport default function ProjectCarousel(props:carouselProps) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            imgContainer: {\r\n                width: \"90vw\",\r\n                height: \"90vh\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            {/*@ts-ignore*/}\r\n            <Carousel\r\n                navButtonsAlwaysVisible\r\n                fullHeightHover={false}\r\n                autoPlay={false}\r\n                NextIcon={<NavigateNextIcon />}\r\n                PrevIcon={<NavigateBeforeIcon />}\r\n                /* @ts-ignore */\r\n                navButtonsProps={{          // Change the colors and radius of the actual buttons. THIS STYLES BOTH BUTTONS\r\n                    style: {\r\n                        backgroundColor: 'orange',\r\n                    }\r\n                }}\r\n                activeIndicatorIconButtonProps={{\r\n                    style: {\r\n                        backgroundColor: 'darkorange',\r\n                        color: \"orange\",\r\n                    }\r\n                }}\r\n                buttonWrapper={\r\n                    {\r\n                        style: {\r\n                            position: \"absolute\",\r\n                            height: \"150px\",\r\n                            backgroundColor: \"orange\",\r\n                            top: \"calc(50% - 70px)\",\r\n                            '&:hover': {\r\n                                '& $button': {\r\n                                    backgroundColor: \"black\",\r\n                                    filter: \"brightness(100%)\",\r\n                                    opacity: \"1 !important\"\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                button={{\r\n                    style:{\r\n                        position: \"relative\",\r\n                        backgroundColor: \"#494949\",\r\n                        top: \"calc(50% - 20px) !important\",\r\n                        color: \"white\",\r\n                        fontSize: \"30px\",\r\n                        transition: \"200ms\",\r\n                        cursor: \"pointer\",\r\n                        '&:hover': {\r\n                            opacity: \"1 !important\"\r\n                        },\r\n                    }\r\n                }}\r\n            >\r\n            {\r\n                props.imgUrls.map(imageUrl =>\r\n                    <div key={imageUrl} className={classes.imgContainer}>\r\n                        <CarouselImage imgUrl={imageUrl} key={imageUrl} />\r\n                    </div>\r\n                    )\r\n            }\r\n            </Carousel>\r\n        </>\r\n    )\r\n}","import {Backdrop, Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport ProjectCarousel from \"./ProjectCarousel\";\r\nimport {collection, Doc} from \"typesaurus\";\r\nimport {Project} from \"../../types\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\n\r\nfunction ProjectGrid(props: {projectData:Doc<Project> | undefined}) {\r\n    let [projectHover, setProjectHover] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleToggle = () => {\r\n        setOpen(!open);\r\n    };\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            projectGrid: {\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n                width: \"100%\",\r\n                padding: 0,\r\n                marginBottom: -4,\r\n                position: \"relative\",\r\n            },\r\n            displayProjectText: {\r\n                color: \"white\",\r\n                opacity: projectHover ? \"100%\" : \"0%\",\r\n                transition: \"all 0.2s ease-in-out\",\r\n                margin: 0,\r\n                padding: 0,\r\n            },\r\n            projectHoverDiv: {\r\n                width: \"100%\",\r\n                height: projectHover ? \"100%\" : 0,\r\n                backgroundColor: \"rgba(255,140,0, 0.9)\",\r\n                color: \"white\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                wrap: \"nowrap\",\r\n                transition: \"0.2s ease-in-out\",\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                pointerEvents: \"none\",\r\n                padding: 0,\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n                backgroundColor: \"rgba(0,0,0,0.8)\"\r\n            },\r\n            imgContainerDiv: {\r\n                position: \"relative\",\r\n                cursor: \"pointer\",\r\n                margin: 0,\r\n                padding: 0,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n    if (!props.projectData) {\r\n        return (\r\n            <>\r\n                Laster inn data...\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid item sm={6} xs={12}>\r\n            <div className={classes.imgContainerDiv}>\r\n                <img\r\n                    alt={props.projectData.data.title + \" bilde\"}\r\n                    src={props.projectData.data.thumbnail}\r\n                    className={classes.projectGrid}\r\n                    onMouseEnter={() => setProjectHover(true)}\r\n                    onMouseLeave={() => setProjectHover(false)}\r\n                    onClick={handleToggle}\r\n                />\r\n                <div className={classes.projectHoverDiv}>\r\n                    <Typography variant={\"body1\"} className={classes.displayProjectText}>\r\n                        <b>\r\n                            Vis\r\n                            {\r\n                                \" \" + props.projectData.data.images.length + \" bilde\" + (props.projectData.data.images.length > 1 ? \"r\" : \"\")\r\n                            }\r\n                        </b>\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                <ProjectCarousel imgUrls={props.projectData.data.images} />\r\n            </Backdrop>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction ProjectDesc(props: {isMobile:boolean, toggle:boolean | undefined, isLast:boolean, projectData:Doc<Project> | undefined}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            projectDesc: {\r\n                padding: props.isMobile ? \"5px 0\" : (props.toggle ? \"5px 15px\" : \"5px 15px 5px 0\"),\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                maxWidth: \"100%\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            text: {\r\n                lineHeight: \"200%\",\r\n                marginBottom: props.isMobile && !props.isLast ? \"3.5em\" : \"0\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n    const textTitleStyle = \"h5\"; // Anbefaler h5\r\n    const textStyle = \"body2\"; // Anbefaler body1, body2 eller caption\r\n    if (!props.projectData) {\r\n        return (\r\n            <>\r\n                Laster inn beskrivelse...\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Grid item sm={6} xs={12}>\r\n            <div className={classes.projectDesc}>\r\n                <div>\r\n                    <Typography variant={textTitleStyle} className={classes.title} color={\"textPrimary\"}>\r\n                        { props.projectData.data.title }\r\n                    </Typography>\r\n                    <Typography variant={textStyle} className={classes.text} color={\"textSecondary\"}>\r\n                        { props.projectData.data.description }\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default function Projects(props: {margin:number}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n\r\n    // Detect mobile screen\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\r\n    // Retrieve projects from db\r\n    const projectsCol = collection<Project>(\"projects\")\r\n    const [projectDocs] = useOnAll(projectsCol)\r\n    const [toggleStates, setToggleStates] = useState<Map<string, boolean>>(new Map())\r\n    useEffect(() => {\r\n        if (projectDocs) {\r\n            let toggleState = true\r\n            let tempMap:Map<string, boolean> = new Map()\r\n            projectDocs.forEach(project => {\r\n                tempMap.set(project.ref.id, toggleState)\r\n                toggleState = !toggleState\r\n            })\r\n            setToggleStates(tempMap)\r\n        }\r\n    }, [projectDocs])\r\n    let projectCount = 0\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title}>Noen av våre prosjekter</Typography>\r\n                    <Grid container spacing={0}>\r\n                        {\r\n                            projectDocs ?\r\n                            projectDocs.map(project => {\r\n                                projectCount++\r\n\r\n                                    return (\r\n                                    <Grid container key={project.ref.id}>\r\n                                        {\r\n                                            isMobile ?\r\n                                                <>\r\n                                                    <ProjectGrid projectData={project} />\r\n                                                    <ProjectDesc toggle={false} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\r\n                                                </>\r\n                                                :\r\n                                                (toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : false) ?\r\n                                                    <>\r\n                                                        <ProjectGrid projectData={project} />\r\n                                                        <ProjectDesc toggle={(toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : true)} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <>\r\n                                                        <ProjectDesc toggle={toggleStates && toggleStates.has(project.ref.id) ? toggleStates.get(project.ref.id) : false} projectData={project} isMobile={isMobile} isLast={projectCount === projectDocs.length} />\r\n                                                        <ProjectGrid projectData={project} />\r\n                                                    </>\r\n                                        }\r\n                                    </Grid>\r\n                                )\r\n                            }\r\n                            )\r\n                                :\r\n                                \"Prosjekter laster\"\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nfirebase.initializeApp({\r\n    apiKey: \"AIzaSyBNP28c3vsIihTrYVOzkOG_YuXgHGZvbTw\",\r\n    authDomain: \"ll-bygg.firebaseapp.com\",\r\n    projectId: \"ll-bygg\",\r\n    storageBucket: \"ll-bygg.appspot.com\",\r\n    messagingSenderId: \"1072602321840\",\r\n    appId: \"1:1072602321840:web:bfb60075079e215666bc75\"\r\n})\r\n\r\nconst firestore = firebase.app().firestore()\r\nconst auth = firebase.app().auth()\r\n\r\nexport {\r\n    firestore, auth, firebase as default\r\n}\r\n\r\n","import {Button, createStyles, makeStyles, Theme, Typography} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useState} from \"react\";\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"150px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        txtField: {\r\n            width: \"400px\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            width: \"200px\",\r\n        }\r\n    }),\r\n);\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    let [email, setEmail] = useState(\"\")\r\n    let [password, setPassword] = useState(\"\")\r\n    let [loading, setLoading] = useState(false)\r\n    let [errorState, setErrorState] = useState(\"\")\r\n    const auth = firebase.app().auth()\r\n    const history = useHistory()\r\n    const submit = () => {\r\n        setLoading(true)\r\n        auth.signInWithEmailAndPassword(email, password).then(() => {\r\n            setErrorState(\"\")\r\n            history.push(\"/adminPanel\")\r\n        }).catch(e => {\r\n            setErrorState(e.message)\r\n        }).finally(() => setLoading(false))\r\n    }\r\n    if (loading) {\r\n        return (<>Loading...</>)\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h5\"} >Logg inn</Typography>\r\n                <TextField onChange={e => {setEmail(e.target.value)}} id=\"outlined-basic\" label=\"E-post\" className={classes.txtField} variant=\"outlined\" />\r\n                <TextField onChange={e => {setPassword(e.target.value)}} type=\"password\" label=\"Passord\" className={classes.txtField} variant=\"outlined\" />\r\n                {\r\n                    errorState\r\n                }\r\n                <Button variant=\"contained\" onClick={submit} color=\"primary\" className={classes.btn}>\r\n                    Logg inn\r\n                </Button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import {Button, createStyles, InputAdornment, makeStyles, TextField, Theme} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nexport default function ProjectAdminImage(props:{onDeleteFunc:(id:number) => any, rerender:boolean, id:number, otherImages:string[], initUrl:string, onChangeFunc:(id:number, val:string) => any}) {\r\n    const [duplicate, setDuplicate] = useState(false)\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 \",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 5,\r\n                marginTop: 15,\r\n                flexWrap: \"wrap\",\r\n                flexBasis: \"90%\",\r\n\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                marginLeft: 5,\r\n                marginBottom: 12,\r\n                color: \"white\",\r\n                flexBasis: \"5%\",\r\n                height: 55,\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n            },\r\n            inputDuplicate: {\r\n                color: \"red\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [url, setUrl] = useState(props.initUrl)\r\n    useEffect(() => {\r\n        setUrl(props.initUrl)\r\n    }, [props.initUrl, props.rerender])\r\n    useEffect(() => {\r\n        let count = 0\r\n        for (let i = 0; i<props.otherImages.length; i++) {\r\n            if (props.otherImages[i] === url) {\r\n                count++\r\n            }\r\n        }\r\n        setDuplicate(count > 1)\r\n    }, [props.otherImages, url])\r\n    return (\r\n        <>\r\n            <div className={classes.div}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Bilde \" + (props.id + 1) + \" URL\"}\r\n                    value={url}\r\n                    onChange={(e) => {\r\n                        setUrl(e.target.value)\r\n                        props.onChangeFunc(props.id, e.target.value)\r\n                    }}\r\n                    InputProps={{\r\n                        className: duplicate ? classes.inputDuplicate : \"\",\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    helperText={duplicate ? \"OBS: Dette bildet har blitt lagt til flere ganger i dette prosjektet!\" : \" \"}\r\n                />\r\n                <Button\r\n                    variant={\"contained\"}\r\n                    className={classes.btn}\r\n                    color={\"secondary\"}\r\n                    onClick={(e) => {\r\n                        props.onDeleteFunc(props.id)\r\n                    }}\r\n                >\r\n                    <Delete />\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {\r\n    Backdrop,\r\n    Button,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    Link,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {Project} from \"../../types\";\r\nimport {add, collection, Doc, remove, update} from \"typesaurus\";\r\nimport {useState} from \"react\";\r\nimport ProjectAdminImage from \"./ProjectAdminImage\";\r\nimport {Add, Backspace, Delete, Description, Title, Update} from \"@material-ui/icons\";\r\nimport ProjectCarousel from \"./ProjectCarousel\";\r\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nexport default function ProjectAdminCard(props:{create:boolean, project?:Doc<Project>}) {\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(props.project ? props.project.data.thumbnail : \"\")\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                //border: \"1px solid orange\",\r\n                padding: \"15px 15px 0\",\r\n                margin: \"15px 0 30px\",\r\n                borderRadius: 10,\r\n                boxShadow: \"0 3px 5px rgba(0,0,0,0.2)\"\r\n            },\r\n            txtField: {\r\n                marginBottom: 15,\r\n            },\r\n            img: {\r\n                maxWidth: \"50%\",\r\n                maxHeight: 300,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n            },\r\n            btn: {\r\n                margin: \"0 10px 15px 0\",\r\n                color: \"white\",\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                }\r\n            },\r\n            link: {\r\n                color: \"darkblue\",\r\n                cursor: \"pointer\",\r\n                marginBottom: 15,\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n                backgroundColor: \"rgba(0,0,0,0.8)\"\r\n            },\r\n            projectGrid: {\r\n                backgroundColor: \"rgba(0,0,0,0.1)\",\r\n                height: \"100%\",\r\n                width: 400,\r\n                display: \"block\",\r\n                margin: \"15px auto\",\r\n                backgroundImage: \"url('\" + thumbnailUrl + \"')\",\r\n                backgroundSize: \"cover\",\r\n                minHeight: 250,\r\n                padding: 0,\r\n                borderRadius: 0,\r\n                cursor: \"context-menu\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const [title, setTitle] = useState(props.project ? props.project.data.title : \"\")\r\n    const [description, setDescription] = useState(props.project ? props.project.data.description : \"\")\r\n    const [images, setImages] = useState(props.project ?props.project.data.images : [\"\"])\r\n    const [open, setOpen] = useState(false)\r\n    const [rerender, setRerender] = useState(false)\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const setImageByID = (id:number, value:string) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i === id) {\r\n                res.push(value)\r\n            } else {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n    }\r\n    const deleteImageByID = (id:number) => {\r\n        let res = []\r\n        for (let i = 0; i < images.length; i++) {\r\n            if (i !== id) {\r\n                res.push(images[i])\r\n            }\r\n        }\r\n        setImages(res)\r\n        setRerender(!rerender)\r\n    }\r\n    const projectCollection = collection<Project>(\"projects\")\r\n    const updateProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            update(projectCollection, props.project.ref.id, {title: title, description: description, thumbnail: thumbnailUrl, images:images})\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt oppdatert!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const deleteProject = () => {\r\n        if (props.project) {\r\n            setIsProcessing(true)\r\n            remove(projectCollection, props.project.ref.id)\r\n                .then(() => {\r\n                    alert(\"Prosjektet har blitt slettet!\")\r\n                    setIsProcessing(false)\r\n                })\r\n                .catch((e) => {\r\n                    alert(e)\r\n                    console.error(e)\r\n                    setIsProcessing(false)\r\n                })\r\n        }\r\n    }\r\n    const createProject = () => {\r\n        setIsProcessing(true)\r\n        add(projectCollection, {title:title, description:description, images:images,thumbnail:thumbnailUrl})\r\n            .then(() => {\r\n                alert(\"Prosjektet har blitt slettet!\")\r\n                setIsProcessing(false)\r\n                setTitle(\"\")\r\n                setDescription(\"\")\r\n                setImages([\"\"])\r\n                setThumbnailUrl(\"\")\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    let i = 0\r\n    return (\r\n        <>\r\n            <Grid item xs={12} className={classes.root}>\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Tittel\"}\r\n                    value={title}\r\n                    onChange={(e) => {setTitle(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Title />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Beskrivelse\"}\r\n                    multiline\r\n                    value={description}\r\n                    onChange={(e) => {setDescription(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <Description />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Thumbnail</Typography>\r\n                <Button\r\n                    id={\"0\"}\r\n                    className={classes.projectGrid}\r\n                />\r\n                <TextField\r\n                    variant={\"outlined\"}\r\n                    className={classes.txtField}\r\n                    label={\"Thumbnail-URL\"}\r\n                    value={thumbnailUrl}\r\n                    onChange={(e) => {setThumbnailUrl(e.target.value)}}\r\n                    fullWidth\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <LinkIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Typography variant={\"h5\"} color={\"textSecondary\"}>Bilder</Typography>\r\n                {\r\n                    images.map(projectImage =>\r\n                        <ProjectAdminImage\r\n                            key={props.project ? (props.project.data.images[i] + \" \" + i) : i}\r\n                            otherImages={images}\r\n                            rerender={rerender}\r\n                            id={i++}\r\n                            onChangeFunc={(id, val) => {\r\n                                setImageByID(id, val)\r\n                            }}\r\n                            initUrl={projectImage}\r\n                            onDeleteFunc={(id:number) => deleteImageByID(id)}\r\n                        />\r\n                    )\r\n                }\r\n                <Button\r\n                    className={classes.btn + \" \" + classes.btnGreen}\r\n                    startIcon={<Add />}\r\n                    variant={\"contained\"}\r\n                    onClick={() => {\r\n                        let temp = images\r\n                        temp.push(\"\")\r\n                        setImages(temp)\r\n                        setRerender(!rerender)\r\n                    }}\r\n                    disabled={isProcessing}\r\n                >\r\n                    Legg til bilde\r\n                </Button>\r\n                <div className={classes.link}>\r\n                    <Link underline={\"always\"} color={\"textPrimary\"} onClick={() => {setOpen(true)}}>Forhåndsvis karusell</Link>\r\n                </div>\r\n                {\r\n                    (!props.create && props.project) ?\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Update />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateProject()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGrey}\r\n                                startIcon={<Backspace />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setImages(props.project!.data.images)\r\n                                    setTitle(props.project!.data.title)\r\n                                    setDescription(props.project!.data.description)\r\n                                    setThumbnailUrl(props.project!.data.thumbnail)\r\n                                    setRerender(!rerender)\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.btn}\r\n                                startIcon={<Delete />}\r\n                                variant={\"contained\"}\r\n                                color={\"secondary\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    setOpenDialog(true)\r\n                                }}\r\n                            >\r\n                                Slett\r\n                            </Button>\r\n                            <ConfirmDeleteDialog\r\n                                key={props.project.ref.id}\r\n                                setIsOpen={setOpenDialog}\r\n                                isOpen={openDialog}\r\n                                title={\"Er du sikker på at du vil slette prosjektet?\"}\r\n                                information={\"Prosjektet det gjelder: \" + props.project.data.title}\r\n                                deleteFunc={deleteProject}\r\n                            />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Button\r\n                                className={classes.btn + \" \" + classes.btnGreen}\r\n                                startIcon={<Add />}\r\n                                variant={\"contained\"}\r\n                                disabled={isProcessing}\r\n                                onClick={() => createProject()}\r\n                            >\r\n                                Legg til prosjekt\r\n                            </Button>\r\n                        </>\r\n\r\n                }\r\n                <Backdrop className={classes.backdrop} open={open} onClick={() => {setOpen(false)}}>\r\n                    <ProjectCarousel imgUrls={images} />\r\n                </Backdrop>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {Container, createStyles, Grid, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {collection} from \"typesaurus\";\r\nimport {Project} from \"../../types\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport ProjectAdminCard from \"./ProjectAdminCard\";\r\n\r\nexport default function ProjectsAdmin(props: {margin:number}) {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: props.margin + \"px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles();\r\n    // Retrieve projects from db\r\n    const projectsCol = collection<Project>(\"projects\")\r\n    const [projectDocs] = useOnAll(projectsCol)\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12}>\r\n                    <Typography variant={\"h4\"} className={classes.title}>Våre prosjekter</Typography>\r\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Nytt prosjekt</Typography>\r\n                    <ProjectAdminCard create={true} key={0} />\r\n                    <Typography variant={\"h5\"} color={\"textSecondary\"} className={classes.title}>Rediger prosjekter</Typography>\r\n                    {\r\n                        projectDocs &&\r\n                            projectDocs.map(project =>\r\n                            <ProjectAdminCard create={false} key={project.ref.id} project={project} />\r\n                        )\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {Add, Backspace, Email, Facebook, Instagram, Link, Map, Phone, Room, Update} from \"@material-ui/icons\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {FooterSection} from \"../types\";\r\nimport {useOnGet} from \"@typesaurus/react\";\r\n\r\nexport default function FooterAdmin() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                backgroundColor: \"#222\",\r\n                width: \"100%\",\r\n                padding: \"50px 0\"\r\n            },\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                textAlign: \"left\",\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                margin: \"auto\",\r\n            },\r\n            div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                width: \"100%\",\r\n            },\r\n            txtField: {\r\n                margin: \"7.5px 15px 7.5px 0\"\r\n            },\r\n            btnGreen: {\r\n                backgroundColor: \"green\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n            },\r\n            btnGrey: {\r\n                backgroundColor: \"grey\",\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"#333\",\r\n                },\r\n                marginBottom: 50,\r\n                marginRight: 10,\r\n                border: \"none\",\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    const pageElements = collection(\"pageElements\")\r\n    const [footerDoc, status] = useOnGet<FooterSection>(pageElements, \"footer\")\r\n    const [countryCode, setCountryCode] = useState(47)\r\n    const [email, setEmail] = useState(\"\")\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\r\n    const [address, setAddress] = useState(\"\")\r\n    const [mapsUrl, setMapsUrl] = useState(\"\")\r\n    const [ig, setIg] = useState(\"\")\r\n    const [fb, setFb] = useState(\"\")\r\n    const [mapEmbed, setMapEmbed] = useState(\"\")\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n    useEffect(() => {\r\n        if (footerDoc && !status.loading && !status.error) {\r\n            setCountryCode(footerDoc.data.countryCode)\r\n            setPhoneNumber(footerDoc.data.phone)\r\n            setAddress(footerDoc.data.address)\r\n            setMapsUrl(footerDoc.data.mapsUrl)\r\n            setEmail(footerDoc.data.email)\r\n            setIg(footerDoc.data.igLink)\r\n            setFb(footerDoc.data.fbLink)\r\n            setMapEmbed(footerDoc.data.mapsEmbed)\r\n        }\r\n    }, [footerDoc, status.error, status.loading])\r\n    const updateFooter = () => {\r\n        setIsProcessing(true)\r\n        update(pageElements, \"footer\", {countryCode:countryCode, address:address, email:email, fbLink:fb, igLink:ig, phone:phoneNumber, mapsUrl:mapsUrl, mapsEmbed:mapEmbed})\r\n            .then(() => {\r\n                alert(\"Footeren har blitt oppdatert!\")\r\n                setIsProcessing(false)\r\n            })\r\n            .catch((e) => {\r\n                alert(e)\r\n                console.error(e)\r\n                setIsProcessing(false)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container spacing={4} alignItems={\"center\"}>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={\"h4\"}>\r\n                                Rediger footer\r\n                            </Typography>\r\n                            <div className={classes.div}>\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Landkode\"}\r\n                                    value={countryCode}\r\n                                    type={\"number\"}\r\n                                    onChange={(e) => setCountryCode(parseInt(e.target.value))}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Add />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                                <TextField\r\n                                    className={classes.txtField}\r\n                                    fullWidth\r\n                                    variant={\"outlined\"}\r\n                                    label={\"Telefonnummer\"}\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Phone />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"E-post\"}\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Email />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Adresse\"}\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Room />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                fullWidth\r\n                                variant={\"outlined\"}\r\n                                label={\"Google Maps URL\"}\r\n                                value={mapsUrl}\r\n                                onChange={(e) => setMapsUrl(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Map />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Instagram-URL\"}\r\n                                value={ig}\r\n                                onChange={(e) => setIg(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Instagram />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Facebook-URL\"}\r\n                                value={fb}\r\n                                onChange={(e) => setFb(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Facebook />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <TextField\r\n                                className={classes.txtField}\r\n                                variant={\"outlined\"}\r\n                                fullWidth\r\n                                label={\"Google maps embed-src\"}\r\n                                value={mapEmbed}\r\n                                onChange={(e) => setMapEmbed(e.target.value)}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Link />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Update />}\r\n                                className={classes.btnGreen}\r\n                                disabled={isProcessing}\r\n                                onClick={() => updateFooter()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                            <Button\r\n                                variant={\"outlined\"}\r\n                                startIcon={<Backspace />}\r\n                                className={classes.btnGrey}\r\n                                disabled={isProcessing}\r\n                                onClick={() => {\r\n                                    if (footerDoc) {\r\n                                        setPhoneNumber(footerDoc.data.phone)\r\n                                        setMapEmbed(footerDoc.data.mapsEmbed)\r\n                                        setEmail(footerDoc.data.email)\r\n                                        setAddress(footerDoc.data.address)\r\n                                        setMapsUrl(footerDoc.data.mapsUrl)\r\n                                        setIg(footerDoc.data.igLink)\r\n                                        setFb(footerDoc.data.fbLink)\r\n                                        setCountryCode(footerDoc.data.countryCode)\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Angre alle endringer\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","\r\nconst validateImage = async (url:string, errorFunc:() => any, successFunc:() => any) => {\r\n    let img = new Image()\r\n    img.onerror = () => errorFunc()\r\n    img.onload = () => successFunc()\r\n    img.src = url\r\n}\r\n\r\nexport {validateImage}","import {\r\n    Button,\r\n    Container,\r\n    createStyles,\r\n    Grid,\r\n    InputAdornment,\r\n    makeStyles,\r\n    TextField,\r\n    Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {HeaderSection} from \"../../types\";\r\nimport {collection, update} from \"typesaurus\";\r\nimport {useGet} from \"@typesaurus/react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {validateImage} from \"../../adminUtils\";\r\nimport {Link, Update} from \"@material-ui/icons\";\r\n\r\nlet logoImg = require(\"./llbygg_redusert.png\")\r\nconst darkness = 0.25 // Higher = darker\r\n\r\nexport default function HeaderAdmin() {\r\n    const pageElem = collection(\"pageElements\")\r\n    const [isValidImg, setIsValidImg] = useState(true)\r\n    let [img] = useGet<HeaderSection>(pageElem, \"header\")\r\n    let [inputImg, setInputImg] = useState(\"\")\r\n    const uploadImg = () => {\r\n        setIsValidImg(false)\r\n        let pageElements = collection(\"pageElements\")\r\n        update(pageElements, \"header\", {imgUrl : inputImg}).then(() => {\r\n            alert(\"Header har blitt oppdatert!\")\r\n            setIsValidImg(true)\r\n        }).catch((e) => {\r\n            alert(e)\r\n            setIsValidImg(true)\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        if (img) {\r\n            setInputImg(img.data.imgUrl)\r\n        }\r\n    }, [img])\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            container: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                margin: \"15px auto\",\r\n                textAlign: \"left\",\r\n            },\r\n            title: {\r\n                marginBottom: 15,\r\n            },\r\n            header: {\r\n                height: \"85vh\",\r\n                background: \"linear-gradient( rgba(0, 0, 0, \" + darkness + \"), rgba(0, 0, 0, \" + darkness + \") ), url('\" + (inputImg) + \"')\",\r\n                backgroundAttachment: \"fixed\",\r\n                backgroundSize: \"cover\",\r\n                boxShadow: \"inset 0 0 7em 1em #000\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n            },\r\n            typography: {\r\n                color: \"white\",\r\n                marginTop: 20,\r\n            },\r\n            imgBg: {\r\n                backgroundColor: \"rgba(0,0,0,0.5)\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                padding: 10,\r\n            },\r\n            gridContainer: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                margin: \"auto\",\r\n            },\r\n            greenBtn: {\r\n                backgroundColor: \"green\",\r\n                marginTop: 15,\r\n                color: \"white\",\r\n                \"&:hover\": {\r\n                    backgroundColor: \"darkgreen\",\r\n                }\r\n            }\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <div className={classes.header}>\r\n                <img alt={\"Header\"} className={\"headerAnim\"} src={logoImg.default} height={200} />\r\n            </div>\r\n            <Container className={classes.container}>\r\n                <Grid item lg={8} md={10} xs={12} className={classes.gridContainer}>\r\n                    <Grid container direction={\"column\"}>\r\n                        <Typography variant={\"h4\"} className={classes.title}>\r\n                            Rediger header\r\n                        </Typography>\r\n                        <div>\r\n                            <TextField\r\n                                variant={\"outlined\"}\r\n                                label={\"Bilde-URL\"}\r\n                                value={inputImg}\r\n                                fullWidth\r\n                                onChange={e => {\r\n                                    setInputImg(e.target.value)\r\n                                    validateImage(e.target.value, () => setIsValidImg(false), () => setIsValidImg(true))\r\n                                }}\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <Link />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                variant={\"contained\"}\r\n                                startIcon={<Update />}\r\n                                className={classes.greenBtn}\r\n                                disabled={!isValidImg}\r\n                                onClick={() => uploadImg()}\r\n                            >\r\n                                Oppdater\r\n                            </Button>\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {Button, createStyles, Divider, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport Services from \"../services/Services\";\r\nimport About from \"../about/About\";\r\nimport News from \"../news/News\";\r\nimport React from \"react\";\r\nimport ProjectsAdmin from \"../projects/ProjectsAdmin\";\r\nimport FooterAdmin from \"../FooterAdmin\";\r\nimport HeaderAdmin from \"../header/HeaderAdmin\";\r\nimport {NewsDoc} from \"../../types\";\r\nimport {collection} from \"typesaurus\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport {auth} from \"../../firebase\"\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                margin: \"10px auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n            },\r\n            margin: \"20px auto 0\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n        },\r\n        btn: {\r\n            color: \"white\",\r\n            backgroundColor: \"green\",\r\n            width: \"300px\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"darkgreen\",\r\n            }\r\n        },\r\n        divider: {\r\n            width: \"30vw\",\r\n            margin: \"auto\",\r\n        },\r\n    }),\r\n);\r\nexport default function AdminPanel() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const newsCollection = collection<NewsDoc>(\"news\")\r\n    const [newsDocs] = useOnAll(newsCollection)\r\n    let margin = 15\r\n    const submit = () => {\r\n        auth.signOut().then(() => {\r\n            history.push(\"/\")\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Typography variant={\"h4\"}>Administrator-panel</Typography>\r\n                <Button startIcon={<MeetingRoomIcon />} fullWidth variant=\"contained\" onClick={submit} className={classes.btn}>\r\n                    Logg ut\r\n                </Button>\r\n            </form>\r\n            <HeaderAdmin />\r\n            <Services admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <About admin={true} margin={margin} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <ProjectsAdmin margin={15} />\r\n            <Divider className={classes.divider} />\r\n\r\n            <News admin={true} news={newsDocs ? newsDocs : []} margin={margin} />\r\n\r\n\r\n            <FooterAdmin />\r\n        </>\r\n    )\r\n}","import {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/header/Header\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport About from \"./components/about/About\";\r\nimport {Backdrop, CircularProgress, createStyles, Divider, makeStyles, Theme} from \"@material-ui/core\";\r\nimport Services from \"./components/services/Services\";\r\nimport Footer from \"./components/Footer\";\r\nimport ContactForm from \"./components/contactform/ContactForm\";\r\nimport News from \"./components/news/News\"\r\nimport {\r\n    createMuiTheme,\r\n    ThemeProvider,\r\n} from '@material-ui/core/styles';\r\nimport Projects from \"./components/projects/Projects\";\r\nimport { ScrollingProvider, Section } from \"react-scroll-section\";\r\nimport {HashRouter as Router, Switch, Route, RouteProps} from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport \"./firebase\"\r\nimport Login from \"./components/login/Login\";\r\nimport AdminPanel from \"./components/adminpanel/AdminPanel\";\r\nimport {collection} from \"typesaurus\";\r\nimport {NewsDoc} from \"./types\";\r\nimport {useOnAll} from \"@typesaurus/react\";\r\nimport { auth } from \"./firebase\";\r\n\r\n\r\nfunction App() {\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            divider: {\r\n                width: \"30vw\",\r\n                margin: \"auto\",\r\n            },\r\n            backdrop: {\r\n                zIndex: theme.zIndex.drawer + 1,\r\n                color: '#fff',\r\n                backgroundColor: \"black\",\r\n            },\r\n        }),\r\n    );\r\n    const classes = useStyles()\r\n    let margin = 50;\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#FF8C00\"\r\n            },\r\n        },\r\n        typography: {\r\n            h5: {\r\n                fontFamily: [\r\n                    \"Poppins\",\r\n                    \"Urbanist\",\r\n                    \"Roboto\",\r\n                ].join(\",\"),\r\n                fontSize: 25,\r\n            },\r\n            h4: {\r\n                fontFamily: [\r\n                    \"Poppins\",\r\n                    \"Urbanist\",\r\n                    \"Roboto\",\r\n                ].join(\",\"),\r\n                fontSize: 35,\r\n                color: \"#666\"\r\n            },\r\n            body1: {\r\n                fontFamily: [\r\n                    \"Urbanist\",\r\n                    \"Roboto\",\r\n                ].join(\",\"),\r\n                fontSize: 18,\r\n            },\r\n            body2: {\r\n                fontSize: 16,\r\n            }\r\n\r\n        }\r\n    });\r\n    const newsCol = collection<NewsDoc>(\"news\")\r\n    const [news] = useOnAll(newsCol)\r\n    const [displayOverlay, setDisplayOverlay] = useState(true)\r\n    if (news && displayOverlay) {\r\n        setTimeout(() => {\r\n            setDisplayOverlay(false);\r\n        }, 1000);\r\n    }\r\n    const menuItems =\r\n        news && news.length > 0 ?\r\n            [ // [section-reference, menu-text]\r\n                [\"hjemRef\", \"hjem\"],\r\n                [\"tjenesteRef\", \"våre tjenester\"],\r\n                [\"omRef\", \"om oss\"],\r\n                [\"prosjektRef\", \"våre prosjekter\"],\r\n                [\"nyhetRef\", \"Nyheter\"],\r\n                [\"kontaktRef\", \"kontakt oss\"]\r\n            ]\r\n            :\r\n            [ // [section-reference, menu-text]\r\n                [\"hjemRef\", \"hjem\"],\r\n                [\"tjenesteRef\", \"våre tjenester\"],\r\n                [\"omRef\", \"om oss\"],\r\n                [\"prosjektRef\", \"våre prosjekter\"],\r\n                [\"kontaktRef\", \"kontakt oss\"]\r\n            ]\r\n    // Detect mobile screen\r\n    const [width, setWidth] = useState<number>(window.innerWidth);\r\n    function handleWindowSizeChange() {\r\n        setWidth(window.innerWidth);\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('resize', handleWindowSizeChange);\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowSizeChange);\r\n        }\r\n    }, []);\r\n    let isMobile: boolean = (width <= 599); // Mobile if width <= 599px (Material UI Grid breakpoint)\r\n    let isIpad: boolean = !isMobile && width <= 1366\r\n    return (\r\n        <div className=\"App\">\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={displayOverlay}\r\n                onClick={(e) => e}\r\n                transitionDuration={{appear:0, enter:0, exit:2000}}\r\n            >\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"#f0852b\" strokeWidth=\"45\" width={isMobile ? \"25vw\" : \"10vw\"}\r\n                     viewBox=\"0 0 521.42 368.27\">\r\n                    <polyline\r\n                        className=\"path\"\r\n                        points=\"92.31 344.77 22.5 344.77 22.5 200.11 190.43 32.19 358.83 199.6 358.83 345.77 163.78 345.77 163.78 199.6 331.31 31.79 498.92 198.4 498.92 345.77 426.27 345.77\"\r\n                    />\r\n                </svg>\r\n            </Backdrop>\r\n            {\r\n                news &&\r\n                <ScrollingProvider scrollBehavior={\"smooth\"}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <Router basename={process.env.PUBLIC_URL}>\r\n                            <Switch>\r\n                                <DisallowAuthenticatedRoute path={\"/admin\"}>\r\n                                    <Login />\r\n                                </DisallowAuthenticatedRoute>\r\n                                <AuthenticatedRoute path={\"/adminPanel\"}>\r\n                                    <AdminPanel />\r\n                                </AuthenticatedRoute>\r\n                                <UnAuthenticatedRoute path={\"/\"}>\r\n                                    <NavigationBar menuItems={menuItems} />\r\n\r\n                                    <Section id={\"hjemRef\"}>\r\n                                        <Header isMobile={isMobile} isIpad={isIpad} />\r\n                                    </Section>\r\n\r\n                                    <Section id={\"tjenesteRef\"}>\r\n                                        <Services margin={margin} admin={false} />\r\n                                    </Section>\r\n                                    <Divider className={classes.divider} />\r\n\r\n                                    <Section id={\"omRef\"}>\r\n                                        <About admin={false} margin={margin} />\r\n                                    </Section>\r\n                                    <Divider className={classes.divider} />\r\n\r\n                                    <Section id={\"prosjektRef\"}>\r\n                                        <Projects margin={margin} />\r\n                                    </Section>\r\n                                    <Divider className={classes.divider} />\r\n                                    {\r\n                                        news && news.length > 0 &&\r\n                                        <>\r\n                                            <Section id={\"nyhetRef\"}>\r\n                                                <News admin={false} news={news} margin={margin} />\r\n                                            </Section>\r\n                                            <Divider className={classes.divider} />\r\n                                        </>\r\n                                    }\r\n                                    <Section id={\"kontaktRef\"}>\r\n                                        <ContactForm margin={margin} />\r\n                                    </Section>\r\n                                    <Footer />\r\n                                </UnAuthenticatedRoute>\r\n                            </Switch>\r\n                        </Router>\r\n                    </ThemeProvider>\r\n                </ScrollingProvider>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n// Redirect user\r\ninterface AuthRouteProps extends RouteProps {\r\n    redirect?: string\r\n}\r\n\r\nfunction AuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\r\n    const [user, loading, error] = useAuthState(auth)\r\n    error && console.error(error)\r\n    return (\r\n        <Route {...rest}>\r\n            {loading && <CircularProgress />}\r\n            {((!user && !loading) || error) && <Redirect to={redirect} />}\r\n            {user && children}\r\n        </Route>\r\n    )\r\n}\r\n\r\nfunction UnAuthenticatedRoute({ children, redirect = \"/\", ...rest }: AuthRouteProps) {\r\n    return (\r\n        <Route {...rest}>\r\n            {children}\r\n        </Route>\r\n    )\r\n}\r\n\r\nfunction DisallowAuthenticatedRoute({ children, redirect = \"/adminPanel\", ...rest }: AuthRouteProps) {\r\n    const [user, loading, error] = useAuthState(auth)\r\n    error && console.error(error)\r\n    return (\r\n        <Route {...rest}>\r\n            {loading && <CircularProgress />}\r\n            {((user && !loading)) && <Redirect to={redirect} />}\r\n            {(!user || error) && !loading && children}\r\n        </Route>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}